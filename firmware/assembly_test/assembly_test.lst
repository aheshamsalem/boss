ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"assembly_test.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.dma_init,"ax",%progbits
  19              		.align	1
  20              		.thumb
  21              		.thumb_func
  23              	dma_init:
  24              	.LFB9:
  25              		.file 1 "assembly_test.c"
   1:assembly_test.c **** /*
   2:assembly_test.c ****  * Copyright 2010 Michael Ossmann
   3:assembly_test.c ****  *
   4:assembly_test.c ****  * This file is part of Project Ubertooth.
   5:assembly_test.c ****  *
   6:assembly_test.c ****  * This program is free software; you can redistribute it and/or modify
   7:assembly_test.c ****  * it under the terms of the GNU General Public License as published by
   8:assembly_test.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:assembly_test.c ****  * any later version.
  10:assembly_test.c ****  *
  11:assembly_test.c ****  * This program is distributed in the hope that it will be useful,
  12:assembly_test.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:assembly_test.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:assembly_test.c ****  * GNU General Public License for more details.
  15:assembly_test.c ****  *
  16:assembly_test.c ****  * You should have received a copy of the GNU General Public License
  17:assembly_test.c ****  * along with this program; see the file COPYING.  If not, write to
  18:assembly_test.c ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  19:assembly_test.c ****  * Boston, MA 02110-1301, USA.
  20:assembly_test.c ****  */
  21:assembly_test.c **** 
  22:assembly_test.c **** /*
  23:assembly_test.c **** 	LPCUSB, an USB device driver for LPC microcontrollers	
  24:assembly_test.c **** 	Copyright (C) 2006 Bertrik Sikken (bertrik@sikken.nl)
  25:assembly_test.c **** 
  26:assembly_test.c **** 	Redistribution and use in source and binary forms, with or without
  27:assembly_test.c **** 	modification, are permitted provided that the following conditions are met:
  28:assembly_test.c **** 
  29:assembly_test.c **** 	1. Redistributions of source code must retain the above copyright
  30:assembly_test.c **** 	   notice, this list of conditions and the following disclaimer.
  31:assembly_test.c **** 	2. Redistributions in binary form must reproduce the above copyright
  32:assembly_test.c **** 	   notice, this list of conditions and the following disclaimer in the
  33:assembly_test.c **** 	   documentation and/or other materials provided with the distribution.
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 2


  34:assembly_test.c **** 	3. The name of the author may not be used to endorse or promote products
  35:assembly_test.c **** 	   derived from this software without specific prior written permission.
  36:assembly_test.c **** 
  37:assembly_test.c **** 	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  38:assembly_test.c **** 	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  39:assembly_test.c **** 	OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  40:assembly_test.c **** 	IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, 
  41:assembly_test.c **** 	INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  42:assembly_test.c **** 	NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  43:assembly_test.c **** 	DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  44:assembly_test.c **** 	THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  45:assembly_test.c **** 	(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  46:assembly_test.c **** 	THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:assembly_test.c **** */
  48:assembly_test.c **** /* For git version strings */
  49:assembly_test.c **** #include <string.h>
  50:assembly_test.c **** 
  51:assembly_test.c **** #include "ubertooth.h"
  52:assembly_test.c **** #include "usbapi.h"
  53:assembly_test.c **** #include "usbhw_lpc.h"
  54:assembly_test.c **** 
  55:assembly_test.c **** /*
  56:assembly_test.c ****  * CLK100NS is a free-running clock with a period of 100ns.  It resets every
  57:assembly_test.c ****  * 2^15 * 10^5 cycles (about 5.5 minutes) and is used to compute CLKN.
  58:assembly_test.c ****  *
  59:assembly_test.c ****  * CLKN is the native (local) clock as defined in the Bluetooth specification.
  60:assembly_test.c ****  * It advances 3200 times per second.  Two CLKN periods make a Bluetooth time
  61:assembly_test.c ****  * slot.
  62:assembly_test.c ****  */
  63:assembly_test.c **** 
  64:assembly_test.c **** #define CLK100NS T0TC
  65:assembly_test.c **** volatile u8 clkn_high;
  66:assembly_test.c **** #define CLKN ((clkn_high << 20) | (CLK100NS / 3125))
  67:assembly_test.c **** 
  68:assembly_test.c **** #define BULK_IN_EP		0x82
  69:assembly_test.c **** #define BULK_OUT_EP		0x05
  70:assembly_test.c **** 
  71:assembly_test.c **** #define MAX_PACKET_SIZE	64
  72:assembly_test.c **** 
  73:assembly_test.c **** #define LE_WORD(x)		((x)&0xFF),((x)>>8)
  74:assembly_test.c **** 
  75:assembly_test.c **** /* DMA buffers */
  76:assembly_test.c **** #define DMA_SIZE 50
  77:assembly_test.c **** u8 rxbuf1[DMA_SIZE];
  78:assembly_test.c **** u8 rxbuf2[DMA_SIZE];
  79:assembly_test.c **** 
  80:assembly_test.c **** /*
  81:assembly_test.c ****  * The active buffer is the one with an active DMA transfer.
  82:assembly_test.c ****  * The idle buffer is the one we can read/write between transfers.
  83:assembly_test.c ****  */
  84:assembly_test.c **** u8 *active_rxbuf = &rxbuf1[0];
  85:assembly_test.c **** u8 *idle_rxbuf = &rxbuf2[0];
  86:assembly_test.c **** 
  87:assembly_test.c **** rangetest_result rr;
  88:assembly_test.c **** 
  89:assembly_test.c **** volatile u32 mode = MODE_IDLE;
  90:assembly_test.c **** volatile u32 requested_mode = MODE_IDLE;
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 3


  91:assembly_test.c **** volatile u32 modulation = MOD_BT_BASIC_RATE;
  92:assembly_test.c **** volatile u16 channel = 2441;
  93:assembly_test.c **** volatile u16 low_freq = 2400;
  94:assembly_test.c **** volatile u16 high_freq = 2483;
  95:assembly_test.c **** 
  96:assembly_test.c **** /* DMA linked list items */
  97:assembly_test.c **** typedef struct {
  98:assembly_test.c **** 	u32 src;
  99:assembly_test.c **** 	u32 dest;
 100:assembly_test.c **** 	u32 next_lli;
 101:assembly_test.c **** 	u32 control;
 102:assembly_test.c **** } dma_lli;
 103:assembly_test.c **** 
 104:assembly_test.c **** dma_lli rx_dma_lli1;
 105:assembly_test.c **** dma_lli rx_dma_lli2;
 106:assembly_test.c **** 
 107:assembly_test.c **** /* rx terminal count and error interrupt counters */
 108:assembly_test.c **** volatile u32 rx_tc;
 109:assembly_test.c **** volatile u32 rx_err;
 110:assembly_test.c **** 
 111:assembly_test.c **** /* number of rx USB packets to send */
 112:assembly_test.c **** volatile u32 rx_pkts = 0;
 113:assembly_test.c **** 
 114:assembly_test.c **** /* status information byte */
 115:assembly_test.c **** volatile u8 status = 0;
 116:assembly_test.c **** 
 117:assembly_test.c **** #define DMA_OVERFLOW  0x01
 118:assembly_test.c **** #define DMA_ERROR     0x02
 119:assembly_test.c **** #define FIFO_OVERFLOW 0x04
 120:assembly_test.c **** 
 121:assembly_test.c **** /*
 122:assembly_test.c ****  * This is supposed to be a lock-free ring buffer, but I haven't verified
 123:assembly_test.c ****  * atomicity of the operations on head and tail.
 124:assembly_test.c ****  */
 125:assembly_test.c **** 
 126:assembly_test.c **** usb_pkt_rx fifo[128];
 127:assembly_test.c **** 
 128:assembly_test.c **** volatile u32 head = 0;
 129:assembly_test.c **** volatile u32 tail = 0;
 130:assembly_test.c **** 
 131:assembly_test.c **** void queue_init()
 132:assembly_test.c **** {
 133:assembly_test.c **** 	head = 0;
 134:assembly_test.c **** 	tail = 0;
 135:assembly_test.c **** }
 136:assembly_test.c **** 
 137:assembly_test.c **** int enqueue(u8 *buf)
 138:assembly_test.c **** {
 139:assembly_test.c **** 	int i;
 140:assembly_test.c **** 	u8 h = head & 0x7F;
 141:assembly_test.c **** 	u8 t = tail & 0x7F;
 142:assembly_test.c **** 	u8 n = (t + 1) & 0x7F;
 143:assembly_test.c **** 
 144:assembly_test.c **** 	/* fail if queue is full */
 145:assembly_test.c **** 	if (h == n)
 146:assembly_test.c **** 		return 0;
 147:assembly_test.c **** 
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 4


 148:assembly_test.c **** 	fifo[t].clkn_high = clkn_high;
 149:assembly_test.c **** 	fifo[t].clk100ns = CLK100NS;
 150:assembly_test.c **** 
 151:assembly_test.c **** 	USRLED_SET;
 152:assembly_test.c **** 	for (i = 0; i < DMA_SIZE; i++)
 153:assembly_test.c **** 		fifo[t].data[i] = buf[i];
 154:assembly_test.c **** 	fifo[t].status = status;
 155:assembly_test.c **** 	status = 0;
 156:assembly_test.c **** 	++tail;
 157:assembly_test.c **** 
 158:assembly_test.c **** 	return 1;
 159:assembly_test.c **** }
 160:assembly_test.c **** 
 161:assembly_test.c **** int dequeue()
 162:assembly_test.c **** {
 163:assembly_test.c **** 	u8 h = head & 0x7F;
 164:assembly_test.c **** 	u8 t = tail & 0x7F;
 165:assembly_test.c **** 
 166:assembly_test.c **** 	/* fail if queue is empty */
 167:assembly_test.c **** 	if (h == t) {
 168:assembly_test.c **** 		USRLED_CLR;
 169:assembly_test.c **** 		return 0;
 170:assembly_test.c **** 	}
 171:assembly_test.c **** 
 172:assembly_test.c **** 	USBHwEPWrite(BULK_IN_EP, (u8 *)&fifo[h], sizeof(usb_pkt_rx));
 173:assembly_test.c **** 	++head;
 174:assembly_test.c **** 
 175:assembly_test.c **** 	return 1;
 176:assembly_test.c **** }
 177:assembly_test.c **** 
 178:assembly_test.c **** static const u8 abDescriptors[] = {
 179:assembly_test.c **** 
 180:assembly_test.c **** /* Device descriptor */
 181:assembly_test.c **** 	0x12,              		
 182:assembly_test.c **** 	DESC_DEVICE,       		
 183:assembly_test.c **** 	LE_WORD(0x0200),		// bcdUSB	
 184:assembly_test.c **** 	0xFF,              		// bDeviceClass
 185:assembly_test.c **** 	0x00,              		// bDeviceSubClass
 186:assembly_test.c **** 	0x00,              		// bDeviceProtocol
 187:assembly_test.c **** 	MAX_PACKET_SIZE0,  		// bMaxPacketSize
 188:assembly_test.c **** 	LE_WORD(0xFFFF),		// idVendor
 189:assembly_test.c **** 	LE_WORD(0x0004),		// idProduct
 190:assembly_test.c **** 	LE_WORD(0x0100),		// bcdDevice
 191:assembly_test.c **** 	0x01,              		// iManufacturer
 192:assembly_test.c **** 	0x02,              		// iProduct
 193:assembly_test.c **** 	0x03,              		// iSerialNumber
 194:assembly_test.c **** 	0x01,              		// bNumConfigurations
 195:assembly_test.c **** 
 196:assembly_test.c **** // configuration
 197:assembly_test.c **** 	0x09,
 198:assembly_test.c **** 	DESC_CONFIGURATION,
 199:assembly_test.c **** 	LE_WORD(0x20),  		// wTotalLength
 200:assembly_test.c **** 	0x01,  					// bNumInterfaces
 201:assembly_test.c **** 	0x01,  					// bConfigurationValue
 202:assembly_test.c **** 	0x00,  					// iConfiguration
 203:assembly_test.c **** 	0x80,  					// bmAttributes
 204:assembly_test.c **** 	0x32,  					// bMaxPower
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 5


 205:assembly_test.c **** 
 206:assembly_test.c **** // interface
 207:assembly_test.c **** 	0x09,   				
 208:assembly_test.c **** 	DESC_INTERFACE, 
 209:assembly_test.c **** 	0x00,  		 			// bInterfaceNumber
 210:assembly_test.c **** 	0x00,   				// bAlternateSetting
 211:assembly_test.c **** 	0x02,   				// bNumEndPoints
 212:assembly_test.c **** 	0xFF,   				// bInterfaceClass
 213:assembly_test.c **** 	0x00,   				// bInterfaceSubClass
 214:assembly_test.c **** 	0x00,   				// bInterfaceProtocol
 215:assembly_test.c **** 	0x00,   				// iInterface
 216:assembly_test.c **** 
 217:assembly_test.c **** // bulk in
 218:assembly_test.c **** 	0x07,   		
 219:assembly_test.c **** 	DESC_ENDPOINT,   		
 220:assembly_test.c **** 	BULK_IN_EP,				// bEndpointAddress
 221:assembly_test.c **** 	0x02,   				// bmAttributes = BULK
 222:assembly_test.c **** 	LE_WORD(MAX_PACKET_SIZE),// wMaxPacketSize
 223:assembly_test.c **** 	0,						// bInterval   		
 224:assembly_test.c **** 
 225:assembly_test.c **** // bulk out
 226:assembly_test.c **** 	0x07,   		
 227:assembly_test.c **** 	DESC_ENDPOINT,   		
 228:assembly_test.c **** 	BULK_OUT_EP,			// bEndpointAddress
 229:assembly_test.c **** 	0x02,   				// bmAttributes = BULK
 230:assembly_test.c **** 	LE_WORD(MAX_PACKET_SIZE),// wMaxPacketSize
 231:assembly_test.c **** 	0,						// bInterval 
 232:assembly_test.c **** 
 233:assembly_test.c **** // string descriptors
 234:assembly_test.c **** 	0x04,
 235:assembly_test.c **** 	DESC_STRING,
 236:assembly_test.c **** 	LE_WORD(0x0409),
 237:assembly_test.c **** 
 238:assembly_test.c **** 	// manufacturer string
 239:assembly_test.c **** 	0x44,
 240:assembly_test.c **** 	DESC_STRING,
 241:assembly_test.c **** 	'h', 0, 't', 0, 't', 0, 'p', 0, ':', 0, '/', 0, '/', 0, 'u', 0,
 242:assembly_test.c **** 	'b', 0, 'e', 0, 'r', 0, 't', 0, 'o', 0, 'o', 0, 't', 0, 'h', 0,
 243:assembly_test.c **** 	'.', 0, 's', 0, 'o', 0, 'u', 0, 'r', 0, 'c', 0, 'e', 0, 'f', 0,
 244:assembly_test.c **** 	'o', 0, 'r', 0, 'g', 0, 'e', 0, '.', 0, 'n', 0, 'e', 0, 't', 0,
 245:assembly_test.c **** 	'/', 0,
 246:assembly_test.c **** 
 247:assembly_test.c **** 	// product string
 248:assembly_test.c **** 	0x30,
 249:assembly_test.c **** 	DESC_STRING,
 250:assembly_test.c **** 	'u', 0, 'b', 0, 'e', 0, 'r', 0, 't', 0, 'o', 0, 'o', 0, 't', 0,
 251:assembly_test.c **** 	'h', 0, ' ', 0, 'a', 0, 's', 0, 's', 0, 'e', 0, 'm', 0, 'b', 0,
 252:assembly_test.c **** 	'l', 0, 'y', 0, '_', 0, 't', 0, 'e', 0, 's', 0, 't', 0,
 253:assembly_test.c **** 
 254:assembly_test.c **** 	// serial number string
 255:assembly_test.c **** 	0x12,
 256:assembly_test.c **** 	DESC_STRING,
 257:assembly_test.c **** 	'0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '1', 0,
 258:assembly_test.c **** 
 259:assembly_test.c **** 	// terminator
 260:assembly_test.c **** 	0
 261:assembly_test.c **** };
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 6


 262:assembly_test.c **** 
 263:assembly_test.c **** static u8 abVendorReqData[17];
 264:assembly_test.c **** 
 265:assembly_test.c **** static void usb_bulk_in_handler(u8 bEP, u8 bEPStatus)
 266:assembly_test.c **** {
 267:assembly_test.c **** 	if (!(bEPStatus & EP_STATUS_DATA))
 268:assembly_test.c **** 		dequeue();
 269:assembly_test.c **** }
 270:assembly_test.c **** 
 271:assembly_test.c **** static void usb_bulk_out_handler(u8 bEP, u8 bEPStatus)
 272:assembly_test.c **** {
 273:assembly_test.c **** }
 274:assembly_test.c **** 
 275:assembly_test.c **** static BOOL usb_vendor_request_handler(TSetupPacket *pSetup, int *piLen, u8 **ppbData)
 276:assembly_test.c **** {
 277:assembly_test.c **** 	u8 *pbData = *ppbData;
 278:assembly_test.c **** 	u32 command[5];
 279:assembly_test.c **** 	u32 result[5];
 280:assembly_test.c **** 	u8 length; // string length
 281:assembly_test.c **** 
 282:assembly_test.c **** 	switch (pSetup->bRequest) {
 283:assembly_test.c **** 
 284:assembly_test.c **** 	case UBERTOOTH_PING:
 285:assembly_test.c **** 		*piLen = 0;
 286:assembly_test.c **** 		break;
 287:assembly_test.c **** 
 288:assembly_test.c **** 	case UBERTOOTH_RX_SYMBOLS:
 289:assembly_test.c **** 		rx_pkts += pSetup->wValue;
 290:assembly_test.c **** 		if (rx_pkts == 0)
 291:assembly_test.c **** 			rx_pkts = 0xFFFFFFFF;
 292:assembly_test.c **** 		*piLen = 0;
 293:assembly_test.c **** 		break;
 294:assembly_test.c **** 
 295:assembly_test.c **** 	case UBERTOOTH_GET_USRLED:
 296:assembly_test.c **** 		pbData[0] = (USRLED) ? 1 : 0;
 297:assembly_test.c **** 		*piLen = 1;
 298:assembly_test.c **** 		break;
 299:assembly_test.c **** 
 300:assembly_test.c **** 	case UBERTOOTH_SET_USRLED:
 301:assembly_test.c **** 		if (pSetup->wValue)
 302:assembly_test.c **** 			USRLED_SET;
 303:assembly_test.c **** 		else
 304:assembly_test.c **** 			USRLED_CLR;
 305:assembly_test.c **** 		break;
 306:assembly_test.c **** 
 307:assembly_test.c **** 	case UBERTOOTH_GET_RXLED:
 308:assembly_test.c **** 		pbData[0] = (RXLED) ? 1 : 0;
 309:assembly_test.c **** 		*piLen = 1;
 310:assembly_test.c **** 		break;
 311:assembly_test.c **** 
 312:assembly_test.c **** 	case UBERTOOTH_SET_RXLED:
 313:assembly_test.c **** 		if (pSetup->wValue)
 314:assembly_test.c **** 			RXLED_SET;
 315:assembly_test.c **** 		else
 316:assembly_test.c **** 			RXLED_CLR;
 317:assembly_test.c **** 		break;
 318:assembly_test.c **** 
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 7


 319:assembly_test.c **** 	case UBERTOOTH_GET_TXLED:
 320:assembly_test.c **** 		pbData[0] = (TXLED) ? 1 : 0;
 321:assembly_test.c **** 		*piLen = 1;
 322:assembly_test.c **** 		break;
 323:assembly_test.c **** 
 324:assembly_test.c **** 	case UBERTOOTH_SET_TXLED:
 325:assembly_test.c **** 		if (pSetup->wValue)
 326:assembly_test.c **** 			TXLED_SET;
 327:assembly_test.c **** 		else
 328:assembly_test.c **** 			TXLED_CLR;
 329:assembly_test.c **** 		break;
 330:assembly_test.c **** 
 331:assembly_test.c **** 	case UBERTOOTH_GET_1V8:
 332:assembly_test.c **** 		pbData[0] = (CC1V8) ? 1 : 0;
 333:assembly_test.c **** 		*piLen = 1;
 334:assembly_test.c **** 		break;
 335:assembly_test.c **** 
 336:assembly_test.c **** 	case UBERTOOTH_SET_1V8:
 337:assembly_test.c **** 		if (pSetup->wValue)
 338:assembly_test.c **** 			CC1V8_SET;
 339:assembly_test.c **** 		else
 340:assembly_test.c **** 			CC1V8_CLR;
 341:assembly_test.c **** 		break;
 342:assembly_test.c **** 
 343:assembly_test.c **** 	case UBERTOOTH_GET_PARTNUM:
 344:assembly_test.c **** 		command[0] = 54; /* read part number */
 345:assembly_test.c **** 		iap_entry(command, result);
 346:assembly_test.c **** 		pbData[0] = result[0] & 0xFF; /* status */
 347:assembly_test.c **** 		pbData[1] = result[1] & 0xFF;
 348:assembly_test.c **** 		pbData[2] = (result[1] >> 8) & 0xFF;
 349:assembly_test.c **** 		pbData[3] = (result[1] >> 16) & 0xFF;
 350:assembly_test.c **** 		pbData[4] = (result[1] >> 24) & 0xFF;
 351:assembly_test.c **** 		*piLen = 5;
 352:assembly_test.c **** 		break;
 353:assembly_test.c **** 
 354:assembly_test.c **** 	case UBERTOOTH_RESET:
 355:assembly_test.c **** 		reset();
 356:assembly_test.c **** 		break;
 357:assembly_test.c **** 
 358:assembly_test.c **** 	case UBERTOOTH_GET_SERIAL:
 359:assembly_test.c **** 		command[0] = 58; /* read device serial number */
 360:assembly_test.c **** 		iap_entry(command, result);
 361:assembly_test.c **** 		pbData[0] = result[0] & 0xFF; /* status */
 362:assembly_test.c **** 		pbData[1] = result[1] & 0xFF;
 363:assembly_test.c **** 		pbData[2] = (result[1] >> 8) & 0xFF;
 364:assembly_test.c **** 		pbData[3] = (result[1] >> 16) & 0xFF;
 365:assembly_test.c **** 		pbData[4] = (result[1] >> 24) & 0xFF;
 366:assembly_test.c **** 		pbData[5] = result[2] & 0xFF;
 367:assembly_test.c **** 		pbData[6] = (result[2] >> 8) & 0xFF;
 368:assembly_test.c **** 		pbData[7] = (result[2] >> 16) & 0xFF;
 369:assembly_test.c **** 		pbData[8] = (result[2] >> 24) & 0xFF;
 370:assembly_test.c **** 		pbData[9] = result[3] & 0xFF;
 371:assembly_test.c **** 		pbData[10] = (result[3] >> 8) & 0xFF;
 372:assembly_test.c **** 		pbData[11] = (result[3] >> 16) & 0xFF;
 373:assembly_test.c **** 		pbData[12] = (result[3] >> 24) & 0xFF;
 374:assembly_test.c **** 		pbData[13] = result[4] & 0xFF;
 375:assembly_test.c **** 		pbData[14] = (result[4] >> 8) & 0xFF;
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 8


 376:assembly_test.c **** 		pbData[15] = (result[4] >> 16) & 0xFF;
 377:assembly_test.c **** 		pbData[16] = (result[4] >> 24) & 0xFF;
 378:assembly_test.c **** 		*piLen = 17;
 379:assembly_test.c **** 		break;
 380:assembly_test.c **** 
 381:assembly_test.c **** #ifdef UBERTOOTH_ONE
 382:assembly_test.c **** 	case UBERTOOTH_GET_PAEN:
 383:assembly_test.c **** 		pbData[0] = (PAEN) ? 1 : 0;
 384:assembly_test.c **** 		*piLen = 1;
 385:assembly_test.c **** 		break;
 386:assembly_test.c **** 
 387:assembly_test.c **** 	case UBERTOOTH_SET_PAEN:
 388:assembly_test.c **** 		if (pSetup->wValue)
 389:assembly_test.c **** 			PAEN_SET;
 390:assembly_test.c **** 		else
 391:assembly_test.c **** 			PAEN_CLR;
 392:assembly_test.c **** 		break;
 393:assembly_test.c **** 
 394:assembly_test.c **** 	case UBERTOOTH_GET_HGM:
 395:assembly_test.c **** 		pbData[0] = (HGM) ? 1 : 0;
 396:assembly_test.c **** 		*piLen = 1;
 397:assembly_test.c **** 		break;
 398:assembly_test.c **** 
 399:assembly_test.c **** 	case UBERTOOTH_SET_HGM:
 400:assembly_test.c **** 		if (pSetup->wValue)
 401:assembly_test.c **** 			HGM_SET;
 402:assembly_test.c **** 		else
 403:assembly_test.c **** 			HGM_CLR;
 404:assembly_test.c **** 		break;
 405:assembly_test.c **** #endif
 406:assembly_test.c **** 
 407:assembly_test.c **** #ifdef TX_ENABLE
 408:assembly_test.c **** 	case UBERTOOTH_TX_TEST:
 409:assembly_test.c **** 		requested_mode = MODE_TX_TEST;
 410:assembly_test.c **** 		break;
 411:assembly_test.c **** 
 412:assembly_test.c **** 	case UBERTOOTH_GET_PALEVEL:
 413:assembly_test.c **** 		pbData[0] = cc2400_get(FREND) & 0x7;
 414:assembly_test.c **** 		*piLen = 1;
 415:assembly_test.c **** 		break;
 416:assembly_test.c **** 
 417:assembly_test.c **** 	case UBERTOOTH_SET_PALEVEL:
 418:assembly_test.c **** 		if( pSetup->wValue < 8 ) {
 419:assembly_test.c **** 			cc2400_set(FREND, 8 | pSetup->wValue);
 420:assembly_test.c **** 		} else {
 421:assembly_test.c **** 			return FALSE;
 422:assembly_test.c **** 		}
 423:assembly_test.c **** 		break;
 424:assembly_test.c **** 
 425:assembly_test.c **** 	case UBERTOOTH_RANGE_TEST:
 426:assembly_test.c **** 		requested_mode = MODE_RANGE_TEST;
 427:assembly_test.c **** 		break;
 428:assembly_test.c **** 
 429:assembly_test.c **** 	case UBERTOOTH_REPEATER:
 430:assembly_test.c **** 		requested_mode = MODE_REPEATER;
 431:assembly_test.c **** 		break;
 432:assembly_test.c **** #endif
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 9


 433:assembly_test.c **** 
 434:assembly_test.c **** 	case UBERTOOTH_RANGE_CHECK:
 435:assembly_test.c **** 		pbData[0] = rr.valid;
 436:assembly_test.c **** 		pbData[1] = rr.request_pa;
 437:assembly_test.c **** 		pbData[2] = rr.request_num;
 438:assembly_test.c **** 		pbData[3] = rr.reply_pa;
 439:assembly_test.c **** 		pbData[4] = rr.reply_num;
 440:assembly_test.c **** 		*piLen = 5;
 441:assembly_test.c **** 		break;
 442:assembly_test.c **** 
 443:assembly_test.c **** 	case UBERTOOTH_STOP:
 444:assembly_test.c **** 		requested_mode = MODE_IDLE;
 445:assembly_test.c **** 		break;
 446:assembly_test.c **** 
 447:assembly_test.c **** 	case UBERTOOTH_GET_MOD:
 448:assembly_test.c **** 		pbData[0] = modulation;
 449:assembly_test.c **** 		*piLen = 1;
 450:assembly_test.c **** 		break;
 451:assembly_test.c **** 
 452:assembly_test.c **** 	case UBERTOOTH_SET_MOD:
 453:assembly_test.c **** 		modulation = pSetup->wValue;
 454:assembly_test.c **** 		break;
 455:assembly_test.c **** 
 456:assembly_test.c **** 	case UBERTOOTH_GET_CHANNEL:
 457:assembly_test.c **** 		pbData[0] = channel & 0xFF;
 458:assembly_test.c **** 		pbData[1] = (channel >> 8) & 0xFF;
 459:assembly_test.c **** 		*piLen = 2;
 460:assembly_test.c **** 		break;
 461:assembly_test.c **** 
 462:assembly_test.c ****     case UBERTOOTH_SET_CHANNEL:
 463:assembly_test.c **** 		channel = pSetup->wValue;
 464:assembly_test.c **** 		channel = MAX(channel, MIN_FREQ);
 465:assembly_test.c **** 		channel = MIN(channel, MAX_FREQ);
 466:assembly_test.c **** 		break;
 467:assembly_test.c **** 
 468:assembly_test.c **** 	case UBERTOOTH_SET_ISP:
 469:assembly_test.c **** 		command[0] = 57;
 470:assembly_test.c **** 		iap_entry(command, result);
 471:assembly_test.c **** 		*piLen = 0; /* should never return */
 472:assembly_test.c **** 		break;
 473:assembly_test.c **** 
 474:assembly_test.c **** 	case UBERTOOTH_FLASH:
 475:assembly_test.c **** 		bootloader_ctrl = DFU_MODE;
 476:assembly_test.c **** 		reset();
 477:assembly_test.c **** 		break;
 478:assembly_test.c **** 
 479:assembly_test.c **** 	case UBERTOOTH_SPECAN:
 480:assembly_test.c **** 		if (pSetup->wValue < 2049 || pSetup->wValue > 3072 || 
 481:assembly_test.c **** 				pSetup->wIndex < 2049 || pSetup->wIndex > 3072 ||
 482:assembly_test.c **** 				pSetup->wIndex < pSetup->wValue)
 483:assembly_test.c **** 			return FALSE;
 484:assembly_test.c **** 		low_freq = pSetup->wValue;
 485:assembly_test.c **** 		high_freq = pSetup->wIndex;
 486:assembly_test.c **** 		requested_mode = MODE_SPECAN;
 487:assembly_test.c **** 		*piLen = 0;
 488:assembly_test.c **** 		break;
 489:assembly_test.c **** 
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 10


 490:assembly_test.c **** 	case UBERTOOTH_GET_REV_NUM:
 491:assembly_test.c **** 		pbData[0] = 0x00;
 492:assembly_test.c **** 		pbData[1] = 0x00;
 493:assembly_test.c **** 
 494:assembly_test.c **** 		length = (u8)strlen(GIT_REVISION);
 495:assembly_test.c **** 		pbData[2] = length;
 496:assembly_test.c **** 
 497:assembly_test.c **** 		memcpy(&pbData[3], GIT_REVISION, length);
 498:assembly_test.c **** 
 499:assembly_test.c **** 		*piLen = 2 + 1 + length;
 500:assembly_test.c **** 		break;
 501:assembly_test.c **** 
 502:assembly_test.c **** 	default:
 503:assembly_test.c **** 		return FALSE;
 504:assembly_test.c **** 	}
 505:assembly_test.c **** 	return TRUE;
 506:assembly_test.c **** }
 507:assembly_test.c **** 
 508:assembly_test.c **** int ubertooth_usb_init()
 509:assembly_test.c **** {
 510:assembly_test.c **** 	// initialise stack
 511:assembly_test.c **** 	USBInit();
 512:assembly_test.c **** 	
 513:assembly_test.c **** 	// register device descriptors
 514:assembly_test.c **** 	USBRegisterDescriptors(abDescriptors);
 515:assembly_test.c **** 
 516:assembly_test.c **** 	// override standard request handler
 517:assembly_test.c **** 	USBRegisterRequestHandler(REQTYPE_TYPE_VENDOR, usb_vendor_request_handler, abVendorReqData);
 518:assembly_test.c **** 
 519:assembly_test.c **** 	// register endpoints
 520:assembly_test.c **** 	//USBHwRegisterEPIntHandler(BULK_IN_EP, usb_bulk_in_handler);
 521:assembly_test.c **** 	//USBHwRegisterEPIntHandler(BULK_OUT_EP, usb_bulk_out_handler);
 522:assembly_test.c **** 
 523:assembly_test.c **** 	// enable USB interrupts
 524:assembly_test.c **** 	//ISER0 |= ISER0_ISE_USB;
 525:assembly_test.c **** 	
 526:assembly_test.c **** 	// connect to bus
 527:assembly_test.c **** 	USBHwConnect(TRUE);
 528:assembly_test.c **** 
 529:assembly_test.c **** 	return 0;
 530:assembly_test.c **** }
 531:assembly_test.c **** 
 532:assembly_test.c **** static void clkn_init()
 533:assembly_test.c **** {
 534:assembly_test.c **** 	/*
 535:assembly_test.c **** 	 * Because these are reset defaults, we're assuming TIMER0 is powered on
 536:assembly_test.c **** 	 * and in timer mode.  The TIMER0 peripheral clock should have been set to
 537:assembly_test.c **** 	 * cclk/2 (50 MHz) by clock_start().
 538:assembly_test.c **** 	 */
 539:assembly_test.c **** 
 540:assembly_test.c **** 	/* stop and reset the timer to zero */
 541:assembly_test.c **** 	T0TCR = TCR_Counter_Reset;
 542:assembly_test.c **** 	clkn_high = 0;
 543:assembly_test.c **** 
 544:assembly_test.c **** 	/*
 545:assembly_test.c **** 	 * The peripheral clock has a period of 20ns.  5 pclk periods makes one
 546:assembly_test.c **** 	 * CLK100NS period (100ns).  CLK100NS resets every 2^15 * 10^5 (3276800000)
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 11


 547:assembly_test.c **** 	 * steps, roughly 5.5 minutes.
 548:assembly_test.c **** 	 */
 549:assembly_test.c **** 	T0PR = 4;
 550:assembly_test.c **** 	T0MR0 = 3276799999;
 551:assembly_test.c **** 	T0MCR = TMCR_MR0R | TMCR_MR0I;
 552:assembly_test.c **** 	ISER0 |= ISER0_ISE_TIMER0;
 553:assembly_test.c **** 
 554:assembly_test.c **** 	/* start timer */
 555:assembly_test.c **** 	T0TCR = TCR_Counter_Enable;
 556:assembly_test.c **** }
 557:assembly_test.c **** 
 558:assembly_test.c **** /* clkn_high is incremented each time CLK100NS rolls over */
 559:assembly_test.c **** void TIMER0_IRQHandler()
 560:assembly_test.c **** {
 561:assembly_test.c **** 	if (T0IR & TIR_MR0_Interrupt) {
 562:assembly_test.c **** 		++clkn_high;
 563:assembly_test.c **** 		T0IR |= TIR_MR0_Interrupt;
 564:assembly_test.c **** 	}
 565:assembly_test.c **** }
 566:assembly_test.c **** 
 567:assembly_test.c **** static void dma_init()
 568:assembly_test.c **** {
  26              		.loc 1 568 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 4, -8
  33              		.cfi_offset 14, -4
 569:assembly_test.c **** 	/* power up GPDMA controller */
 570:assembly_test.c **** 	PCONP |= PCONP_PCGPDMA;
  34              		.loc 1 570 0
  35 0002 244A     		ldr	r2, .L6
 571:assembly_test.c **** 
 572:assembly_test.c **** 	/* zero out channel configs and clear interrupts */
 573:assembly_test.c **** 	DMACC0Config = 0;
  36              		.loc 1 573 0
  37 0004 2449     		ldr	r1, .L6+4
 570:assembly_test.c **** 
  38              		.loc 1 570 0
  39 0006 1368     		ldr	r3, [r2]
 574:assembly_test.c **** 	DMACC1Config = 0;
 575:assembly_test.c **** 	DMACC2Config = 0;
 576:assembly_test.c **** 	DMACC3Config = 0;
 577:assembly_test.c **** 	DMACC4Config = 0;
 578:assembly_test.c **** 	DMACC5Config = 0;
 579:assembly_test.c **** 	DMACC6Config = 0;
 580:assembly_test.c **** 	DMACC7Config = 0;
 581:assembly_test.c **** 	DMACIntTCClear = 0xFF;
 582:assembly_test.c **** 	DMACIntErrClr = 0xFF;
 583:assembly_test.c **** 
 584:assembly_test.c **** 	/* DMA linked lists */
 585:assembly_test.c **** 	rx_dma_lli1.src = (u32)&(DIO_SSP_DR);
  40              		.loc 1 585 0
  41 0008 244C     		ldr	r4, .L6+8
 570:assembly_test.c **** 
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 12


  42              		.loc 1 570 0
  43 000a 43F00053 		orr	r3, r3, #536870912
  44 000e 1360     		str	r3, [r2]
 574:assembly_test.c **** 	DMACC1Config = 0;
  45              		.loc 1 574 0
  46 0010 234A     		ldr	r2, .L6+12
 573:assembly_test.c **** 	DMACC1Config = 0;
  47              		.loc 1 573 0
  48 0012 0023     		movs	r3, #0
  49 0014 0B60     		str	r3, [r1]
 581:assembly_test.c **** 	DMACIntErrClr = 0xFF;
  50              		.loc 1 581 0
  51 0016 A2F59472 		sub	r2, r2, #296
 574:assembly_test.c **** 	DMACC1Config = 0;
  52              		.loc 1 574 0
  53 001a C2F82831 		str	r3, [r2, #296]
 575:assembly_test.c **** 	DMACC3Config = 0;
  54              		.loc 1 575 0
  55 001e C2F84831 		str	r3, [r2, #328]
 576:assembly_test.c **** 	DMACC4Config = 0;
  56              		.loc 1 576 0
  57 0022 C2F86831 		str	r3, [r2, #360]
 577:assembly_test.c **** 	DMACC5Config = 0;
  58              		.loc 1 577 0
  59 0026 C2F88831 		str	r3, [r2, #392]
 578:assembly_test.c **** 	DMACC6Config = 0;
  60              		.loc 1 578 0
  61 002a C2F8A831 		str	r3, [r2, #424]
 579:assembly_test.c **** 	DMACC7Config = 0;
  62              		.loc 1 579 0
  63 002e C2F8C831 		str	r3, [r2, #456]
 580:assembly_test.c **** 	DMACIntTCClear = 0xFF;
  64              		.loc 1 580 0
  65 0032 C2F8E831 		str	r3, [r2, #488]
 581:assembly_test.c **** 	DMACIntErrClr = 0xFF;
  66              		.loc 1 581 0
  67 0036 FF23     		movs	r3, #255
  68 0038 1360     		str	r3, [r2]
 582:assembly_test.c **** 
  69              		.loc 1 582 0
  70 003a 9360     		str	r3, [r2, #8]
  71              		.loc 1 585 0
  72 003c 194B     		ldr	r3, .L6+16
 586:assembly_test.c **** 	rx_dma_lli1.dest = (u32)&rxbuf1[0];
  73              		.loc 1 586 0
  74 003e 1A4A     		ldr	r2, .L6+20
 587:assembly_test.c **** 	rx_dma_lli1.next_lli = (u32)&rx_dma_lli2;
 588:assembly_test.c **** 	rx_dma_lli1.control = (DMA_SIZE) |
  75              		.loc 1 588 0
  76 0040 1A48     		ldr	r0, .L6+24
 586:assembly_test.c **** 	rx_dma_lli1.dest = (u32)&rxbuf1[0];
  77              		.loc 1 586 0
  78 0042 5A60     		str	r2, [r3, #4]
 587:assembly_test.c **** 	rx_dma_lli1.next_lli = (u32)&rx_dma_lli2;
  79              		.loc 1 587 0
  80 0044 1A4A     		ldr	r2, .L6+28
 585:assembly_test.c **** 	rx_dma_lli1.dest = (u32)&rxbuf1[0];
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 13


  81              		.loc 1 585 0
  82 0046 1C60     		str	r4, [r3]
 589:assembly_test.c **** 			(1 << 12) |        /* source burst size = 4 */
 590:assembly_test.c **** 			(1 << 15) |        /* destination burst size = 4 */
 591:assembly_test.c **** 			(0 << 18) |        /* source width 8 bits */
 592:assembly_test.c **** 			(0 << 21) |        /* destination width 8 bits */
 593:assembly_test.c **** 			DMACCxControl_DI | /* destination increment */
 594:assembly_test.c **** 			DMACCxControl_I;   /* terminal count interrupt enable */
 595:assembly_test.c **** 
 596:assembly_test.c **** 	rx_dma_lli2.src = (u32)&(DIO_SSP_DR);
  83              		.loc 1 596 0
  84 0048 1460     		str	r4, [r2]
 597:assembly_test.c **** 	rx_dma_lli2.dest = (u32)&rxbuf2[0];
  85              		.loc 1 597 0
  86 004a 1A4C     		ldr	r4, .L6+32
 588:assembly_test.c **** 			(1 << 12) |        /* source burst size = 4 */
  87              		.loc 1 588 0
  88 004c D860     		str	r0, [r3, #12]
 598:assembly_test.c **** 	rx_dma_lli2.next_lli = (u32)&rx_dma_lli1;
 599:assembly_test.c **** 	rx_dma_lli2.control = (DMA_SIZE) |
  89              		.loc 1 599 0
  90 004e D060     		str	r0, [r2, #12]
 600:assembly_test.c **** 			(1 << 12) |        /* source burst size = 4 */
 601:assembly_test.c **** 			(1 << 15) |        /* destination burst size = 4 */
 602:assembly_test.c **** 			(0 << 18) |        /* source width 8 bits */
 603:assembly_test.c **** 			(0 << 21) |        /* destination width 8 bits */
 604:assembly_test.c **** 			DMACCxControl_DI | /* destination increment */
 605:assembly_test.c **** 			DMACCxControl_I;   /* terminal count interrupt enable */
 606:assembly_test.c **** 
 607:assembly_test.c **** 	/* disable DMA interrupts */
 608:assembly_test.c **** 	ISER0 &= ~ISER0_ISE_DMA;
  91              		.loc 1 608 0
  92 0050 1948     		ldr	r0, .L6+36
 587:assembly_test.c **** 	rx_dma_lli1.control = (DMA_SIZE) |
  93              		.loc 1 587 0
  94 0052 9A60     		str	r2, [r3, #8]
 597:assembly_test.c **** 	rx_dma_lli2.next_lli = (u32)&rx_dma_lli1;
  95              		.loc 1 597 0
  96 0054 5460     		str	r4, [r2, #4]
 598:assembly_test.c **** 	rx_dma_lli2.control = (DMA_SIZE) |
  97              		.loc 1 598 0
  98 0056 9360     		str	r3, [r2, #8]
  99              		.loc 1 608 0
 100 0058 0268     		ldr	r2, [r0]
 101 005a 22F08062 		bic	r2, r2, #67108864
 102 005e 0260     		str	r2, [r0]
 609:assembly_test.c **** 
 610:assembly_test.c **** 	/* enable DMA globally */
 611:assembly_test.c **** 	DMACConfig = DMACConfig_E;
 103              		.loc 1 611 0
 104 0060 164A     		ldr	r2, .L6+40
 105 0062 0120     		movs	r0, #1
 106 0064 1060     		str	r0, [r2]
 107              	.L2:
 612:assembly_test.c **** 	while (!(DMACConfig & DMACConfig_E));
 108              		.loc 1 612 0 discriminator 1
 109 0066 1068     		ldr	r0, [r2]
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 14


 110 0068 C007     		lsls	r0, r0, #31
 111 006a FCD5     		bpl	.L2
 613:assembly_test.c **** 
 614:assembly_test.c **** 	/* configure DMA channel 1 */
 615:assembly_test.c **** 	DMACC0SrcAddr = rx_dma_lli1.src;
 112              		.loc 1 615 0
 113 006c 1868     		ldr	r0, [r3]
 114 006e 144A     		ldr	r2, .L6+44
 115 0070 1060     		str	r0, [r2]
 616:assembly_test.c **** 	DMACC0DestAddr = rx_dma_lli1.dest;
 116              		.loc 1 616 0
 117 0072 5868     		ldr	r0, [r3, #4]
 118 0074 5060     		str	r0, [r2, #4]
 617:assembly_test.c **** 	DMACC0LLI = rx_dma_lli1.next_lli;
 119              		.loc 1 617 0
 120 0076 9868     		ldr	r0, [r3, #8]
 121 0078 9060     		str	r0, [r2, #8]
 618:assembly_test.c **** 	DMACC0Control = rx_dma_lli1.control;
 122              		.loc 1 618 0
 123 007a DA68     		ldr	r2, [r3, #12]
 124 007c 114B     		ldr	r3, .L6+48
 125 007e 1A60     		str	r2, [r3]
 619:assembly_test.c **** 	DMACC0Config =
 126              		.loc 1 619 0
 127 0080 4DF20603 		movw	r3, #53254
 620:assembly_test.c **** 			DIO_SSP_SRC |
 621:assembly_test.c **** 			(0x2 << 11) |           /* peripheral to memory */
 622:assembly_test.c **** 			DMACCxConfig_IE |       /* allow error interrupts */
 623:assembly_test.c **** 			DMACCxConfig_ITC;       /* allow terminal count interrupts */
 624:assembly_test.c **** 
 625:assembly_test.c **** 	/* reset interrupt counters */
 626:assembly_test.c **** 	rx_tc = 0;
 128              		.loc 1 626 0
 129 0084 104A     		ldr	r2, .L6+52
 619:assembly_test.c **** 	DMACC0Config =
 130              		.loc 1 619 0
 131 0086 0B60     		str	r3, [r1]
 132              		.loc 1 626 0
 133 0088 0023     		movs	r3, #0
 134 008a 1360     		str	r3, [r2]
 627:assembly_test.c **** 	rx_err = 0;
 135              		.loc 1 627 0
 136 008c 0F4A     		ldr	r2, .L6+56
 137 008e 1360     		str	r3, [r2]
 138 0090 10BD     		pop	{r4, pc}
 139              	.L7:
 140 0092 00BF     		.align	2
 141              	.L6:
 142 0094 C4C00F40 		.word	1074774212
 143 0098 10410050 		.word	1342193936
 144 009c 08000340 		.word	1073938440
 145 00a0 30410050 		.word	1342193968
 146 00a4 00000000 		.word	rx_dma_lli1
 147 00a8 00000000 		.word	rxbuf1
 148 00ac 32900088 		.word	-2013229006
 149 00b0 00000000 		.word	rx_dma_lli2
 150 00b4 00000000 		.word	rxbuf2
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 15


 151 00b8 00E100E0 		.word	-536813312
 152 00bc 30400050 		.word	1342193712
 153 00c0 00410050 		.word	1342193920
 154 00c4 0C410050 		.word	1342193932
 155 00c8 00000000 		.word	rx_tc
 156 00cc 00000000 		.word	rx_err
 157              		.cfi_endproc
 158              	.LFE9:
 160              		.section	.text.dio_ssp_start,"ax",%progbits
 161              		.align	1
 162              		.thumb
 163              		.thumb_func
 165              	dio_ssp_start:
 166              	.LFB11:
 628:assembly_test.c **** }
 629:assembly_test.c **** 
 630:assembly_test.c **** void DMA_IRQHandler()
 631:assembly_test.c **** {
 632:assembly_test.c **** 	/* interrupt on channel 0 */
 633:assembly_test.c **** 	if (DMACIntStat & (1 << 0)) {
 634:assembly_test.c **** 		if (DMACIntTCStat & (1 << 0)) {
 635:assembly_test.c **** 			DMACIntTCClear |= (1 << 0);
 636:assembly_test.c **** 			++rx_tc;
 637:assembly_test.c **** 		}
 638:assembly_test.c **** 		if (DMACIntErrStat & (1 << 0)) {
 639:assembly_test.c **** 			DMACIntErrClr |= (1 << 0);
 640:assembly_test.c **** 			++rx_err;
 641:assembly_test.c **** 		}
 642:assembly_test.c **** 	}
 643:assembly_test.c **** }
 644:assembly_test.c **** 
 645:assembly_test.c **** static void dio_ssp_start()
 646:assembly_test.c **** {
 167              		.loc 1 646 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 647:assembly_test.c **** 	/* make sure the (active low) slave select signal is not active */
 648:assembly_test.c **** 	DIO_SSEL_SET;
 172              		.loc 1 648 0
 173 0000 0D4B     		ldr	r3, .L9
 649:assembly_test.c **** 
 650:assembly_test.c **** 	/* enable rx DMA on DIO_SSP */
 651:assembly_test.c **** 	DIO_SSP_DMACR |= SSPDMACR_RXDMAE;
 174              		.loc 1 651 0
 175 0002 0E49     		ldr	r1, .L9+4
 648:assembly_test.c **** 
 176              		.loc 1 648 0
 177 0004 4FF08052 		mov	r2, #268435456
 178 0008 1A60     		str	r2, [r3]
 179              		.loc 1 651 0
 180 000a 0B68     		ldr	r3, [r1]
 181 000c 43F00103 		orr	r3, r3, #1
 182 0010 0B60     		str	r3, [r1]
 652:assembly_test.c **** 	DIO_SSP_CR1 |= SSPCR1_SSE;
 183              		.loc 1 652 0
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 16


 184 0012 51F8203C 		ldr	r3, [r1, #-32]
 185 0016 43F00203 		orr	r3, r3, #2
 186 001a 41F8203C 		str	r3, [r1, #-32]
 653:assembly_test.c **** 	
 654:assembly_test.c **** 	/* enable DMA */
 655:assembly_test.c **** 	DMACC0Config |= DMACCxConfig_E;
 187              		.loc 1 655 0
 188 001e 0849     		ldr	r1, .L9+8
 189 0020 0B68     		ldr	r3, [r1]
 190 0022 43F00103 		orr	r3, r3, #1
 191 0026 0B60     		str	r3, [r1]
 656:assembly_test.c **** 	ISER0 |= ISER0_ISE_DMA;
 192              		.loc 1 656 0
 193 0028 0649     		ldr	r1, .L9+12
 194 002a 0B68     		ldr	r3, [r1]
 195 002c 43F08063 		orr	r3, r3, #67108864
 196 0030 0B60     		str	r3, [r1]
 657:assembly_test.c **** 
 658:assembly_test.c **** 	/* activate slave select pin */
 659:assembly_test.c **** 	DIO_SSEL_CLR;
 197              		.loc 1 659 0
 198 0032 054B     		ldr	r3, .L9+16
 199 0034 1A60     		str	r2, [r3]
 200 0036 7047     		bx	lr
 201              	.L10:
 202              		.align	2
 203              	.L9:
 204 0038 98C00920 		.word	537510040
 205 003c 24000340 		.word	1073938468
 206 0040 10410050 		.word	1342193936
 207 0044 00E100E0 		.word	-536813312
 208 0048 9CC00920 		.word	537510044
 209              		.cfi_endproc
 210              	.LFE11:
 212              		.section	.text.usb_vendor_request_handler,"ax",%progbits
 213              		.align	1
 214              		.thumb
 215              		.thumb_func
 217              	usb_vendor_request_handler:
 218              	.LFB5:
 276:assembly_test.c **** 	u8 *pbData = *ppbData;
 219              		.loc 1 276 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 40
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              	.LVL0:
 224 0000 70B5     		push	{r4, r5, r6, lr}
 225              		.cfi_def_cfa_offset 16
 226              		.cfi_offset 4, -16
 227              		.cfi_offset 5, -12
 228              		.cfi_offset 6, -8
 229              		.cfi_offset 14, -4
 230 0002 8AB0     		sub	sp, sp, #40
 231              		.cfi_def_cfa_offset 56
 282:assembly_test.c **** 
 232              		.loc 1 282 0
 233 0004 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 17


 276:assembly_test.c **** 	u8 *pbData = *ppbData;
 234              		.loc 1 276 0
 235 0006 0D46     		mov	r5, r1
 277:assembly_test.c **** 	u32 command[5];
 236              		.loc 1 277 0
 237 0008 1468     		ldr	r4, [r2]
 238              	.LVL1:
 282:assembly_test.c **** 
 239              		.loc 1 282 0
 240 000a 212B     		cmp	r3, #33
 241 000c 00F24381 		bhi	.L61
 242 0010 DFE813F0 		tbh	[pc, r3, lsl #1]
 243              	.LVL2:
 244              	.L14:
 245 0014 2D01     		.2byte	(.L65-.L14)/2
 246 0016 2200     		.2byte	(.L15-.L14)/2
 247 0018 4101     		.2byte	(.L61-.L14)/2
 248 001a 2F00     		.2byte	(.L16-.L14)/2
 249 001c 3400     		.2byte	(.L17-.L14)/2
 250 001e 3700     		.2byte	(.L18-.L14)/2
 251 0020 3C00     		.2byte	(.L19-.L14)/2
 252 0022 3F00     		.2byte	(.L20-.L14)/2
 253 0024 4100     		.2byte	(.L21-.L14)/2
 254 0026 4500     		.2byte	(.L22-.L14)/2
 255 0028 4A00     		.2byte	(.L23-.L14)/2
 256 002a E600     		.2byte	(.L24-.L14)/2
 257 002c EF00     		.2byte	(.L25-.L14)/2
 258 002e 1401     		.2byte	(.L71-.L14)/2
 259 0030 6800     		.2byte	(.L27-.L14)/2
 260 0032 5300     		.2byte	(.L28-.L14)/2
 261 0034 A000     		.2byte	(.L29-.L14)/2
 262 0036 A500     		.2byte	(.L30-.L14)/2
 263 0038 A800     		.2byte	(.L31-.L14)/2
 264 003a AD00     		.2byte	(.L32-.L14)/2
 265 003c B500     		.2byte	(.L33-.L14)/2
 266 003e D800     		.2byte	(.L34-.L14)/2
 267 0040 DC00     		.2byte	(.L35-.L14)/2
 268 0042 E200     		.2byte	(.L36-.L14)/2
 269 0044 0801     		.2byte	(.L37-.L14)/2
 270 0046 1101     		.2byte	(.L38-.L14)/2
 271 0048 4101     		.2byte	(.L61-.L14)/2
 272 004a 1701     		.2byte	(.L39-.L14)/2
 273 004c B700     		.2byte	(.L40-.L14)/2
 274 004e BE00     		.2byte	(.L41-.L14)/2
 275 0050 C900     		.2byte	(.L42-.L14)/2
 276 0052 C700     		.2byte	(.L43-.L14)/2
 277 0054 CB00     		.2byte	(.L44-.L14)/2
 278 0056 3101     		.2byte	(.L45-.L14)/2
 279              		.p2align 1
 280              	.L15:
 289:assembly_test.c **** 		if (rx_pkts == 0)
 281              		.loc 1 289 0
 282 0058 904B     		ldr	r3, .L83
 283 005a 4188     		ldrh	r1, [r0, #2]
 284              	.LVL3:
 285 005c 1A68     		ldr	r2, [r3]
 286 005e 0A44     		add	r2, r2, r1
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 18


 287 0060 1A60     		str	r2, [r3]
 290:assembly_test.c **** 			rx_pkts = 0xFFFFFFFF;
 288              		.loc 1 290 0
 289 0062 1A68     		ldr	r2, [r3]
 290 0064 002A     		cmp	r2, #0
 291 0066 40F00281 		bne	.L65
 291:assembly_test.c **** 		*piLen = 0;
 292              		.loc 1 291 0
 293 006a 4FF0FF32 		mov	r2, #-1
 294 006e 1A60     		str	r2, [r3]
 295 0070 FDE0     		b	.L65
 296              	.LVL4:
 297              	.L16:
 296:assembly_test.c **** 		*piLen = 1;
 298              		.loc 1 296 0
 299 0072 8B4B     		ldr	r3, .L83+4
 300 0074 1B68     		ldr	r3, [r3]
 301 0076 C3F34003 		ubfx	r3, r3, #1, #1
 302 007a A9E0     		b	.L66
 303              	.L17:
 301:assembly_test.c **** 			USRLED_SET;
 304              		.loc 1 301 0
 305 007c 4288     		ldrh	r2, [r0, #2]
 306 007e 0223     		movs	r3, #2
 307 0080 15E0     		b	.L79
 308              	.L18:
 308:assembly_test.c **** 		*piLen = 1;
 309              		.loc 1 308 0
 310 0082 874B     		ldr	r3, .L83+4
 311 0084 1B68     		ldr	r3, [r3]
 312 0086 C3F30013 		ubfx	r3, r3, #4, #1
 313 008a A1E0     		b	.L66
 314              	.L19:
 313:assembly_test.c **** 			RXLED_SET;
 315              		.loc 1 313 0
 316 008c 4288     		ldrh	r2, [r0, #2]
 317 008e 1023     		movs	r3, #16
 318 0090 0DE0     		b	.L79
 319              	.L20:
 320:assembly_test.c **** 		*piLen = 1;
 320              		.loc 1 320 0
 321 0092 834B     		ldr	r3, .L83+4
 322 0094 67E0     		b	.L67
 323              	.L21:
 325:assembly_test.c **** 			TXLED_SET;
 324              		.loc 1 325 0
 325 0096 4288     		ldrh	r2, [r0, #2]
 326 0098 4FF48073 		mov	r3, #256
 327 009c 07E0     		b	.L79
 328              	.L22:
 332:assembly_test.c **** 		*piLen = 1;
 329              		.loc 1 332 0
 330 009e 804B     		ldr	r3, .L83+4
 331 00a0 1B68     		ldr	r3, [r3]
 332 00a2 C3F34023 		ubfx	r3, r3, #9, #1
 333 00a6 93E0     		b	.L66
 334              	.L23:
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 19


 337:assembly_test.c **** 			CC1V8_SET;
 335              		.loc 1 337 0
 336 00a8 4288     		ldrh	r2, [r0, #2]
 337 00aa 4FF40073 		mov	r3, #512
 338              	.L79:
 339 00ae 12B9     		cbnz	r2, .L82
 316:assembly_test.c **** 		break;
 340              		.loc 1 316 0
 341 00b0 7C4A     		ldr	r2, .L83+8
 342              	.L69:
 343 00b2 1360     		str	r3, [r2]
 344 00b4 DDE0     		b	.L62
 345              	.L82:
 338:assembly_test.c **** 		else
 346              		.loc 1 338 0
 347 00b6 7C4A     		ldr	r2, .L83+12
 348 00b8 FBE7     		b	.L69
 349              	.L28:
 344:assembly_test.c **** 		iap_entry(command, result);
 350              		.loc 1 344 0
 351 00ba 0AA8     		add	r0, sp, #40
 352              	.LVL5:
 353 00bc 3623     		movs	r3, #54
 354 00be 40F8283D 		str	r3, [r0, #-40]!
 345:assembly_test.c **** 		pbData[0] = result[0] & 0xFF; /* status */
 355              		.loc 1 345 0
 356 00c2 7A4B     		ldr	r3, .L83+16
 357 00c4 05A9     		add	r1, sp, #20
 358              	.LVL6:
 359 00c6 1B68     		ldr	r3, [r3]
 360 00c8 9847     		blx	r3
 361              	.LVL7:
 346:assembly_test.c **** 		pbData[1] = result[1] & 0xFF;
 362              		.loc 1 346 0
 363 00ca 059B     		ldr	r3, [sp, #20]
 364 00cc 2370     		strb	r3, [r4]
 347:assembly_test.c **** 		pbData[2] = (result[1] >> 8) & 0xFF;
 365              		.loc 1 347 0
 366 00ce 069B     		ldr	r3, [sp, #24]
 367 00d0 6370     		strb	r3, [r4, #1]
 348:assembly_test.c **** 		pbData[3] = (result[1] >> 16) & 0xFF;
 368              		.loc 1 348 0
 369 00d2 069B     		ldr	r3, [sp, #24]
 370 00d4 1B0A     		lsrs	r3, r3, #8
 371 00d6 A370     		strb	r3, [r4, #2]
 349:assembly_test.c **** 		pbData[4] = (result[1] >> 24) & 0xFF;
 372              		.loc 1 349 0
 373 00d8 BDF81A30 		ldrh	r3, [sp, #26]
 374 00dc E370     		strb	r3, [r4, #3]
 350:assembly_test.c **** 		*piLen = 5;
 375              		.loc 1 350 0
 376 00de 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 377 00e2 6CE0     		b	.L68
 378              	.LVL8:
 379              	.L27:
 359:assembly_test.c **** 		iap_entry(command, result);
 380              		.loc 1 359 0
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 20


 381 00e4 0AA8     		add	r0, sp, #40
 382              	.LVL9:
 383 00e6 3A23     		movs	r3, #58
 384 00e8 40F8283D 		str	r3, [r0, #-40]!
 360:assembly_test.c **** 		pbData[0] = result[0] & 0xFF; /* status */
 385              		.loc 1 360 0
 386 00ec 6F4B     		ldr	r3, .L83+16
 387 00ee 05A9     		add	r1, sp, #20
 388              	.LVL10:
 389 00f0 1B68     		ldr	r3, [r3]
 390 00f2 9847     		blx	r3
 391              	.LVL11:
 361:assembly_test.c **** 		pbData[1] = result[1] & 0xFF;
 392              		.loc 1 361 0
 393 00f4 059B     		ldr	r3, [sp, #20]
 394 00f6 2370     		strb	r3, [r4]
 362:assembly_test.c **** 		pbData[2] = (result[1] >> 8) & 0xFF;
 395              		.loc 1 362 0
 396 00f8 069B     		ldr	r3, [sp, #24]
 397 00fa 6370     		strb	r3, [r4, #1]
 363:assembly_test.c **** 		pbData[3] = (result[1] >> 16) & 0xFF;
 398              		.loc 1 363 0
 399 00fc 069B     		ldr	r3, [sp, #24]
 400 00fe 1B0A     		lsrs	r3, r3, #8
 401 0100 A370     		strb	r3, [r4, #2]
 364:assembly_test.c **** 		pbData[4] = (result[1] >> 24) & 0xFF;
 402              		.loc 1 364 0
 403 0102 BDF81A30 		ldrh	r3, [sp, #26]
 404 0106 E370     		strb	r3, [r4, #3]
 365:assembly_test.c **** 		pbData[5] = result[2] & 0xFF;
 405              		.loc 1 365 0
 406 0108 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 407 010c 2371     		strb	r3, [r4, #4]
 366:assembly_test.c **** 		pbData[6] = (result[2] >> 8) & 0xFF;
 408              		.loc 1 366 0
 409 010e 079B     		ldr	r3, [sp, #28]
 410 0110 6371     		strb	r3, [r4, #5]
 367:assembly_test.c **** 		pbData[7] = (result[2] >> 16) & 0xFF;
 411              		.loc 1 367 0
 412 0112 079B     		ldr	r3, [sp, #28]
 413 0114 1B0A     		lsrs	r3, r3, #8
 414 0116 A371     		strb	r3, [r4, #6]
 368:assembly_test.c **** 		pbData[8] = (result[2] >> 24) & 0xFF;
 415              		.loc 1 368 0
 416 0118 BDF81E30 		ldrh	r3, [sp, #30]
 417 011c E371     		strb	r3, [r4, #7]
 369:assembly_test.c **** 		pbData[9] = result[3] & 0xFF;
 418              		.loc 1 369 0
 419 011e 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 420 0122 2372     		strb	r3, [r4, #8]
 370:assembly_test.c **** 		pbData[10] = (result[3] >> 8) & 0xFF;
 421              		.loc 1 370 0
 422 0124 089B     		ldr	r3, [sp, #32]
 423 0126 6372     		strb	r3, [r4, #9]
 371:assembly_test.c **** 		pbData[11] = (result[3] >> 16) & 0xFF;
 424              		.loc 1 371 0
 425 0128 089B     		ldr	r3, [sp, #32]
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 21


 426 012a 1B0A     		lsrs	r3, r3, #8
 427 012c A372     		strb	r3, [r4, #10]
 372:assembly_test.c **** 		pbData[12] = (result[3] >> 24) & 0xFF;
 428              		.loc 1 372 0
 429 012e BDF82230 		ldrh	r3, [sp, #34]
 430 0132 E372     		strb	r3, [r4, #11]
 373:assembly_test.c **** 		pbData[13] = result[4] & 0xFF;
 431              		.loc 1 373 0
 432 0134 9DF82330 		ldrb	r3, [sp, #35]	@ zero_extendqisi2
 433 0138 2373     		strb	r3, [r4, #12]
 374:assembly_test.c **** 		pbData[14] = (result[4] >> 8) & 0xFF;
 434              		.loc 1 374 0
 435 013a 099B     		ldr	r3, [sp, #36]
 436 013c 6373     		strb	r3, [r4, #13]
 375:assembly_test.c **** 		pbData[15] = (result[4] >> 16) & 0xFF;
 437              		.loc 1 375 0
 438 013e 099B     		ldr	r3, [sp, #36]
 439 0140 1B0A     		lsrs	r3, r3, #8
 440 0142 A373     		strb	r3, [r4, #14]
 376:assembly_test.c **** 		pbData[16] = (result[4] >> 24) & 0xFF;
 441              		.loc 1 376 0
 442 0144 BDF82630 		ldrh	r3, [sp, #38]
 443 0148 E373     		strb	r3, [r4, #15]
 377:assembly_test.c **** 		*piLen = 17;
 444              		.loc 1 377 0
 445 014a 9DF82730 		ldrb	r3, [sp, #39]	@ zero_extendqisi2
 446 014e 2374     		strb	r3, [r4, #16]
 378:assembly_test.c **** 		break;
 447              		.loc 1 378 0
 448 0150 1123     		movs	r3, #17
 449 0152 8DE0     		b	.L63
 450              	.LVL12:
 451              	.L29:
 383:assembly_test.c **** 		*piLen = 1;
 452              		.loc 1 383 0
 453 0154 564B     		ldr	r3, .L83+20
 454 0156 1B68     		ldr	r3, [r3]
 455 0158 C3F3C013 		ubfx	r3, r3, #7, #1
 456 015c 38E0     		b	.L66
 457              	.L30:
 388:assembly_test.c **** 			PAEN_SET;
 458              		.loc 1 388 0
 459 015e 4288     		ldrh	r2, [r0, #2]
 460 0160 8023     		movs	r3, #128
 461 0162 07E0     		b	.L77
 462              	.L31:
 395:assembly_test.c **** 		*piLen = 1;
 463              		.loc 1 395 0
 464 0164 524B     		ldr	r3, .L83+20
 465              	.L67:
 466 0166 1B68     		ldr	r3, [r3]
 467 0168 C3F30023 		ubfx	r3, r3, #8, #1
 468 016c 30E0     		b	.L66
 469              	.L32:
 400:assembly_test.c **** 			HGM_SET;
 470              		.loc 1 400 0
 471 016e 4288     		ldrh	r2, [r0, #2]
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 22


 472 0170 4FF48073 		mov	r3, #256
 473              	.L77:
 474 0174 0AB1     		cbz	r2, .L52
 401:assembly_test.c **** 		else
 475              		.loc 1 401 0
 476 0176 4F4A     		ldr	r2, .L83+24
 477 0178 9BE7     		b	.L69
 478              	.L52:
 403:assembly_test.c **** 		break;
 479              		.loc 1 403 0
 480 017a 4F4A     		ldr	r2, .L83+28
 481 017c 99E7     		b	.L69
 482              	.L33:
 409:assembly_test.c **** 		break;
 483              		.loc 1 409 0
 484 017e 0322     		movs	r2, #3
 485 0180 21E0     		b	.L70
 486              	.L40:
 413:assembly_test.c **** 		*piLen = 1;
 487              		.loc 1 413 0
 488 0182 0520     		movs	r0, #5
 489              	.LVL13:
 490 0184 FFF7FEFF 		bl	cc2400_get
 491              	.LVL14:
 492 0188 00F00700 		and	r0, r0, #7
 493 018c 2070     		strb	r0, [r4]
 494 018e 20E0     		b	.L64
 495              	.LVL15:
 496              	.L41:
 418:assembly_test.c **** 			cc2400_set(FREND, 8 | pSetup->wValue);
 497              		.loc 1 418 0
 498 0190 4188     		ldrh	r1, [r0, #2]
 499              	.LVL16:
 500 0192 0729     		cmp	r1, #7
 501 0194 7FD8     		bhi	.L61
 419:assembly_test.c **** 		} else {
 502              		.loc 1 419 0
 503 0196 0520     		movs	r0, #5
 504              	.LVL17:
 505 0198 41F00801 		orr	r1, r1, #8
 506 019c FFF7FEFF 		bl	cc2400_set
 507              	.LVL18:
 508 01a0 67E0     		b	.L62
 509              	.LVL19:
 510              	.L43:
 426:assembly_test.c **** 		break;
 511              		.loc 1 426 0
 512 01a2 0522     		movs	r2, #5
 513 01a4 0FE0     		b	.L70
 514              	.L42:
 430:assembly_test.c **** 		break;
 515              		.loc 1 430 0
 516 01a6 0622     		movs	r2, #6
 517 01a8 0DE0     		b	.L70
 518              	.L44:
 435:assembly_test.c **** 		pbData[1] = rr.request_pa;
 519              		.loc 1 435 0
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 23


 520 01aa 444B     		ldr	r3, .L83+32
 521 01ac 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 522 01ae 2270     		strb	r2, [r4]
 436:assembly_test.c **** 		pbData[2] = rr.request_num;
 523              		.loc 1 436 0
 524 01b0 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 525 01b2 6270     		strb	r2, [r4, #1]
 437:assembly_test.c **** 		pbData[3] = rr.reply_pa;
 526              		.loc 1 437 0
 527 01b4 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 528 01b6 A270     		strb	r2, [r4, #2]
 438:assembly_test.c **** 		pbData[4] = rr.reply_num;
 529              		.loc 1 438 0
 530 01b8 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 531 01ba E270     		strb	r2, [r4, #3]
 439:assembly_test.c **** 		*piLen = 5;
 532              		.loc 1 439 0
 533 01bc 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 534              	.LVL20:
 535              	.L68:
 536 01be 2371     		strb	r3, [r4, #4]
 440:assembly_test.c **** 		break;
 537              		.loc 1 440 0
 538 01c0 0523     		movs	r3, #5
 539 01c2 55E0     		b	.L63
 540              	.LVL21:
 541              	.L34:
 444:assembly_test.c **** 		break;
 542              		.loc 1 444 0
 543 01c4 0022     		movs	r2, #0
 544              	.L70:
 545 01c6 354B     		ldr	r3, .L83
 546 01c8 5A60     		str	r2, [r3, #4]
 547 01ca 52E0     		b	.L62
 548              	.L35:
 448:assembly_test.c **** 		*piLen = 1;
 549              		.loc 1 448 0
 550 01cc 334B     		ldr	r3, .L83
 551 01ce 9B68     		ldr	r3, [r3, #8]
 552              	.L66:
 553 01d0 2370     		strb	r3, [r4]
 554              	.LVL22:
 555              	.L64:
 449:assembly_test.c **** 		break;
 556              		.loc 1 449 0
 557 01d2 0120     		movs	r0, #1
 558 01d4 2860     		str	r0, [r5]
 450:assembly_test.c **** 
 559              		.loc 1 450 0
 560 01d6 5FE0     		b	.L12
 561              	.LVL23:
 562              	.L36:
 453:assembly_test.c **** 		break;
 563              		.loc 1 453 0
 564 01d8 4288     		ldrh	r2, [r0, #2]
 565 01da 304B     		ldr	r3, .L83
 566 01dc 9A60     		str	r2, [r3, #8]
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 24


 567 01de 48E0     		b	.L62
 568              	.L24:
 457:assembly_test.c **** 		pbData[1] = (channel >> 8) & 0xFF;
 569              		.loc 1 457 0
 570 01e0 374B     		ldr	r3, .L83+36
 571 01e2 1A88     		ldrh	r2, [r3]
 572 01e4 2270     		strb	r2, [r4]
 458:assembly_test.c **** 		*piLen = 2;
 573              		.loc 1 458 0
 574 01e6 1B88     		ldrh	r3, [r3]
 575 01e8 C3F30723 		ubfx	r3, r3, #8, #8
 576 01ec 6370     		strb	r3, [r4, #1]
 459:assembly_test.c **** 		break;
 577              		.loc 1 459 0
 578 01ee 0223     		movs	r3, #2
 579 01f0 3EE0     		b	.L63
 580              	.L25:
 463:assembly_test.c **** 		channel = MAX(channel, MIN_FREQ);
 581              		.loc 1 463 0
 582 01f2 334B     		ldr	r3, .L83+36
 583 01f4 4288     		ldrh	r2, [r0, #2]
 584 01f6 1A80     		strh	r2, [r3]	@ movhi
 464:assembly_test.c **** 		channel = MIN(channel, MAX_FREQ);
 585              		.loc 1 464 0
 586 01f8 40F6DC02 		movw	r2, #2268
 587 01fc 1988     		ldrh	r1, [r3]
 588              	.LVL24:
 589 01fe 89B2     		uxth	r1, r1
 590 0200 9142     		cmp	r1, r2
 465:assembly_test.c **** 		break;
 591              		.loc 1 465 0
 592 0202 40F6E921 		movw	r1, #2793
 464:assembly_test.c **** 		channel = MIN(channel, MAX_FREQ);
 593              		.loc 1 464 0
 594 0206 84BF     		itt	hi
 595 0208 1A88     		ldrhhi	r2, [r3]
 596 020a 92B2     		uxthhi	r2, r2
 597 020c 1A80     		strh	r2, [r3]	@ movhi
 465:assembly_test.c **** 		break;
 598              		.loc 1 465 0
 599 020e 1A88     		ldrh	r2, [r3]
 600 0210 92B2     		uxth	r2, r2
 601 0212 8A42     		cmp	r2, r1
 602 0214 8FBF     		iteee	hi
 603 0216 40F6EA22 		movwhi	r2, #2794
 604 021a 294A     		ldrls	r2, .L83+36
 605 021c 1288     		ldrhls	r2, [r2]
 606 021e 92B2     		uxthls	r2, r2
 607 0220 1A80     		strh	r2, [r3]	@ movhi
 608 0222 26E0     		b	.L62
 609              	.LVL25:
 610              	.L37:
 469:assembly_test.c **** 		iap_entry(command, result);
 611              		.loc 1 469 0
 612 0224 0AA8     		add	r0, sp, #40
 613              	.LVL26:
 614 0226 3923     		movs	r3, #57
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 25


 615 0228 40F8283D 		str	r3, [r0, #-40]!
 470:assembly_test.c **** 		*piLen = 0; /* should never return */
 616              		.loc 1 470 0
 617 022c 1F4B     		ldr	r3, .L83+16
 618 022e 05A9     		add	r1, sp, #20
 619              	.LVL27:
 620 0230 1B68     		ldr	r3, [r3]
 621 0232 9847     		blx	r3
 622              	.LVL28:
 623 0234 1BE0     		b	.L65
 624              	.LVL29:
 625              	.L38:
 475:assembly_test.c **** 		reset();
 626              		.loc 1 475 0
 627 0236 234A     		ldr	r2, .L83+40
 628 0238 234B     		ldr	r3, .L83+44
 629 023a 1A60     		str	r2, [r3]
 630              	.L71:
 476:assembly_test.c **** 		break;
 631              		.loc 1 476 0
 632 023c FFF7FEFF 		bl	reset
 633              	.LVL30:
 634 0240 17E0     		b	.L62
 635              	.LVL31:
 636              	.L39:
 480:assembly_test.c **** 				pSetup->wIndex < 2049 || pSetup->wIndex > 3072 ||
 637              		.loc 1 480 0
 638 0242 4288     		ldrh	r2, [r0, #2]
 639 0244 6FF40064 		mvn	r4, #2048
 640              	.LVL32:
 641 0248 1319     		adds	r3, r2, r4
 642 024a B3F5806F 		cmp	r3, #1024
 643 024e 22D2     		bcs	.L61
 481:assembly_test.c **** 				pSetup->wIndex < pSetup->wValue)
 644              		.loc 1 481 0 discriminator 1
 645 0250 8388     		ldrh	r3, [r0, #4]
 480:assembly_test.c **** 				pSetup->wIndex < 2049 || pSetup->wIndex > 3072 ||
 646              		.loc 1 480 0 discriminator 1
 647 0252 6FF40061 		mvn	r1, #2048
 648              	.LVL33:
 649 0256 5918     		adds	r1, r3, r1
 650 0258 B1F5806F 		cmp	r1, #1024
 651 025c 1BD2     		bcs	.L61
 481:assembly_test.c **** 				pSetup->wIndex < pSetup->wValue)
 652              		.loc 1 481 0 discriminator 1
 653 025e 9342     		cmp	r3, r2
 654 0260 19D3     		bcc	.L61
 484:assembly_test.c **** 		high_freq = pSetup->wIndex;
 655              		.loc 1 484 0
 656 0262 1749     		ldr	r1, .L83+36
 657 0264 4A80     		strh	r2, [r1, #2]	@ movhi
 485:assembly_test.c **** 		requested_mode = MODE_SPECAN;
 658              		.loc 1 485 0
 659 0266 8B80     		strh	r3, [r1, #4]	@ movhi
 486:assembly_test.c **** 		*piLen = 0;
 660              		.loc 1 486 0
 661 0268 0C4B     		ldr	r3, .L83
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 26


 662 026a 0422     		movs	r2, #4
 663 026c 5A60     		str	r2, [r3, #4]
 664              	.LVL34:
 665              	.L65:
 487:assembly_test.c **** 		break;
 666              		.loc 1 487 0
 667 026e 0023     		movs	r3, #0
 668              	.L63:
 669 0270 2B60     		str	r3, [r5]
 670              	.L62:
 505:assembly_test.c **** }
 671              		.loc 1 505 0
 672 0272 0120     		movs	r0, #1
 488:assembly_test.c **** 
 673              		.loc 1 488 0
 674 0274 10E0     		b	.L12
 675              	.LVL35:
 676              	.L45:
 491:assembly_test.c **** 		pbData[1] = 0x00;
 677              		.loc 1 491 0
 678 0276 0023     		movs	r3, #0
 679 0278 2370     		strb	r3, [r4]
 492:assembly_test.c **** 
 680              		.loc 1 492 0
 681 027a 6370     		strb	r3, [r4, #1]
 494:assembly_test.c **** 		pbData[2] = length;
 682              		.loc 1 494 0
 683 027c 1348     		ldr	r0, .L83+48
 684              	.LVL36:
 685 027e FFF7FEFF 		bl	strlen
 686              	.LVL37:
 497:assembly_test.c **** 
 687              		.loc 1 497 0
 688 0282 C6B2     		uxtb	r6, r0
 494:assembly_test.c **** 		pbData[2] = length;
 689              		.loc 1 494 0
 690 0284 A070     		strb	r0, [r4, #2]
 497:assembly_test.c **** 
 691              		.loc 1 497 0
 692 0286 3246     		mov	r2, r6
 693 0288 E01C     		adds	r0, r4, #3
 694              	.LVL38:
 695 028a 1049     		ldr	r1, .L83+48
 499:assembly_test.c **** 		break;
 696              		.loc 1 499 0
 697 028c 0336     		adds	r6, r6, #3
 497:assembly_test.c **** 
 698              		.loc 1 497 0
 699 028e FFF7FEFF 		bl	memcpy
 700              	.LVL39:
 499:assembly_test.c **** 		break;
 701              		.loc 1 499 0
 702 0292 2E60     		str	r6, [r5]
 703 0294 EDE7     		b	.L62
 704              	.LVL40:
 705              	.L61:
 421:assembly_test.c **** 		}
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 27


 706              		.loc 1 421 0
 707 0296 0020     		movs	r0, #0
 708              	.LVL41:
 709              	.L12:
 506:assembly_test.c **** 
 710              		.loc 1 506 0
 711 0298 0AB0     		add	sp, sp, #40
 712              		.cfi_def_cfa_offset 16
 713              		@ sp needed
 714 029a 70BD     		pop	{r4, r5, r6, pc}
 715              	.LVL42:
 716              	.L84:
 717              		.align	2
 718              	.L83:
 719 029c 00000000 		.word	.LANCHOR0
 720 02a0 34C00920 		.word	537509940
 721 02a4 3CC00920 		.word	537509948
 722 02a8 38C00920 		.word	537509944
 723 02ac 00000000 		.word	iap_entry
 724 02b0 54C00920 		.word	537509972
 725 02b4 58C00920 		.word	537509976
 726 02b8 5CC00920 		.word	537509980
 727 02bc 00000000 		.word	rr
 728 02c0 00000000 		.word	.LANCHOR1
 729 02c4 21BB0543 		.word	1124449057
 730 02c8 00000000 		.word	bootloader_ctrl
 731 02cc 00000000 		.word	.LC1
 732              		.cfi_endproc
 733              	.LFE5:
 735              		.section	.text.queue_init,"ax",%progbits
 736              		.align	1
 737              		.global	queue_init
 738              		.thumb
 739              		.thumb_func
 741              	queue_init:
 742              	.LFB0:
 132:assembly_test.c **** 	head = 0;
 743              		.loc 1 132 0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 133:assembly_test.c **** 	tail = 0;
 748              		.loc 1 133 0
 749 0000 024B     		ldr	r3, .L86
 750 0002 0022     		movs	r2, #0
 751 0004 DA60     		str	r2, [r3, #12]
 134:assembly_test.c **** }
 752              		.loc 1 134 0
 753 0006 1A61     		str	r2, [r3, #16]
 754 0008 7047     		bx	lr
 755              	.L87:
 756 000a 00BF     		.align	2
 757              	.L86:
 758 000c 00000000 		.word	.LANCHOR0
 759              		.cfi_endproc
 760              	.LFE0:
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 28


 762              		.section	.text.enqueue,"ax",%progbits
 763              		.align	1
 764              		.global	enqueue
 765              		.thumb
 766              		.thumb_func
 768              	enqueue:
 769              	.LFB1:
 138:assembly_test.c **** 	int i;
 770              		.loc 1 138 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              	.LVL43:
 775 0000 70B5     		push	{r4, r5, r6, lr}
 776              		.cfi_def_cfa_offset 16
 777              		.cfi_offset 4, -16
 778              		.cfi_offset 5, -12
 779              		.cfi_offset 6, -8
 780              		.cfi_offset 14, -4
 140:assembly_test.c **** 	u8 t = tail & 0x7F;
 781              		.loc 1 140 0
 782 0002 164C     		ldr	r4, .L93
 783 0004 E168     		ldr	r1, [r4, #12]
 784              	.LVL44:
 141:assembly_test.c **** 	u8 n = (t + 1) & 0x7F;
 785              		.loc 1 141 0
 786 0006 2369     		ldr	r3, [r4, #16]
 145:assembly_test.c **** 		return 0;
 787              		.loc 1 145 0
 788 0008 01F07F01 		and	r1, r1, #127
 789              	.LVL45:
 141:assembly_test.c **** 	u8 n = (t + 1) & 0x7F;
 790              		.loc 1 141 0
 791 000c 03F07F03 		and	r3, r3, #127
 792              	.LVL46:
 142:assembly_test.c **** 
 793              		.loc 1 142 0
 794 0010 5A1C     		adds	r2, r3, #1
 145:assembly_test.c **** 		return 0;
 795              		.loc 1 145 0
 796 0012 02F07F02 		and	r2, r2, #127
 797 0016 9142     		cmp	r1, r2
 798 0018 1ED0     		beq	.L91
 148:assembly_test.c **** 	fifo[t].clk100ns = CLK100NS;
 799              		.loc 1 148 0
 800 001a 114A     		ldr	r2, .L93+4
 801 001c 1149     		ldr	r1, .L93+8
 802 001e 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 803 0020 9B01     		lsls	r3, r3, #6
 804              	.LVL47:
 805 0022 CA18     		adds	r2, r1, r3
 806 0024 D570     		strb	r5, [r2, #3]
 149:assembly_test.c **** 
 807              		.loc 1 149 0
 808 0026 104D     		ldr	r5, .L93+12
 809 0028 2D68     		ldr	r5, [r5]
 810 002a 5560     		str	r5, [r2, #4]
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 29


 151:assembly_test.c **** 	for (i = 0; i < DMA_SIZE; i++)
 811              		.loc 1 151 0
 812 002c 0F4A     		ldr	r2, .L93+16
 813 002e 0225     		movs	r5, #2
 814 0030 1560     		str	r5, [r2]
 815              	.LVL48:
 152:assembly_test.c **** 		fifo[t].data[i] = buf[i];
 816              		.loc 1 152 0
 817 0032 0022     		movs	r2, #0
 818              	.LVL49:
 819              	.L90:
 153:assembly_test.c **** 	fifo[t].status = status;
 820              		.loc 1 153 0 discriminator 3
 821 0034 865C     		ldrb	r6, [r0, r2]	@ zero_extendqisi2
 822 0036 D518     		adds	r5, r2, r3
 152:assembly_test.c **** 		fifo[t].data[i] = buf[i];
 823              		.loc 1 152 0 discriminator 3
 824 0038 0132     		adds	r2, r2, #1
 825              	.LVL50:
 826 003a 0D44     		add	r5, r5, r1
 827 003c 322A     		cmp	r2, #50
 153:assembly_test.c **** 	fifo[t].status = status;
 828              		.loc 1 153 0 discriminator 3
 829 003e AE73     		strb	r6, [r5, #14]
 152:assembly_test.c **** 		fifo[t].data[i] = buf[i];
 830              		.loc 1 152 0 discriminator 3
 831 0040 F8D1     		bne	.L90
 154:assembly_test.c **** 	status = 0;
 832              		.loc 1 154 0
 833 0042 0849     		ldr	r1, .L93+8
 834 0044 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 835              	.LVL51:
 836 0046 0B44     		add	r3, r3, r1
 837 0048 5A70     		strb	r2, [r3, #1]
 155:assembly_test.c **** 	++tail;
 838              		.loc 1 155 0
 839 004a 0023     		movs	r3, #0
 840 004c 2375     		strb	r3, [r4, #20]
 156:assembly_test.c **** 
 841              		.loc 1 156 0
 842 004e 2369     		ldr	r3, [r4, #16]
 158:assembly_test.c **** }
 843              		.loc 1 158 0
 844 0050 0120     		movs	r0, #1
 845              	.LVL52:
 156:assembly_test.c **** 
 846              		.loc 1 156 0
 847 0052 0133     		adds	r3, r3, #1
 848 0054 2361     		str	r3, [r4, #16]
 158:assembly_test.c **** }
 849              		.loc 1 158 0
 850 0056 70BD     		pop	{r4, r5, r6, pc}
 851              	.LVL53:
 852              	.L91:
 146:assembly_test.c **** 
 853              		.loc 1 146 0
 854 0058 0020     		movs	r0, #0
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 30


 855              	.LVL54:
 159:assembly_test.c **** 
 856              		.loc 1 159 0
 857 005a 70BD     		pop	{r4, r5, r6, pc}
 858              	.L94:
 859              		.align	2
 860              	.L93:
 861 005c 00000000 		.word	.LANCHOR0
 862 0060 00000000 		.word	clkn_high
 863 0064 00000000 		.word	fifo
 864 0068 08400040 		.word	1073758216
 865 006c 38C00920 		.word	537509944
 866              		.cfi_endproc
 867              	.LFE1:
 869              		.section	.text.dequeue,"ax",%progbits
 870              		.align	1
 871              		.global	dequeue
 872              		.thumb
 873              		.thumb_func
 875              	dequeue:
 876              	.LFB2:
 162:assembly_test.c **** 	u8 h = head & 0x7F;
 877              		.loc 1 162 0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 0
 880              		@ frame_needed = 0, uses_anonymous_args = 0
 881 0000 10B5     		push	{r4, lr}
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 4, -8
 884              		.cfi_offset 14, -4
 163:assembly_test.c **** 	u8 t = tail & 0x7F;
 885              		.loc 1 163 0
 886 0002 0D4C     		ldr	r4, .L98
 887 0004 E368     		ldr	r3, [r4, #12]
 164:assembly_test.c **** 
 888              		.loc 1 164 0
 889 0006 2269     		ldr	r2, [r4, #16]
 163:assembly_test.c **** 	u8 t = tail & 0x7F;
 890              		.loc 1 163 0
 891 0008 03F07F03 		and	r3, r3, #127
 892              	.LVL55:
 167:assembly_test.c **** 		USRLED_CLR;
 893              		.loc 1 167 0
 894 000c 02F07F02 		and	r2, r2, #127
 895              	.LVL56:
 896 0010 9342     		cmp	r3, r2
 897 0012 04D1     		bne	.L96
 168:assembly_test.c **** 		return 0;
 898              		.loc 1 168 0
 899 0014 094B     		ldr	r3, .L98+4
 900              	.LVL57:
 901 0016 0222     		movs	r2, #2
 902 0018 1A60     		str	r2, [r3]
 169:assembly_test.c **** 	}
 903              		.loc 1 169 0
 904 001a 0020     		movs	r0, #0
 905 001c 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 31


 906              	.LVL58:
 907              	.L96:
 172:assembly_test.c **** 	++head;
 908              		.loc 1 172 0
 909 001e 0849     		ldr	r1, .L98+8
 910 0020 4022     		movs	r2, #64
 911 0022 01EB8311 		add	r1, r1, r3, lsl #6
 912 0026 8220     		movs	r0, #130
 913 0028 FFF7FEFF 		bl	USBHwEPWrite
 914              	.LVL59:
 173:assembly_test.c **** 
 915              		.loc 1 173 0
 916 002c E368     		ldr	r3, [r4, #12]
 175:assembly_test.c **** }
 917              		.loc 1 175 0
 918 002e 0120     		movs	r0, #1
 173:assembly_test.c **** 
 919              		.loc 1 173 0
 920 0030 0133     		adds	r3, r3, #1
 921 0032 E360     		str	r3, [r4, #12]
 176:assembly_test.c **** 
 922              		.loc 1 176 0
 923 0034 10BD     		pop	{r4, pc}
 924              	.L99:
 925 0036 00BF     		.align	2
 926              	.L98:
 927 0038 00000000 		.word	.LANCHOR0
 928 003c 3CC00920 		.word	537509948
 929 0040 00000000 		.word	fifo
 930              		.cfi_endproc
 931              	.LFE2:
 933              		.section	.text.ubertooth_usb_init,"ax",%progbits
 934              		.align	1
 935              		.global	ubertooth_usb_init
 936              		.thumb
 937              		.thumb_func
 939              	ubertooth_usb_init:
 940              	.LFB6:
 509:assembly_test.c **** 	// initialise stack
 941              		.loc 1 509 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945 0000 08B5     		push	{r3, lr}
 946              		.cfi_def_cfa_offset 8
 947              		.cfi_offset 3, -8
 948              		.cfi_offset 14, -4
 511:assembly_test.c **** 	
 949              		.loc 1 511 0
 950 0002 FFF7FEFF 		bl	USBInit
 951              	.LVL60:
 514:assembly_test.c **** 
 952              		.loc 1 514 0
 953 0006 0648     		ldr	r0, .L101
 954 0008 FFF7FEFF 		bl	USBRegisterDescriptors
 955              	.LVL61:
 517:assembly_test.c **** 
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 32


 956              		.loc 1 517 0
 957 000c 0549     		ldr	r1, .L101+4
 958 000e 064A     		ldr	r2, .L101+8
 959 0010 0220     		movs	r0, #2
 960 0012 FFF7FEFF 		bl	USBRegisterRequestHandler
 961              	.LVL62:
 527:assembly_test.c **** 
 962              		.loc 1 527 0
 963 0016 0120     		movs	r0, #1
 964 0018 FFF7FEFF 		bl	USBHwConnect
 965              	.LVL63:
 530:assembly_test.c **** 
 966              		.loc 1 530 0
 967 001c 0020     		movs	r0, #0
 968 001e 08BD     		pop	{r3, pc}
 969              	.L102:
 970              		.align	2
 971              	.L101:
 972 0020 00000000 		.word	.LANCHOR2
 973 0024 00000000 		.word	usb_vendor_request_handler
 974 0028 15000000 		.word	.LANCHOR0+21
 975              		.cfi_endproc
 976              	.LFE6:
 978              		.section	.text.TIMER0_IRQHandler,"ax",%progbits
 979              		.align	1
 980              		.global	TIMER0_IRQHandler
 981              		.thumb
 982              		.thumb_func
 984              	TIMER0_IRQHandler:
 985              	.LFB8:
 560:assembly_test.c **** 	if (T0IR & TIR_MR0_Interrupt) {
 986              		.loc 1 560 0
 987              		.cfi_startproc
 988              		@ args = 0, pretend = 0, frame = 0
 989              		@ frame_needed = 0, uses_anonymous_args = 0
 990              		@ link register save eliminated.
 561:assembly_test.c **** 		++clkn_high;
 991              		.loc 1 561 0
 992 0000 4FF04022 		mov	r2, #1073758208
 993 0004 1368     		ldr	r3, [r2]
 994 0006 DB07     		lsls	r3, r3, #31
 995 0008 08D5     		bpl	.L103
 562:assembly_test.c **** 		T0IR |= TIR_MR0_Interrupt;
 996              		.loc 1 562 0
 997 000a 0549     		ldr	r1, .L108
 998 000c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 999 000e 0133     		adds	r3, r3, #1
 1000 0010 DBB2     		uxtb	r3, r3
 1001 0012 0B70     		strb	r3, [r1]
 563:assembly_test.c **** 	}
 1002              		.loc 1 563 0
 1003 0014 1368     		ldr	r3, [r2]
 1004 0016 43F00103 		orr	r3, r3, #1
 1005 001a 1360     		str	r3, [r2]
 1006              	.L103:
 1007 001c 7047     		bx	lr
 1008              	.L109:
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 33


 1009 001e 00BF     		.align	2
 1010              	.L108:
 1011 0020 00000000 		.word	clkn_high
 1012              		.cfi_endproc
 1013              	.LFE8:
 1015              		.section	.text.DMA_IRQHandler,"ax",%progbits
 1016              		.align	1
 1017              		.global	DMA_IRQHandler
 1018              		.thumb
 1019              		.thumb_func
 1021              	DMA_IRQHandler:
 1022              	.LFB10:
 631:assembly_test.c **** 	/* interrupt on channel 0 */
 1023              		.loc 1 631 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 0
 1026              		@ frame_needed = 0, uses_anonymous_args = 0
 1027              		@ link register save eliminated.
 633:assembly_test.c **** 		if (DMACIntTCStat & (1 << 0)) {
 1028              		.loc 1 633 0
 1029 0000 0F4B     		ldr	r3, .L121
 1030 0002 1B68     		ldr	r3, [r3]
 1031 0004 D907     		lsls	r1, r3, #31
 1032 0006 19D5     		bpl	.L110
 634:assembly_test.c **** 			DMACIntTCClear |= (1 << 0);
 1033              		.loc 1 634 0
 1034 0008 0E4B     		ldr	r3, .L121+4
 1035 000a 1B68     		ldr	r3, [r3]
 1036 000c DA07     		lsls	r2, r3, #31
 1037 000e 08D5     		bpl	.L113
 635:assembly_test.c **** 			++rx_tc;
 1038              		.loc 1 635 0
 1039 0010 0D4A     		ldr	r2, .L121+8
 1040 0012 1368     		ldr	r3, [r2]
 1041 0014 43F00103 		orr	r3, r3, #1
 1042 0018 1360     		str	r3, [r2]
 636:assembly_test.c **** 		}
 1043              		.loc 1 636 0
 1044 001a 0C4A     		ldr	r2, .L121+12
 1045 001c 1368     		ldr	r3, [r2]
 1046 001e 0133     		adds	r3, r3, #1
 1047 0020 1360     		str	r3, [r2]
 1048              	.L113:
 638:assembly_test.c **** 			DMACIntErrClr |= (1 << 0);
 1049              		.loc 1 638 0
 1050 0022 0B4B     		ldr	r3, .L121+16
 1051 0024 1B68     		ldr	r3, [r3]
 1052 0026 DB07     		lsls	r3, r3, #31
 1053 0028 08D5     		bpl	.L110
 639:assembly_test.c **** 			++rx_err;
 1054              		.loc 1 639 0
 1055 002a 0A4A     		ldr	r2, .L121+20
 1056 002c 1368     		ldr	r3, [r2]
 1057 002e 43F00103 		orr	r3, r3, #1
 1058 0032 1360     		str	r3, [r2]
 640:assembly_test.c **** 		}
 1059              		.loc 1 640 0
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 34


 1060 0034 084A     		ldr	r2, .L121+24
 1061 0036 1368     		ldr	r3, [r2]
 1062 0038 0133     		adds	r3, r3, #1
 1063 003a 1360     		str	r3, [r2]
 1064              	.L110:
 1065 003c 7047     		bx	lr
 1066              	.L122:
 1067 003e 00BF     		.align	2
 1068              	.L121:
 1069 0040 00400050 		.word	1342193664
 1070 0044 04400050 		.word	1342193668
 1071 0048 08400050 		.word	1342193672
 1072 004c 00000000 		.word	rx_tc
 1073 0050 0C400050 		.word	1342193676
 1074 0054 10400050 		.word	1342193680
 1075 0058 00000000 		.word	rx_err
 1076              		.cfi_endproc
 1077              	.LFE10:
 1079              		.section	.text.cc2400_rx,"ax",%progbits
 1080              		.align	1
 1081              		.global	cc2400_rx
 1082              		.thumb
 1083              		.thumb_func
 1085              	cc2400_rx:
 1086              	.LFB12:
 660:assembly_test.c **** }
 661:assembly_test.c **** 
 662:assembly_test.c **** /* start un-buffered rx */
 663:assembly_test.c **** void cc2400_rx()
 664:assembly_test.c **** {
 1087              		.loc 1 664 0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 0
 1090              		@ frame_needed = 0, uses_anonymous_args = 0
 1091 0000 08B5     		push	{r3, lr}
 1092              		.cfi_def_cfa_offset 8
 1093              		.cfi_offset 3, -8
 1094              		.cfi_offset 14, -4
 665:assembly_test.c **** 	if (modulation == MOD_BT_BASIC_RATE) {
 1095              		.loc 1 665 0
 1096 0002 2C4B     		ldr	r3, .L134
 1097 0004 9A68     		ldr	r2, [r3, #8]
 1098 0006 EAB9     		cbnz	r2, .L124
 666:assembly_test.c **** 		cc2400_set(MANAND,  0x7fff);
 1099              		.loc 1 666 0
 1100 0008 0D20     		movs	r0, #13
 1101 000a 47F6FF71 		movw	r1, #32767
 1102 000e FFF7FEFF 		bl	cc2400_set
 1103              	.LVL64:
 667:assembly_test.c **** 		cc2400_set(LMTST,   0x2b22);
 1104              		.loc 1 667 0
 1105 0012 1220     		movs	r0, #18
 1106 0014 42F62231 		movw	r1, #11042
 1107 0018 FFF7FEFF 		bl	cc2400_set
 1108              	.LVL65:
 668:assembly_test.c **** 		cc2400_set(MDMTST0, 0x134b); // without PRNG
 1109              		.loc 1 668 0
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 35


 1110 001c 1420     		movs	r0, #20
 1111 001e 41F24B31 		movw	r1, #4939
 1112 0022 FFF7FEFF 		bl	cc2400_set
 1113              	.LVL66:
 669:assembly_test.c **** 		cc2400_set(GRMDM,   0x0101); // un-buffered mode, GFSK
 1114              		.loc 1 669 0
 1115 0026 2020     		movs	r0, #32
 1116 0028 40F20111 		movw	r1, #257
 1117 002c FFF7FEFF 		bl	cc2400_set
 1118              	.LVL67:
 670:assembly_test.c **** 		cc2400_set(FSDIV,   channel - 1); // 1 MHz IF
 1119              		.loc 1 670 0
 1120 0030 214B     		ldr	r3, .L134+4
 1121 0032 0220     		movs	r0, #2
 1122 0034 1988     		ldrh	r1, [r3]
 1123 0036 0139     		subs	r1, r1, #1
 1124 0038 89B2     		uxth	r1, r1
 1125 003a FFF7FEFF 		bl	cc2400_set
 1126              	.LVL68:
 671:assembly_test.c **** 		cc2400_set(MDMCTRL, 0x0029); // 160 kHz frequency deviation
 1127              		.loc 1 671 0
 1128 003e 0320     		movs	r0, #3
 1129 0040 2921     		movs	r1, #41
 1130 0042 1FE0     		b	.L133
 1131              	.L124:
 672:assembly_test.c **** 	} else if (modulation == MOD_BT_LOW_ENERGY) {
 1132              		.loc 1 672 0
 1133 0044 9B68     		ldr	r3, [r3, #8]
 1134 0046 012B     		cmp	r3, #1
 1135 0048 32D1     		bne	.L123
 673:assembly_test.c **** 		cc2400_set(MANAND,  0x7fff);
 1136              		.loc 1 673 0
 1137 004a 0D20     		movs	r0, #13
 1138 004c 47F6FF71 		movw	r1, #32767
 1139 0050 FFF7FEFF 		bl	cc2400_set
 1140              	.LVL69:
 674:assembly_test.c **** 		cc2400_set(LMTST,   0x2b22);
 1141              		.loc 1 674 0
 1142 0054 1220     		movs	r0, #18
 1143 0056 42F62231 		movw	r1, #11042
 1144 005a FFF7FEFF 		bl	cc2400_set
 1145              	.LVL70:
 675:assembly_test.c **** 		cc2400_set(MDMTST0, 0x134b); // without PRNG
 1146              		.loc 1 675 0
 1147 005e 1420     		movs	r0, #20
 1148 0060 41F24B31 		movw	r1, #4939
 1149 0064 FFF7FEFF 		bl	cc2400_set
 1150              	.LVL71:
 676:assembly_test.c **** 		cc2400_set(GRMDM,   0x0101); // un-buffered mode, GFSK
 1151              		.loc 1 676 0
 1152 0068 2020     		movs	r0, #32
 1153 006a 40F20111 		movw	r1, #257
 1154 006e FFF7FEFF 		bl	cc2400_set
 1155              	.LVL72:
 677:assembly_test.c **** 		cc2400_set(FSDIV,   channel - 1); // 1 MHz IF
 1156              		.loc 1 677 0
 1157 0072 114B     		ldr	r3, .L134+4
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 36


 1158 0074 0220     		movs	r0, #2
 1159 0076 1988     		ldrh	r1, [r3]
 1160 0078 0139     		subs	r1, r1, #1
 1161 007a 89B2     		uxth	r1, r1
 1162 007c FFF7FEFF 		bl	cc2400_set
 1163              	.LVL73:
 678:assembly_test.c **** 		cc2400_set(MDMCTRL, 0x0040); // 250 kHz frequency deviation
 1164              		.loc 1 678 0
 1165 0080 0320     		movs	r0, #3
 1166 0082 4021     		movs	r1, #64
 1167              	.L133:
 1168 0084 FFF7FEFF 		bl	cc2400_set
 1169              	.LVL74:
 1170              	.L127:
 679:assembly_test.c **** 	} else {
 680:assembly_test.c **** 		/* oops */
 681:assembly_test.c **** 		return;
 682:assembly_test.c **** 	}
 683:assembly_test.c **** 	while (!(cc2400_status() & XOSC16M_STABLE));
 1171              		.loc 1 683 0 discriminator 1
 1172 0088 FFF7FEFF 		bl	cc2400_status
 1173              	.LVL75:
 1174 008c 4206     		lsls	r2, r0, #25
 1175 008e FBD5     		bpl	.L127
 684:assembly_test.c **** 	cc2400_strobe(SFSON);
 1176              		.loc 1 684 0
 1177 0090 6120     		movs	r0, #97
 1178 0092 FFF7FEFF 		bl	cc2400_strobe
 1179              	.LVL76:
 1180              	.L128:
 685:assembly_test.c **** 	while (!(cc2400_status() & FS_LOCK));
 1181              		.loc 1 685 0 discriminator 1
 1182 0096 FFF7FEFF 		bl	cc2400_status
 1183              	.LVL77:
 1184 009a 4307     		lsls	r3, r0, #29
 1185 009c FBD5     		bpl	.L128
 686:assembly_test.c **** 	cc2400_strobe(SRX);
 1186              		.loc 1 686 0
 1187 009e 6220     		movs	r0, #98
 1188 00a0 FFF7FEFF 		bl	cc2400_strobe
 1189              	.LVL78:
 687:assembly_test.c **** #ifdef UBERTOOTH_ONE
 688:assembly_test.c **** 	PAEN_SET;
 1190              		.loc 1 688 0
 1191 00a4 054B     		ldr	r3, .L134+8
 1192 00a6 8022     		movs	r2, #128
 1193 00a8 1A60     		str	r2, [r3]
 689:assembly_test.c **** 	HGM_SET;
 1194              		.loc 1 689 0
 1195 00aa 4FF48072 		mov	r2, #256
 1196 00ae 1A60     		str	r2, [r3]
 1197              	.L123:
 1198 00b0 08BD     		pop	{r3, pc}
 1199              	.L135:
 1200 00b2 00BF     		.align	2
 1201              	.L134:
 1202 00b4 00000000 		.word	.LANCHOR0
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 37


 1203 00b8 00000000 		.word	.LANCHOR1
 1204 00bc 58C00920 		.word	537509976
 1205              		.cfi_endproc
 1206              	.LFE12:
 1208              		.section	.text.cc2400_txtest,"ax",%progbits
 1209              		.align	1
 1210              		.global	cc2400_txtest
 1211              		.thumb
 1212              		.thumb_func
 1214              	cc2400_txtest:
 1215              	.LFB13:
 690:assembly_test.c **** #endif
 691:assembly_test.c **** }
 692:assembly_test.c **** 
 693:assembly_test.c **** void cc2400_txtest()
 694:assembly_test.c **** {
 1216              		.loc 1 694 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 0
 1219              		@ frame_needed = 0, uses_anonymous_args = 0
 1220 0000 10B5     		push	{r4, lr}
 1221              		.cfi_def_cfa_offset 8
 1222              		.cfi_offset 4, -8
 1223              		.cfi_offset 14, -4
 695:assembly_test.c **** #ifdef TX_ENABLE
 696:assembly_test.c **** 	if (modulation == MOD_BT_BASIC_RATE) {
 1224              		.loc 1 696 0
 1225 0002 274C     		ldr	r4, .L147
 1226 0004 A368     		ldr	r3, [r4, #8]
 1227 0006 BBB9     		cbnz	r3, .L137
 697:assembly_test.c **** 		cc2400_set(MANAND,  0x7fff);
 1228              		.loc 1 697 0
 1229 0008 0D20     		movs	r0, #13
 1230 000a 47F6FF71 		movw	r1, #32767
 1231 000e FFF7FEFF 		bl	cc2400_set
 1232              	.LVL79:
 698:assembly_test.c **** 		cc2400_set(LMTST,   0x2b22);
 1233              		.loc 1 698 0
 1234 0012 1220     		movs	r0, #18
 1235 0014 42F62231 		movw	r1, #11042
 1236 0018 FFF7FEFF 		bl	cc2400_set
 1237              	.LVL80:
 699:assembly_test.c **** 		cc2400_set(MDMTST0, 0x334b); // with PRNG
 1238              		.loc 1 699 0
 1239 001c 1420     		movs	r0, #20
 1240 001e 43F24B31 		movw	r1, #13131
 1241 0022 FFF7FEFF 		bl	cc2400_set
 1242              	.LVL81:
 700:assembly_test.c **** 		cc2400_set(FSDIV,   channel);
 1243              		.loc 1 700 0
 1244 0026 1F4B     		ldr	r3, .L147+4
 1245 0028 0220     		movs	r0, #2
 1246 002a 1988     		ldrh	r1, [r3]
 1247 002c 89B2     		uxth	r1, r1
 1248 002e FFF7FEFF 		bl	cc2400_set
 1249              	.LVL82:
 701:assembly_test.c **** 		cc2400_set(MDMCTRL, 0x0029); // 160 kHz frequency deviation
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 38


 1250              		.loc 1 701 0
 1251 0032 0320     		movs	r0, #3
 1252 0034 2921     		movs	r1, #41
 1253 0036 19E0     		b	.L146
 1254              	.L137:
 702:assembly_test.c **** 	} else if (modulation == MOD_BT_LOW_ENERGY) {
 1255              		.loc 1 702 0
 1256 0038 A368     		ldr	r3, [r4, #8]
 1257 003a 012B     		cmp	r3, #1
 1258 003c 2FD1     		bne	.L136
 703:assembly_test.c **** 		cc2400_set(MANAND,  0x7fff);
 1259              		.loc 1 703 0
 1260 003e 0D20     		movs	r0, #13
 1261 0040 47F6FF71 		movw	r1, #32767
 1262 0044 FFF7FEFF 		bl	cc2400_set
 1263              	.LVL83:
 704:assembly_test.c **** 		cc2400_set(LMTST,   0x2b22);
 1264              		.loc 1 704 0
 1265 0048 1220     		movs	r0, #18
 1266 004a 42F62231 		movw	r1, #11042
 1267 004e FFF7FEFF 		bl	cc2400_set
 1268              	.LVL84:
 705:assembly_test.c **** 		cc2400_set(MDMTST0, 0x334b); // with PRNG
 1269              		.loc 1 705 0
 1270 0052 1420     		movs	r0, #20
 1271 0054 43F24B31 		movw	r1, #13131
 1272 0058 FFF7FEFF 		bl	cc2400_set
 1273              	.LVL85:
 706:assembly_test.c **** 		cc2400_set(FSDIV,   channel);
 1274              		.loc 1 706 0
 1275 005c 114B     		ldr	r3, .L147+4
 1276 005e 0220     		movs	r0, #2
 1277 0060 1988     		ldrh	r1, [r3]
 1278 0062 89B2     		uxth	r1, r1
 1279 0064 FFF7FEFF 		bl	cc2400_set
 1280              	.LVL86:
 707:assembly_test.c **** 		cc2400_set(MDMCTRL, 0x0040); // 250 kHz frequency deviation
 1281              		.loc 1 707 0
 1282 0068 0320     		movs	r0, #3
 1283 006a 4021     		movs	r1, #64
 1284              	.L146:
 1285 006c FFF7FEFF 		bl	cc2400_set
 1286              	.LVL87:
 1287              	.L140:
 708:assembly_test.c **** 	} else {
 709:assembly_test.c **** 		/* oops */
 710:assembly_test.c **** 		return;
 711:assembly_test.c **** 	}
 712:assembly_test.c **** 	while (!(cc2400_status() & XOSC16M_STABLE));
 1288              		.loc 1 712 0 discriminator 1
 1289 0070 FFF7FEFF 		bl	cc2400_status
 1290              	.LVL88:
 1291 0074 4206     		lsls	r2, r0, #25
 1292 0076 FBD5     		bpl	.L140
 713:assembly_test.c **** 	cc2400_strobe(SFSON);
 1293              		.loc 1 713 0
 1294 0078 6120     		movs	r0, #97
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 39


 1295 007a FFF7FEFF 		bl	cc2400_strobe
 1296              	.LVL89:
 1297              	.L141:
 714:assembly_test.c **** 	while (!(cc2400_status() & FS_LOCK));
 1298              		.loc 1 714 0 discriminator 1
 1299 007e FFF7FEFF 		bl	cc2400_status
 1300              	.LVL90:
 1301 0082 4307     		lsls	r3, r0, #29
 1302 0084 FBD5     		bpl	.L141
 715:assembly_test.c **** 	TXLED_SET;
 1303              		.loc 1 715 0
 1304 0086 084B     		ldr	r3, .L147+8
 1305 0088 4FF48072 		mov	r2, #256
 1306 008c 1A60     		str	r2, [r3]
 716:assembly_test.c **** 	cc2400_strobe(STX);
 1307              		.loc 1 716 0
 1308 008e 6320     		movs	r0, #99
 1309 0090 FFF7FEFF 		bl	cc2400_strobe
 1310              	.LVL91:
 717:assembly_test.c **** #ifdef UBERTOOTH_ONE
 718:assembly_test.c **** 	PAEN_SET;
 1311              		.loc 1 718 0
 1312 0094 054B     		ldr	r3, .L147+12
 1313 0096 8022     		movs	r2, #128
 1314 0098 1A60     		str	r2, [r3]
 719:assembly_test.c **** #endif
 720:assembly_test.c **** 	mode = MODE_TX_TEST;
 1315              		.loc 1 720 0
 1316 009a 0323     		movs	r3, #3
 1317 009c A362     		str	r3, [r4, #40]
 1318              	.L136:
 1319 009e 10BD     		pop	{r4, pc}
 1320              	.L148:
 1321              		.align	2
 1322              	.L147:
 1323 00a0 00000000 		.word	.LANCHOR0
 1324 00a4 00000000 		.word	.LANCHOR1
 1325 00a8 38C00920 		.word	537509944
 1326 00ac 58C00920 		.word	537509976
 1327              		.cfi_endproc
 1328              	.LFE13:
 1330              		.section	.text.cc2400_rangetest,"ax",%progbits
 1331              		.align	1
 1332              		.global	cc2400_rangetest
 1333              		.thumb
 1334              		.thumb_func
 1336              	cc2400_rangetest:
 1337              	.LFB14:
 721:assembly_test.c **** #endif
 722:assembly_test.c **** }
 723:assembly_test.c **** 
 724:assembly_test.c **** /*
 725:assembly_test.c ****  * This range test transmits a Bluetooth-like (but not Bluetooth compatible)
 726:assembly_test.c ****  * packet to a repeater and then receives the repeated packet.  It is only
 727:assembly_test.c ****  * useful if another device is running cc2400_repeater() some distance away.
 728:assembly_test.c ****  *
 729:assembly_test.c ****  * The outgoing packet is transmitted at each power amplifier (PA) level from
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 40


 730:assembly_test.c ****  * lowest to highest.  It is sent several times at each level.  The repeater
 731:assembly_test.c ****  * takes the first packet to be received correctly and repeats it in a similar
 732:assembly_test.c ****  * manner.  The result should indicate the lowest successful PA level in each
 733:assembly_test.c ****  * direction.
 734:assembly_test.c ****  *
 735:assembly_test.c ****  * The range test packet consists of:
 736:assembly_test.c ****  *   preamble: 4 bytes
 737:assembly_test.c ****  *   sync word: 4 bytes
 738:assembly_test.c ****  *   payload:
 739:assembly_test.c ****  *     length: 1 byte (21)
 740:assembly_test.c ****  *     packet type: 1 byte (0 = request; 1 = reply)
 741:assembly_test.c ****  *     LPC17xx serial number: 16 bytes
 742:assembly_test.c ****  *     request pa: 1 byte
 743:assembly_test.c ****  *     request number: 1 byte
 744:assembly_test.c ****  *     reply pa: 1 byte
 745:assembly_test.c ****  *     reply number: 1 byte
 746:assembly_test.c ****  *   crc: 2 bytes
 747:assembly_test.c ****  */
 748:assembly_test.c **** 
 749:assembly_test.c **** void cc2400_rangetest()
 750:assembly_test.c **** {
 1338              		.loc 1 750 0
 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 96
 1341              		@ frame_needed = 1, uses_anonymous_args = 0
 1342 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1343              		.cfi_def_cfa_offset 32
 1344              		.cfi_offset 4, -32
 1345              		.cfi_offset 5, -28
 1346              		.cfi_offset 6, -24
 1347              		.cfi_offset 7, -20
 1348              		.cfi_offset 8, -16
 1349              		.cfi_offset 9, -12
 1350              		.cfi_offset 10, -8
 1351              		.cfi_offset 14, -4
 1352 0004 98B0     		sub	sp, sp, #96
 1353              		.cfi_def_cfa_offset 128
 1354 0006 00AF     		add	r7, sp, #0
 1355              		.cfi_def_cfa_register 7
 751:assembly_test.c **** #ifdef TX_ENABLE
 752:assembly_test.c **** 	u32 command[5];
 753:assembly_test.c **** 	u32 result[5];
 754:assembly_test.c **** 	int i;
 755:assembly_test.c **** 	int j;
 756:assembly_test.c **** 	u8 len = 22;
 757:assembly_test.c **** 	u8 pa = 0;
 758:assembly_test.c **** 	u8 txbuf[len];
 759:assembly_test.c **** 	u8 rxbuf[len];
 760:assembly_test.c **** 
 761:assembly_test.c **** 	mode = MODE_RANGE_TEST;
 1356              		.loc 1 761 0
 1357 0008 A24B     		ldr	r3, .L194
 1358 000a 0524     		movs	r4, #5
 1359 000c 9C62     		str	r4, [r3, #40]
 762:assembly_test.c **** 
 763:assembly_test.c **** 	txbuf[0] = len - 1; // length of data (rest of payload)
 1360              		.loc 1 763 0
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 41


 1361 000e 1523     		movs	r3, #21
 1362 0010 87F84830 		strb	r3, [r7, #72]
 764:assembly_test.c **** 	txbuf[1] = 0; // request
 1363              		.loc 1 764 0
 1364 0014 0023     		movs	r3, #0
 1365 0016 87F84930 		strb	r3, [r7, #73]
 765:assembly_test.c **** 
 766:assembly_test.c **** 	// read device serial number
 767:assembly_test.c **** 	command[0] = 58;
 1366              		.loc 1 767 0
 1367 001a 07F16000 		add	r0, r7, #96
 1368 001e 3A23     		movs	r3, #58
 1369 0020 40F8583D 		str	r3, [r0, #-88]!
 768:assembly_test.c **** 	iap_entry(command, result);
 1370              		.loc 1 768 0
 1371 0024 9C4B     		ldr	r3, .L194+4
 1372 0026 07F11C01 		add	r1, r7, #28
 1373 002a 1B68     		ldr	r3, [r3]
 1374 002c C7F804D0 		str	sp, [r7, #4]
 1375              	.LVL92:
 1376 0030 9847     		blx	r3
 1377              	.LVL93:
 769:assembly_test.c **** 	if ((result[0] & 0xFF) != 0) //status check
 1378              		.loc 1 769 0
 1379 0032 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 1380 0034 002A     		cmp	r2, #0
 1381 0036 40F02881 		bne	.L149
 770:assembly_test.c **** 		return;
 771:assembly_test.c **** 	txbuf[2] = (result[1] >> 24) & 0xFF;
 1382              		.loc 1 771 0
 1383 003a 3B6A     		ldr	r3, [r7, #32]
 772:assembly_test.c **** 	txbuf[3] = (result[1] >> 16) & 0xFF;
 773:assembly_test.c **** 	txbuf[4] = (result[1] >> 8) & 0xFF;
 774:assembly_test.c **** 	txbuf[5] = result[1] & 0xFF;
 775:assembly_test.c **** 	txbuf[6] = (result[2] >> 24) & 0xFF;
 776:assembly_test.c **** 	txbuf[7] = (result[2] >> 16) & 0xFF;
 777:assembly_test.c **** 	txbuf[8] = (result[2] >> 8) & 0xFF;
 778:assembly_test.c **** 	txbuf[9] = result[2] & 0xFF;
 779:assembly_test.c **** 	txbuf[10] = (result[3] >> 24) & 0xFF;
 780:assembly_test.c **** 	txbuf[11] = (result[3] >> 16) & 0xFF;
 781:assembly_test.c **** 	txbuf[12] = (result[3] >> 8) & 0xFF;
 782:assembly_test.c **** 	txbuf[13] = result[3] & 0xFF;
 783:assembly_test.c **** 	txbuf[14] = (result[4] >> 24) & 0xFF;
 784:assembly_test.c **** 	txbuf[15] = (result[4] >> 16) & 0xFF;
 785:assembly_test.c **** 	txbuf[16] = (result[4] >> 8) & 0xFF;
 786:assembly_test.c **** 	txbuf[17] = result[4] & 0xFF;
 787:assembly_test.c **** 
 788:assembly_test.c **** 	txbuf[18] = pa; // request pa
 789:assembly_test.c **** 	txbuf[19] = 0; // request number
 790:assembly_test.c **** 	txbuf[20] = 0xff; // reply pa
 791:assembly_test.c **** 	txbuf[21] = 0xff; // reply number
 792:assembly_test.c **** 
 793:assembly_test.c **** 	// Bluetooth-like modulation
 794:assembly_test.c **** 	cc2400_set(MANAND,  0x7fff);
 1384              		.loc 1 794 0
 1385 003c 0D20     		movs	r0, #13
 771:assembly_test.c **** 	txbuf[3] = (result[1] >> 16) & 0xFF;
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 42


 1386              		.loc 1 771 0
 1387 003e 190E     		lsrs	r1, r3, #24
 1388 0040 87F84A10 		strb	r1, [r7, #74]
 772:assembly_test.c **** 	txbuf[3] = (result[1] >> 16) & 0xFF;
 1389              		.loc 1 772 0
 1390 0044 190C     		lsrs	r1, r3, #16
 1391 0046 87F84B10 		strb	r1, [r7, #75]
 774:assembly_test.c **** 	txbuf[6] = (result[2] >> 24) & 0xFF;
 1392              		.loc 1 774 0
 1393 004a 87F84D30 		strb	r3, [r7, #77]
 773:assembly_test.c **** 	txbuf[5] = result[1] & 0xFF;
 1394              		.loc 1 773 0
 1395 004e 190A     		lsrs	r1, r3, #8
 775:assembly_test.c **** 	txbuf[7] = (result[2] >> 16) & 0xFF;
 1396              		.loc 1 775 0
 1397 0050 7B6A     		ldr	r3, [r7, #36]
 773:assembly_test.c **** 	txbuf[5] = result[1] & 0xFF;
 1398              		.loc 1 773 0
 1399 0052 87F84C10 		strb	r1, [r7, #76]
 775:assembly_test.c **** 	txbuf[7] = (result[2] >> 16) & 0xFF;
 1400              		.loc 1 775 0
 1401 0056 190E     		lsrs	r1, r3, #24
 1402 0058 87F84E10 		strb	r1, [r7, #78]
 776:assembly_test.c **** 	txbuf[8] = (result[2] >> 8) & 0xFF;
 1403              		.loc 1 776 0
 1404 005c 190C     		lsrs	r1, r3, #16
 1405 005e 87F84F10 		strb	r1, [r7, #79]
 778:assembly_test.c **** 	txbuf[10] = (result[3] >> 24) & 0xFF;
 1406              		.loc 1 778 0
 1407 0062 87F85130 		strb	r3, [r7, #81]
 777:assembly_test.c **** 	txbuf[9] = result[2] & 0xFF;
 1408              		.loc 1 777 0
 1409 0066 190A     		lsrs	r1, r3, #8
 779:assembly_test.c **** 	txbuf[11] = (result[3] >> 16) & 0xFF;
 1410              		.loc 1 779 0
 1411 0068 BB6A     		ldr	r3, [r7, #40]
 777:assembly_test.c **** 	txbuf[9] = result[2] & 0xFF;
 1412              		.loc 1 777 0
 1413 006a 87F85010 		strb	r1, [r7, #80]
 779:assembly_test.c **** 	txbuf[11] = (result[3] >> 16) & 0xFF;
 1414              		.loc 1 779 0
 1415 006e 190E     		lsrs	r1, r3, #24
 1416 0070 87F85210 		strb	r1, [r7, #82]
 780:assembly_test.c **** 	txbuf[12] = (result[3] >> 8) & 0xFF;
 1417              		.loc 1 780 0
 1418 0074 190C     		lsrs	r1, r3, #16
 1419 0076 87F85310 		strb	r1, [r7, #83]
 782:assembly_test.c **** 	txbuf[14] = (result[4] >> 24) & 0xFF;
 1420              		.loc 1 782 0
 1421 007a 87F85530 		strb	r3, [r7, #85]
 781:assembly_test.c **** 	txbuf[13] = result[3] & 0xFF;
 1422              		.loc 1 781 0
 1423 007e 190A     		lsrs	r1, r3, #8
 783:assembly_test.c **** 	txbuf[15] = (result[4] >> 16) & 0xFF;
 1424              		.loc 1 783 0
 1425 0080 FB6A     		ldr	r3, [r7, #44]
 781:assembly_test.c **** 	txbuf[13] = result[3] & 0xFF;
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 43


 1426              		.loc 1 781 0
 1427 0082 87F85410 		strb	r1, [r7, #84]
 783:assembly_test.c **** 	txbuf[15] = (result[4] >> 16) & 0xFF;
 1428              		.loc 1 783 0
 1429 0086 190E     		lsrs	r1, r3, #24
 1430 0088 87F85610 		strb	r1, [r7, #86]
 784:assembly_test.c **** 	txbuf[16] = (result[4] >> 8) & 0xFF;
 1431              		.loc 1 784 0
 1432 008c 190C     		lsrs	r1, r3, #16
 1433 008e 87F85710 		strb	r1, [r7, #87]
 785:assembly_test.c **** 	txbuf[17] = result[4] & 0xFF;
 1434              		.loc 1 785 0
 1435 0092 190A     		lsrs	r1, r3, #8
 1436 0094 87F85810 		strb	r1, [r7, #88]
 786:assembly_test.c **** 
 1437              		.loc 1 786 0
 1438 0098 87F85930 		strb	r3, [r7, #89]
 1439              		.loc 1 794 0
 1440 009c 47F6FF71 		movw	r1, #32767
 790:assembly_test.c **** 	txbuf[21] = 0xff; // reply number
 1441              		.loc 1 790 0
 1442 00a0 FF23     		movs	r3, #255
 788:assembly_test.c **** 	txbuf[19] = 0; // request number
 1443              		.loc 1 788 0
 1444 00a2 87F85A20 		strb	r2, [r7, #90]
 789:assembly_test.c **** 	txbuf[20] = 0xff; // reply pa
 1445              		.loc 1 789 0
 1446 00a6 87F85B20 		strb	r2, [r7, #91]
 790:assembly_test.c **** 	txbuf[21] = 0xff; // reply number
 1447              		.loc 1 790 0
 1448 00aa 87F85C30 		strb	r3, [r7, #92]
 791:assembly_test.c **** 
 1449              		.loc 1 791 0
 1450 00ae 87F85D30 		strb	r3, [r7, #93]
 795:assembly_test.c **** 	cc2400_set(LMTST,   0x2b22);
 796:assembly_test.c **** 	cc2400_set(MDMTST0, 0x134b);
 797:assembly_test.c **** 	cc2400_set(FSDIV,   channel);
 1451              		.loc 1 797 0
 1452 00b2 7A4E     		ldr	r6, .L194+8
 794:assembly_test.c **** 	cc2400_set(LMTST,   0x2b22);
 1453              		.loc 1 794 0
 1454 00b4 FFF7FEFF 		bl	cc2400_set
 1455              	.LVL94:
 795:assembly_test.c **** 	cc2400_set(LMTST,   0x2b22);
 1456              		.loc 1 795 0
 1457 00b8 1220     		movs	r0, #18
 1458 00ba 42F62231 		movw	r1, #11042
 1459 00be FFF7FEFF 		bl	cc2400_set
 1460              	.LVL95:
 796:assembly_test.c **** 	cc2400_set(FSDIV,   channel);
 1461              		.loc 1 796 0
 1462 00c2 1420     		movs	r0, #20
 1463 00c4 41F24B31 		movw	r1, #4939
 1464 00c8 FFF7FEFF 		bl	cc2400_set
 1465              	.LVL96:
 1466              		.loc 1 797 0
 1467 00cc 3188     		ldrh	r1, [r6]
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 44


 1468 00ce 0220     		movs	r0, #2
 1469 00d0 89B2     		uxth	r1, r1
 1470 00d2 FFF7FEFF 		bl	cc2400_set
 1471              	.LVL97:
 798:assembly_test.c **** 	cc2400_set(SYNCH,   0xf9ae);
 1472              		.loc 1 798 0
 1473 00d6 2D20     		movs	r0, #45
 1474 00d8 4FF6AE11 		movw	r1, #63918
 1475 00dc FFF7FEFF 		bl	cc2400_set
 1476              	.LVL98:
 799:assembly_test.c **** 	cc2400_set(SYNCL,   0x1584);
 1477              		.loc 1 799 0
 1478 00e0 2C20     		movs	r0, #44
 1479 00e2 41F28451 		movw	r1, #5508
 1480 00e6 FFF7FEFF 		bl	cc2400_set
 1481              	.LVL99:
 800:assembly_test.c **** 	cc2400_set(FREND,   8 | pa);
 1482              		.loc 1 800 0
 1483 00ea 2046     		mov	r0, r4
 1484 00ec 0821     		movs	r1, #8
 1485 00ee FFF7FEFF 		bl	cc2400_set
 1486              	.LVL100:
 801:assembly_test.c **** 	cc2400_set(MDMCTRL, 0x0029);
 1487              		.loc 1 801 0
 1488 00f2 0320     		movs	r0, #3
 1489 00f4 2921     		movs	r1, #41
 1490 00f6 FFF7FEFF 		bl	cc2400_set
 1491              	.LVL101:
 1492              	.L151:
 802:assembly_test.c **** 	while (!(cc2400_status() & XOSC16M_STABLE));
 1493              		.loc 1 802 0 discriminator 1
 1494 00fa FFF7FEFF 		bl	cc2400_status
 1495              	.LVL102:
 1496 00fe 4106     		lsls	r1, r0, #25
 1497 0100 FBD5     		bpl	.L151
 803:assembly_test.c **** 	cc2400_strobe(SFSON);
 1498              		.loc 1 803 0
 1499 0102 6120     		movs	r0, #97
 1500 0104 FFF7FEFF 		bl	cc2400_strobe
 1501              	.LVL103:
 1502              	.L152:
 804:assembly_test.c **** 	while (!(cc2400_status() & FS_LOCK));
 1503              		.loc 1 804 0 discriminator 1
 1504 0108 FFF7FEFF 		bl	cc2400_status
 1505              	.LVL104:
 1506 010c 4207     		lsls	r2, r0, #29
 1507 010e FBD5     		bpl	.L152
 805:assembly_test.c **** 	TXLED_SET;
 1508              		.loc 1 805 0
 1509 0110 634B     		ldr	r3, .L194+12
 1510 0112 4FF48072 		mov	r2, #256
 1511 0116 9846     		mov	r8, r3
 1512 0118 1A60     		str	r2, [r3]
 806:assembly_test.c **** #ifdef UBERTOOTH_ONE
 807:assembly_test.c **** 	PAEN_SET;
 1513              		.loc 1 807 0
 1514 011a 624A     		ldr	r2, .L194+16
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 45


 1515 011c 8021     		movs	r1, #128
 1516 011e 1160     		str	r1, [r2]
 1517 0120 0024     		movs	r4, #0
 1518              	.LVL105:
 1519              	.L156:
 1520 0122 E5B2     		uxtb	r5, r4
 808:assembly_test.c **** #endif
 809:assembly_test.c **** 	for (pa = 0; pa < 8; pa++) {
 810:assembly_test.c **** 		cc2400_set(FREND, 8 | pa);
 1521              		.loc 1 810 0
 1522 0124 0520     		movs	r0, #5
 1523 0126 45F00801 		orr	r1, r5, #8
 1524 012a FFF7FEFF 		bl	cc2400_set
 1525              	.LVL106:
 811:assembly_test.c **** 		txbuf[18] = pa;
 812:assembly_test.c **** 		for (i = 0; i < 16; i++) {
 1526              		.loc 1 812 0
 1527 012e 4FF00009 		mov	r9, #0
 811:assembly_test.c **** 		txbuf[18] = pa;
 1528              		.loc 1 811 0
 1529 0132 87F85A50 		strb	r5, [r7, #90]
 1530              	.LVL107:
 1531              	.L155:
 813:assembly_test.c **** 			txbuf[19] = i;
 1532              		.loc 1 813 0
 1533 0136 87F85B90 		strb	r9, [r7, #91]
 1534              	.L153:
 814:assembly_test.c **** 			while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 1535              		.loc 1 814 0 discriminator 1
 1536 013a 0E20     		movs	r0, #14
 1537 013c FFF7FEFF 		bl	cc2400_get
 1538              	.LVL108:
 1539 0140 00F01F00 		and	r0, r0, #31
 1540 0144 0F28     		cmp	r0, #15
 1541 0146 F8D1     		bne	.L153
 1542 0148 4FF0000A 		mov	r10, #0
 1543              	.L154:
 1544              	.LVL109:
 815:assembly_test.c **** 			// transmit a packet
 816:assembly_test.c **** 			for (j = 0; j < len; j++)
 817:assembly_test.c **** 				cc2400_set8(FIFOREG, txbuf[j]);
 1545              		.loc 1 817 0 discriminator 3
 1546 014c 07F14805 		add	r5, r7, #72
 1547              	.LVL110:
 1548 0150 15F80A10 		ldrb	r1, [r5, r10]	@ zero_extendqisi2
 1549 0154 7020     		movs	r0, #112
 816:assembly_test.c **** 				cc2400_set8(FIFOREG, txbuf[j]);
 1550              		.loc 1 816 0 discriminator 3
 1551 0156 0AF1010A 		add	r10, r10, #1
 1552              	.LVL111:
 1553              		.loc 1 817 0 discriminator 3
 1554 015a FFF7FEFF 		bl	cc2400_set8
 1555              	.LVL112:
 816:assembly_test.c **** 				cc2400_set8(FIFOREG, txbuf[j]);
 1556              		.loc 1 816 0 discriminator 3
 1557 015e BAF1160F 		cmp	r10, #22
 1558 0162 F3D1     		bne	.L154
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 46


 818:assembly_test.c **** 			cc2400_strobe(STX);
 1559              		.loc 1 818 0 discriminator 2
 1560 0164 6320     		movs	r0, #99
 812:assembly_test.c **** 			txbuf[19] = i;
 1561              		.loc 1 812 0 discriminator 2
 1562 0166 09F10109 		add	r9, r9, #1
 1563              	.LVL113:
 1564              		.loc 1 818 0 discriminator 2
 1565 016a FFF7FEFF 		bl	cc2400_strobe
 1566              	.LVL114:
 812:assembly_test.c **** 			txbuf[19] = i;
 1567              		.loc 1 812 0 discriminator 2
 1568 016e B9F1100F 		cmp	r9, #16
 1569 0172 E0D1     		bne	.L155
 1570              	.LVL115:
 1571 0174 0134     		adds	r4, r4, #1
 1572              	.LVL116:
 809:assembly_test.c **** 		cc2400_set(FREND, 8 | pa);
 1573              		.loc 1 809 0 discriminator 2
 1574 0176 082C     		cmp	r4, #8
 1575 0178 D3D1     		bne	.L156
 1576              	.L157:
 819:assembly_test.c **** 		}
 820:assembly_test.c **** 	}
 821:assembly_test.c **** 	// sent packet, now look for repeated packet
 822:assembly_test.c **** 	while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 1577              		.loc 1 822 0 discriminator 1
 1578 017a 0E20     		movs	r0, #14
 1579 017c FFF7FEFF 		bl	cc2400_get
 1580              	.LVL117:
 1581 0180 00F01F00 		and	r0, r0, #31
 1582 0184 0F28     		cmp	r0, #15
 1583 0186 F8D1     		bne	.L157
 823:assembly_test.c **** 	TXLED_CLR;
 1584              		.loc 1 823 0
 1585 0188 474C     		ldr	r4, .L194+20
 1586 018a 4FF48073 		mov	r3, #256
 1587 018e 2360     		str	r3, [r4]
 824:assembly_test.c **** 	cc2400_strobe(SRFOFF);
 1588              		.loc 1 824 0
 1589 0190 6420     		movs	r0, #100
 1590 0192 FFF7FEFF 		bl	cc2400_strobe
 1591              	.LVL118:
 1592              	.L158:
 825:assembly_test.c **** 	while ((cc2400_status() & FS_LOCK));
 1593              		.loc 1 825 0 discriminator 1
 1594 0196 FFF7FEFF 		bl	cc2400_status
 1595              	.LVL119:
 1596 019a 4307     		lsls	r3, r0, #29
 1597 019c FBD4     		bmi	.L158
 826:assembly_test.c **** 	cc2400_set(FSDIV, channel - 1);
 1598              		.loc 1 826 0
 1599 019e 3188     		ldrh	r1, [r6]
 1600 01a0 0220     		movs	r0, #2
 1601 01a2 0139     		subs	r1, r1, #1
 1602 01a4 89B2     		uxth	r1, r1
 1603 01a6 FFF7FEFF 		bl	cc2400_set
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 47


 1604              	.LVL120:
 1605              	.L159:
 827:assembly_test.c **** 	while (!(cc2400_status() & XOSC16M_STABLE));
 1606              		.loc 1 827 0 discriminator 1
 1607 01aa FFF7FEFF 		bl	cc2400_status
 1608              	.LVL121:
 1609 01ae 4006     		lsls	r0, r0, #25
 1610 01b0 FBD5     		bpl	.L159
 828:assembly_test.c **** 	cc2400_strobe(SFSON);
 1611              		.loc 1 828 0
 1612 01b2 6120     		movs	r0, #97
 1613 01b4 FFF7FEFF 		bl	cc2400_strobe
 1614              	.LVL122:
 1615              	.L160:
 829:assembly_test.c **** 	while (!(cc2400_status() & FS_LOCK));
 1616              		.loc 1 829 0 discriminator 1
 1617 01b8 FFF7FEFF 		bl	cc2400_status
 1618              	.LVL123:
 1619 01bc 4107     		lsls	r1, r0, #29
 1620 01be FBD5     		bpl	.L160
 830:assembly_test.c **** 	RXLED_SET;
 1621              		.loc 1 830 0
 1622 01c0 1023     		movs	r3, #16
 1623 01c2 C8F80030 		str	r3, [r8]
 1624              	.LVL124:
 1625              	.L161:
 831:assembly_test.c **** 	while (1) {
 832:assembly_test.c **** 		while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 1626              		.loc 1 832 0 discriminator 1
 1627 01c6 0E20     		movs	r0, #14
 1628 01c8 FFF7FEFF 		bl	cc2400_get
 1629              	.LVL125:
 1630 01cc 00F01F00 		and	r0, r0, #31
 1631 01d0 0F28     		cmp	r0, #15
 1632 01d2 F8D1     		bne	.L161
 833:assembly_test.c **** 		cc2400_strobe(SRX);
 1633              		.loc 1 833 0
 1634 01d4 6220     		movs	r0, #98
 1635 01d6 FFF7FEFF 		bl	cc2400_strobe
 1636              	.LVL126:
 1637              	.L162:
 834:assembly_test.c **** 		while (!(cc2400_status() & SYNC_RECEIVED));
 1638              		.loc 1 834 0 discriminator 1
 1639 01da FFF7FEFF 		bl	cc2400_status
 1640              	.LVL127:
 1641 01de C206     		lsls	r2, r0, #27
 1642 01e0 FBD5     		bpl	.L162
 835:assembly_test.c **** 		USRLED_SET;
 1643              		.loc 1 835 0
 1644 01e2 0223     		movs	r3, #2
 1645 01e4 C8F80030 		str	r3, [r8]
 1646              	.LVL128:
 836:assembly_test.c **** 		for (j = 0; j < len; j++)
 1647              		.loc 1 836 0
 1648 01e8 4FF00009 		mov	r9, #0
 1649              	.LVL129:
 1650              	.L163:
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 48


 837:assembly_test.c **** 			rxbuf[j] = cc2400_get8(FIFOREG);
 1651              		.loc 1 837 0 discriminator 3
 1652 01ec 7020     		movs	r0, #112
 1653 01ee FFF7FEFF 		bl	cc2400_get8
 1654              	.LVL130:
 1655 01f2 07F13006 		add	r6, r7, #48
 1656              	.LVL131:
 1657 01f6 06F80900 		strb	r0, [r6, r9]
 836:assembly_test.c **** 		for (j = 0; j < len; j++)
 1658              		.loc 1 836 0 discriminator 3
 1659 01fa 09F10109 		add	r9, r9, #1
 1660              	.LVL132:
 1661 01fe B9F1160F 		cmp	r9, #22
 1662 0202 F3D1     		bne	.L163
 838:assembly_test.c **** 		if (cc2400_status() & STATUS_CRC_OK)
 1663              		.loc 1 838 0
 1664 0204 FFF7FEFF 		bl	cc2400_status
 1665              	.LVL133:
 1666 0208 0307     		lsls	r3, r0, #28
 1667 020a 02D4     		bmi	.L177
 839:assembly_test.c **** 			break;
 840:assembly_test.c **** 		USRLED_CLR;
 1668              		.loc 1 840 0
 1669 020c 0223     		movs	r3, #2
 1670 020e 2360     		str	r3, [r4]
 841:assembly_test.c **** 	}
 1671              		.loc 1 841 0
 1672 0210 D9E7     		b	.L161
 1673              	.L177:
 842:assembly_test.c **** 
 843:assembly_test.c **** 	// done
 844:assembly_test.c **** 	while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 1674              		.loc 1 844 0 discriminator 1
 1675 0212 0E20     		movs	r0, #14
 1676 0214 FFF7FEFF 		bl	cc2400_get
 1677              	.LVL134:
 1678 0218 00F01F00 		and	r0, r0, #31
 1679 021c 0F28     		cmp	r0, #15
 1680 021e F8D1     		bne	.L177
 845:assembly_test.c **** 	cc2400_strobe(SRFOFF);
 1681              		.loc 1 845 0
 1682 0220 6420     		movs	r0, #100
 1683 0222 FFF7FEFF 		bl	cc2400_strobe
 1684              	.LVL135:
 1685              	.L166:
 846:assembly_test.c **** 	while ((cc2400_status() & FS_LOCK));
 1686              		.loc 1 846 0 discriminator 1
 1687 0226 FFF7FEFF 		bl	cc2400_status
 1688              	.LVL136:
 1689 022a 00F00400 		and	r0, r0, #4
 1690 022e 00F0FF02 		and	r2, r0, #255
 1691 0232 0028     		cmp	r0, #0
 1692 0234 F7D1     		bne	.L166
 847:assembly_test.c **** #ifdef UBERTOOTH_ONE
 848:assembly_test.c **** 	PAEN_CLR;
 1693              		.loc 1 848 0
 1694 0236 1D4B     		ldr	r3, .L194+24
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 49


 1695 0238 8021     		movs	r1, #128
 1696 023a 1960     		str	r1, [r3]
 849:assembly_test.c **** #endif
 850:assembly_test.c **** 	RXLED_CLR;
 1697              		.loc 1 850 0
 1698 023c 1023     		movs	r3, #16
 1699 023e 2360     		str	r3, [r4]
 851:assembly_test.c **** 
 852:assembly_test.c **** 	// get test result
 853:assembly_test.c **** 	rr.valid       = 1;
 854:assembly_test.c **** 	rr.request_pa  = rxbuf[18];
 1700              		.loc 1 854 0
 1701 0240 97F84200 		ldrb	r0, [r7, #66]	@ zero_extendqisi2
 853:assembly_test.c **** 	rr.request_pa  = rxbuf[18];
 1702              		.loc 1 853 0
 1703 0244 1A4B     		ldr	r3, .L194+28
 1704 0246 0121     		movs	r1, #1
 1705              		.loc 1 854 0
 1706 0248 5870     		strb	r0, [r3, #1]
 855:assembly_test.c **** 	rr.request_num = rxbuf[19];
 1707              		.loc 1 855 0
 1708 024a 97F84300 		ldrb	r0, [r7, #67]	@ zero_extendqisi2
 856:assembly_test.c **** 	rr.reply_pa    = rxbuf[20];
 857:assembly_test.c **** 	rr.reply_num   = rxbuf[21];
 858:assembly_test.c **** 
 859:assembly_test.c **** 	// make sure rx packet is as expected
 860:assembly_test.c **** 	txbuf[1] = 1; // expected value in rxbuf
 1709              		.loc 1 860 0
 1710 024e 87F84910 		strb	r1, [r7, #73]
 1711              	.LVL137:
 855:assembly_test.c **** 	rr.request_num = rxbuf[19];
 1712              		.loc 1 855 0
 1713 0252 9870     		strb	r0, [r3, #2]
 856:assembly_test.c **** 	rr.reply_pa    = rxbuf[20];
 1714              		.loc 1 856 0
 1715 0254 97F84400 		ldrb	r0, [r7, #68]	@ zero_extendqisi2
 1716 0258 D870     		strb	r0, [r3, #3]
 857:assembly_test.c **** 
 1717              		.loc 1 857 0
 1718 025a 97F84500 		ldrb	r0, [r7, #69]	@ zero_extendqisi2
 1719 025e 1871     		strb	r0, [r3, #4]
 1720              	.LVL138:
 1721              	.L168:
 861:assembly_test.c **** 	for (i = 0; i < 18; i++)
 862:assembly_test.c **** 		if (rxbuf[i] != txbuf[i])
 1722              		.loc 1 862 0
 1723 0260 16F802E0 		ldrb	lr, [r6, r2]	@ zero_extendqisi2
 1724 0264 A85C     		ldrb	r0, [r5, r2]	@ zero_extendqisi2
 861:assembly_test.c **** 	for (i = 0; i < 18; i++)
 1725              		.loc 1 861 0
 1726 0266 0132     		adds	r2, r2, #1
 1727              	.LVL139:
 863:assembly_test.c **** 			rr.valid = 0;
 1728              		.loc 1 863 0
 1729 0268 8645     		cmp	lr, r0
 1730 026a 18BF     		it	ne
 1731 026c 0021     		movne	r1, #0
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 50


 861:assembly_test.c **** 	for (i = 0; i < 18; i++)
 1732              		.loc 1 861 0
 1733 026e 122A     		cmp	r2, #18
 1734 0270 F6D1     		bne	.L168
 1735 0272 1970     		strb	r1, [r3]
 864:assembly_test.c **** 
 865:assembly_test.c **** 	USRLED_CLR;
 1736              		.loc 1 865 0
 1737 0274 0223     		movs	r3, #2
 1738 0276 2360     		str	r3, [r4]
 866:assembly_test.c **** 	mode = MODE_IDLE;
 1739              		.loc 1 866 0
 1740 0278 064B     		ldr	r3, .L194
 1741 027a 0022     		movs	r2, #0
 1742              	.LVL140:
 1743 027c 9A62     		str	r2, [r3, #40]
 867:assembly_test.c **** 	if (requested_mode == MODE_RANGE_TEST)
 1744              		.loc 1 867 0
 1745 027e 5968     		ldr	r1, [r3, #4]
 1746 0280 0529     		cmp	r1, #5
 868:assembly_test.c **** 		requested_mode = MODE_IDLE;
 1747              		.loc 1 868 0
 1748 0282 08BF     		it	eq
 1749 0284 5A60     		streq	r2, [r3, #4]
 1750 0286 D7F804D0 		ldr	sp, [r7, #4]
 1751              	.LVL141:
 1752              	.L149:
 869:assembly_test.c **** #endif
 870:assembly_test.c **** }
 1753              		.loc 1 870 0
 1754 028a 6037     		adds	r7, r7, #96
 1755              		.cfi_def_cfa_offset 32
 1756              	.LVL142:
 1757 028c BD46     		mov	sp, r7
 1758              		.cfi_def_cfa_register 13
 1759              		@ sp needed
 1760 028e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1761              	.LVL143:
 1762              	.L195:
 1763 0292 00BF     		.align	2
 1764              	.L194:
 1765 0294 00000000 		.word	.LANCHOR0
 1766 0298 00000000 		.word	iap_entry
 1767 029c 00000000 		.word	.LANCHOR1
 1768 02a0 38C00920 		.word	537509944
 1769 02a4 58C00920 		.word	537509976
 1770 02a8 3CC00920 		.word	537509948
 1771 02ac 5CC00920 		.word	537509980
 1772 02b0 00000000 		.word	rr
 1773              		.cfi_endproc
 1774              	.LFE14:
 1776              		.section	.text.cc2400_repeater,"ax",%progbits
 1777              		.align	1
 1778              		.global	cc2400_repeater
 1779              		.thumb
 1780              		.thumb_func
 1782              	cc2400_repeater:
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 51


 1783              	.LFB15:
 871:assembly_test.c **** 
 872:assembly_test.c **** /* This is the repeater implementation to be used with cc2400_rangetest(). */
 873:assembly_test.c **** void cc2400_repeater()
 874:assembly_test.c **** {
 1784              		.loc 1 874 0
 1785              		.cfi_startproc
 1786              		@ args = 0, pretend = 0, frame = 24
 1787              		@ frame_needed = 0, uses_anonymous_args = 0
 1788 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1789              		.cfi_def_cfa_offset 28
 1790              		.cfi_offset 4, -28
 1791              		.cfi_offset 5, -24
 1792              		.cfi_offset 6, -20
 1793              		.cfi_offset 7, -16
 1794              		.cfi_offset 8, -12
 1795              		.cfi_offset 9, -8
 1796              		.cfi_offset 14, -4
 1797 0004 87B0     		sub	sp, sp, #28
 1798              		.cfi_def_cfa_offset 56
 1799              	.LVL144:
 875:assembly_test.c **** #ifdef TX_ENABLE
 876:assembly_test.c **** 	int i;
 877:assembly_test.c **** 	int j;
 878:assembly_test.c **** 	u8 len = 22;
 879:assembly_test.c **** 	u8 pa = 0;
 880:assembly_test.c **** 	u8 buf[len];
 881:assembly_test.c **** 
 882:assembly_test.c **** 	mode = MODE_REPEATER;
 1800              		.loc 1 882 0
 1801 0006 5C4B     		ldr	r3, .L232
 1802 0008 0622     		movs	r2, #6
 1803 000a 9A62     		str	r2, [r3, #40]
 1804              	.LVL145:
 1805              	.L211:
 883:assembly_test.c **** 
 884:assembly_test.c **** 	//FIXME allow to be turned off
 885:assembly_test.c **** 	while (1) {
 886:assembly_test.c **** 		cc2400_set(MANAND,  0x7fff);
 1806              		.loc 1 886 0
 1807 000c 0D20     		movs	r0, #13
 1808 000e 47F6FF71 		movw	r1, #32767
 1809 0012 FFF7FEFF 		bl	cc2400_set
 1810              	.LVL146:
 887:assembly_test.c **** 		cc2400_set(LMTST,   0x2b22);
 888:assembly_test.c **** 		cc2400_set(MDMTST0, 0x134b);
 889:assembly_test.c **** 		cc2400_set(FSDIV,   channel - 1);
 1811              		.loc 1 889 0
 1812 0016 594F     		ldr	r7, .L232+4
 887:assembly_test.c **** 		cc2400_set(LMTST,   0x2b22);
 1813              		.loc 1 887 0
 1814 0018 1220     		movs	r0, #18
 1815 001a 42F62231 		movw	r1, #11042
 1816 001e FFF7FEFF 		bl	cc2400_set
 1817              	.LVL147:
 888:assembly_test.c **** 		cc2400_set(FSDIV,   channel - 1);
 1818              		.loc 1 888 0
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 52


 1819 0022 1420     		movs	r0, #20
 1820 0024 41F24B31 		movw	r1, #4939
 1821 0028 FFF7FEFF 		bl	cc2400_set
 1822              	.LVL148:
 1823              		.loc 1 889 0
 1824 002c 3988     		ldrh	r1, [r7]
 1825 002e 0220     		movs	r0, #2
 1826 0030 0139     		subs	r1, r1, #1
 1827 0032 89B2     		uxth	r1, r1
 1828 0034 FFF7FEFF 		bl	cc2400_set
 1829              	.LVL149:
 890:assembly_test.c **** 		cc2400_set(SYNCH,   0xf9ae);
 1830              		.loc 1 890 0
 1831 0038 2D20     		movs	r0, #45
 1832 003a 4FF6AE11 		movw	r1, #63918
 1833 003e FFF7FEFF 		bl	cc2400_set
 1834              	.LVL150:
 891:assembly_test.c **** 		cc2400_set(SYNCL,   0x1584);
 1835              		.loc 1 891 0
 1836 0042 2C20     		movs	r0, #44
 1837 0044 41F28451 		movw	r1, #5508
 1838 0048 FFF7FEFF 		bl	cc2400_set
 1839              	.LVL151:
 892:assembly_test.c **** 		cc2400_set(FREND,   0x0008); // minimum tx power
 1840              		.loc 1 892 0
 1841 004c 0520     		movs	r0, #5
 1842 004e 0821     		movs	r1, #8
 1843 0050 FFF7FEFF 		bl	cc2400_set
 1844              	.LVL152:
 893:assembly_test.c **** 		cc2400_set(MDMCTRL, 0x0029); // 160 kHz frequency deviation
 1845              		.loc 1 893 0
 1846 0054 0320     		movs	r0, #3
 1847 0056 2921     		movs	r1, #41
 1848 0058 FFF7FEFF 		bl	cc2400_set
 1849              	.LVL153:
 1850              	.L197:
 894:assembly_test.c **** 		while (!(cc2400_status() & XOSC16M_STABLE));
 1851              		.loc 1 894 0 discriminator 1
 1852 005c FFF7FEFF 		bl	cc2400_status
 1853              	.LVL154:
 1854 0060 4106     		lsls	r1, r0, #25
 1855 0062 FBD5     		bpl	.L197
 895:assembly_test.c **** 		cc2400_strobe(SFSON);
 1856              		.loc 1 895 0
 1857 0064 6120     		movs	r0, #97
 1858 0066 FFF7FEFF 		bl	cc2400_strobe
 1859              	.LVL155:
 1860              	.L198:
 896:assembly_test.c **** 		while (!(cc2400_status() & FS_LOCK));
 1861              		.loc 1 896 0 discriminator 1
 1862 006a FFF7FEFF 		bl	cc2400_status
 1863              	.LVL156:
 1864 006e 4207     		lsls	r2, r0, #29
 1865 0070 FBD5     		bpl	.L198
 897:assembly_test.c **** 		RXLED_SET;
 898:assembly_test.c **** 		TXLED_CLR;
 1866              		.loc 1 898 0
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 53


 1867 0072 434C     		ldr	r4, .L232+8
 897:assembly_test.c **** 		RXLED_SET;
 1868              		.loc 1 897 0
 1869 0074 434E     		ldr	r6, .L232+12
 1870 0076 A146     		mov	r9, r4
 1871 0078 B046     		mov	r8, r6
 1872 007a 1023     		movs	r3, #16
 1873 007c 3360     		str	r3, [r6]
 1874              		.loc 1 898 0
 1875 007e 4FF48073 		mov	r3, #256
 1876 0082 2360     		str	r3, [r4]
 899:assembly_test.c **** 		USRLED_CLR;
 1877              		.loc 1 899 0
 1878 0084 0223     		movs	r3, #2
 1879 0086 2360     		str	r3, [r4]
 900:assembly_test.c **** #ifdef UBERTOOTH_ONE
 901:assembly_test.c **** 		PAEN_SET;
 1880              		.loc 1 901 0
 1881 0088 3F4B     		ldr	r3, .L232+16
 1882 008a 8022     		movs	r2, #128
 1883 008c 1A60     		str	r2, [r3]
 1884              	.L199:
 902:assembly_test.c **** #endif
 903:assembly_test.c **** 		while (1) {
 904:assembly_test.c **** 			while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 1885              		.loc 1 904 0 discriminator 1
 1886 008e 0E20     		movs	r0, #14
 1887 0090 FFF7FEFF 		bl	cc2400_get
 1888              	.LVL157:
 1889 0094 00F01F00 		and	r0, r0, #31
 1890 0098 0F28     		cmp	r0, #15
 1891 009a F8D1     		bne	.L199
 905:assembly_test.c **** 			USRLED_CLR;
 1892              		.loc 1 905 0
 1893 009c 0223     		movs	r3, #2
 1894 009e C9F80030 		str	r3, [r9]
 906:assembly_test.c **** 			cc2400_strobe(SRX);
 1895              		.loc 1 906 0
 1896 00a2 6220     		movs	r0, #98
 1897 00a4 FFF7FEFF 		bl	cc2400_strobe
 1898              	.LVL158:
 1899              	.L200:
 907:assembly_test.c **** 			while (!(cc2400_status() & SYNC_RECEIVED));
 1900              		.loc 1 907 0 discriminator 1
 1901 00a8 FFF7FEFF 		bl	cc2400_status
 1902              	.LVL159:
 1903 00ac C306     		lsls	r3, r0, #27
 1904 00ae FBD5     		bpl	.L200
 908:assembly_test.c **** 			USRLED_SET;
 1905              		.loc 1 908 0
 1906 00b0 0223     		movs	r3, #2
 1907 00b2 C8F80030 		str	r3, [r8]
 1908              	.LVL160:
 909:assembly_test.c **** 			for (i = 0; i < len; i++)
 1909              		.loc 1 909 0
 1910 00b6 0025     		movs	r5, #0
 1911              	.LVL161:
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 54


 1912              	.L201:
 910:assembly_test.c **** 				buf[i] = cc2400_get8(FIFOREG);
 1913              		.loc 1 910 0 discriminator 3
 1914 00b8 7020     		movs	r0, #112
 1915 00ba FFF7FEFF 		bl	cc2400_get8
 1916              	.LVL162:
 1917 00be 0DF80500 		strb	r0, [sp, r5]
 909:assembly_test.c **** 			for (i = 0; i < len; i++)
 1918              		.loc 1 909 0 discriminator 3
 1919 00c2 0135     		adds	r5, r5, #1
 1920              	.LVL163:
 1921 00c4 162D     		cmp	r5, #22
 1922 00c6 F7D1     		bne	.L201
 911:assembly_test.c **** 			if (cc2400_status() & STATUS_CRC_OK)
 1923              		.loc 1 911 0
 1924 00c8 FFF7FEFF 		bl	cc2400_status
 1925              	.LVL164:
 1926 00cc 0507     		lsls	r5, r0, #28
 1927              	.LVL165:
 1928 00ce DED5     		bpl	.L199
 912:assembly_test.c **** 				break;
 913:assembly_test.c **** 		}
 914:assembly_test.c **** 		// got packet, now repeat it
 915:assembly_test.c **** 		i = 2000000; while (--i); // allow time for requester to switch to rx
 916:assembly_test.c **** 		USRLED_CLR;
 1929              		.loc 1 916 0
 1930 00d0 0223     		movs	r3, #2
 1931 00d2 2360     		str	r3, [r4]
 917:assembly_test.c **** 		RXLED_CLR;
 1932              		.loc 1 917 0
 1933 00d4 1023     		movs	r3, #16
 1934 00d6 2360     		str	r3, [r4]
 918:assembly_test.c **** 		cc2400_strobe(SRFOFF);
 1935              		.loc 1 918 0
 1936 00d8 6420     		movs	r0, #100
 1937 00da FFF7FEFF 		bl	cc2400_strobe
 1938              	.LVL166:
 1939              	.L203:
 919:assembly_test.c **** 		while ((cc2400_status() & FS_LOCK));
 1940              		.loc 1 919 0 discriminator 1
 1941 00de FFF7FEFF 		bl	cc2400_status
 1942              	.LVL167:
 1943 00e2 4007     		lsls	r0, r0, #29
 1944 00e4 FBD4     		bmi	.L203
 1945              	.L204:
 920:assembly_test.c **** 		while (!(cc2400_status() & XOSC16M_STABLE));
 1946              		.loc 1 920 0 discriminator 1
 1947 00e6 FFF7FEFF 		bl	cc2400_status
 1948              	.LVL168:
 1949 00ea 4106     		lsls	r1, r0, #25
 1950 00ec FBD5     		bpl	.L204
 921:assembly_test.c **** 		cc2400_set(FSDIV, channel);
 1951              		.loc 1 921 0
 1952 00ee 3988     		ldrh	r1, [r7]
 1953 00f0 0220     		movs	r0, #2
 1954 00f2 89B2     		uxth	r1, r1
 1955 00f4 FFF7FEFF 		bl	cc2400_set
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 55


 1956              	.LVL169:
 1957              	.L205:
 922:assembly_test.c **** 		while (!(cc2400_status() & XOSC16M_STABLE));
 1958              		.loc 1 922 0 discriminator 1
 1959 00f8 FFF7FEFF 		bl	cc2400_status
 1960              	.LVL170:
 1961 00fc 4206     		lsls	r2, r0, #25
 1962 00fe FBD5     		bpl	.L205
 923:assembly_test.c **** 		cc2400_strobe(SFSON);
 1963              		.loc 1 923 0
 1964 0100 6120     		movs	r0, #97
 1965 0102 FFF7FEFF 		bl	cc2400_strobe
 1966              	.LVL171:
 924:assembly_test.c **** 		TXLED_SET;
 1967              		.loc 1 924 0
 1968 0106 4FF48073 		mov	r3, #256
 1969 010a 3360     		str	r3, [r6]
 925:assembly_test.c **** 		buf[0] = len - 1; // length of data (rest of payload)
 1970              		.loc 1 925 0
 1971 010c 1523     		movs	r3, #21
 1972 010e 8DF80030 		strb	r3, [sp]
 926:assembly_test.c **** 		buf[1] = 1; // reply
 1973              		.loc 1 926 0
 1974 0112 0123     		movs	r3, #1
 1975 0114 8DF80130 		strb	r3, [sp, #1]
 1976              	.LVL172:
 1977 0118 0025     		movs	r5, #0
 1978              	.LVL173:
 1979              	.L209:
 1980 011a EEB2     		uxtb	r6, r5
 927:assembly_test.c **** 		for (pa = 0; pa < 8; pa++) {
 928:assembly_test.c **** 			cc2400_set(FREND, 8 | pa);
 1981              		.loc 1 928 0
 1982 011c 46F00801 		orr	r1, r6, #8
 1983 0120 0520     		movs	r0, #5
 1984 0122 FFF7FEFF 		bl	cc2400_set
 1985              	.LVL174:
 929:assembly_test.c **** 			buf[20] = pa;
 1986              		.loc 1 929 0
 1987 0126 8DF81460 		strb	r6, [sp, #20]
 1988              	.LVL175:
 930:assembly_test.c **** 			for (i = 0; i < 16; i++) {
 1989              		.loc 1 930 0
 1990 012a 0026     		movs	r6, #0
 1991              	.LVL176:
 1992              	.L208:
 931:assembly_test.c **** 				buf[21] = i;
 1993              		.loc 1 931 0
 1994 012c 8DF81560 		strb	r6, [sp, #21]
 1995              	.L206:
 932:assembly_test.c **** 				while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 1996              		.loc 1 932 0 discriminator 1
 1997 0130 0E20     		movs	r0, #14
 1998 0132 FFF7FEFF 		bl	cc2400_get
 1999              	.LVL177:
 2000 0136 00F01F00 		and	r0, r0, #31
 2001 013a 0F28     		cmp	r0, #15
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 56


 2002 013c F8D1     		bne	.L206
 2003 013e 0027     		movs	r7, #0
 2004              	.L207:
 2005              	.LVL178:
 933:assembly_test.c **** 					for (j = 0; j < len; j++)
 934:assembly_test.c **** 						cc2400_set8(FIFOREG, buf[j]);
 2006              		.loc 1 934 0 discriminator 3
 2007 0140 1DF80710 		ldrb	r1, [sp, r7]	@ zero_extendqisi2
 2008 0144 7020     		movs	r0, #112
 933:assembly_test.c **** 					for (j = 0; j < len; j++)
 2009              		.loc 1 933 0 discriminator 3
 2010 0146 0137     		adds	r7, r7, #1
 2011              	.LVL179:
 2012              		.loc 1 934 0 discriminator 3
 2013 0148 FFF7FEFF 		bl	cc2400_set8
 2014              	.LVL180:
 933:assembly_test.c **** 					for (j = 0; j < len; j++)
 2015              		.loc 1 933 0 discriminator 3
 2016 014c 162F     		cmp	r7, #22
 2017 014e F7D1     		bne	.L207
 935:assembly_test.c **** 				cc2400_strobe(STX);
 2018              		.loc 1 935 0 discriminator 2
 2019 0150 6320     		movs	r0, #99
 930:assembly_test.c **** 				buf[21] = i;
 2020              		.loc 1 930 0 discriminator 2
 2021 0152 0136     		adds	r6, r6, #1
 2022              	.LVL181:
 2023              		.loc 1 935 0 discriminator 2
 2024 0154 FFF7FEFF 		bl	cc2400_strobe
 2025              	.LVL182:
 930:assembly_test.c **** 				buf[21] = i;
 2026              		.loc 1 930 0 discriminator 2
 2027 0158 102E     		cmp	r6, #16
 2028 015a E7D1     		bne	.L208
 2029              	.LVL183:
 2030 015c 0135     		adds	r5, r5, #1
 2031              	.LVL184:
 927:assembly_test.c **** 			cc2400_set(FREND, 8 | pa);
 2032              		.loc 1 927 0 discriminator 2
 2033 015e 082D     		cmp	r5, #8
 2034 0160 DBD1     		bne	.L209
 936:assembly_test.c **** 			}
 937:assembly_test.c **** 		}
 938:assembly_test.c **** 		TXLED_CLR;
 2035              		.loc 1 938 0
 2036 0162 4FF48073 		mov	r3, #256
 2037 0166 2360     		str	r3, [r4]
 939:assembly_test.c **** 		cc2400_strobe(SRFOFF);
 2038              		.loc 1 939 0
 2039 0168 6420     		movs	r0, #100
 2040 016a FFF7FEFF 		bl	cc2400_strobe
 2041              	.LVL185:
 2042              	.L210:
 940:assembly_test.c **** 		while ((cc2400_status() & FS_LOCK));
 2043              		.loc 1 940 0 discriminator 1
 2044 016e FFF7FEFF 		bl	cc2400_status
 2045              	.LVL186:
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 57


 2046 0172 4307     		lsls	r3, r0, #29
 2047 0174 FBD4     		bmi	.L210
 2048 0176 49E7     		b	.L211
 2049              	.L233:
 2050              		.align	2
 2051              	.L232:
 2052 0178 00000000 		.word	.LANCHOR0
 2053 017c 00000000 		.word	.LANCHOR1
 2054 0180 3CC00920 		.word	537509948
 2055 0184 38C00920 		.word	537509944
 2056 0188 58C00920 		.word	537509976
 2057              		.cfi_endproc
 2058              	.LFE15:
 2060              		.section	.text.bt_stream_rx,"ax",%progbits
 2061              		.align	1
 2062              		.global	bt_stream_rx
 2063              		.thumb
 2064              		.thumb_func
 2066              	bt_stream_rx:
 2067              	.LFB16:
 941:assembly_test.c **** 	}
 942:assembly_test.c **** #endif
 943:assembly_test.c **** }
 944:assembly_test.c **** 
 945:assembly_test.c **** void bt_stream_rx()
 946:assembly_test.c **** {
 2068              		.loc 1 946 0
 2069              		.cfi_startproc
 2070              		@ args = 0, pretend = 0, frame = 0
 2071              		@ frame_needed = 0, uses_anonymous_args = 0
 2072 0000 70B5     		push	{r4, r5, r6, lr}
 2073              		.cfi_def_cfa_offset 16
 2074              		.cfi_offset 4, -16
 2075              		.cfi_offset 5, -12
 2076              		.cfi_offset 6, -8
 2077              		.cfi_offset 14, -4
 2078              	.LVL187:
 947:assembly_test.c **** 	u8 *tmp = NULL;
 948:assembly_test.c **** 	u8 epstat;
 949:assembly_test.c **** 	int i;
 950:assembly_test.c **** 
 951:assembly_test.c **** 	RXLED_SET;
 2079              		.loc 1 951 0
 2080 0002 2A4B     		ldr	r3, .L258
 2081 0004 1022     		movs	r2, #16
 2082 0006 1A60     		str	r2, [r3]
 952:assembly_test.c **** 
 953:assembly_test.c **** 	queue_init();
 2083              		.loc 1 953 0
 2084 0008 FFF7FEFF 		bl	queue_init
 2085              	.LVL188:
 954:assembly_test.c **** 	dio_ssp_init();
 2086              		.loc 1 954 0
 2087 000c FFF7FEFF 		bl	dio_ssp_init
 2088              	.LVL189:
 955:assembly_test.c **** 	dma_init();
 2089              		.loc 1 955 0
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 58


 2090 0010 FFF7FEFF 		bl	dma_init
 2091              	.LVL190:
 956:assembly_test.c **** 	dio_ssp_start();
 2092              		.loc 1 956 0
 2093 0014 FFF7FEFF 		bl	dio_ssp_start
 2094              	.LVL191:
 957:assembly_test.c **** 	cc2400_rx();
 2095              		.loc 1 957 0
 2096 0018 FFF7FEFF 		bl	cc2400_rx
 2097              	.LVL192:
 2098              	.L235:
 958:assembly_test.c **** 
 959:assembly_test.c **** 	while (rx_pkts) {
 2099              		.loc 1 959 0
 2100 001c 244C     		ldr	r4, .L258+4
 2101 001e 2368     		ldr	r3, [r4]
 2102 0020 002B     		cmp	r3, #0
 2103 0022 3ED0     		beq	.L257
 2104              	.L252:
 960:assembly_test.c **** 		/* wait for DMA transfer */
 961:assembly_test.c **** 		while ((rx_tc == 0) && (rx_err == 0));
 2105              		.loc 1 961 0 discriminator 2
 2106 0024 234D     		ldr	r5, .L258+8
 2107 0026 244E     		ldr	r6, .L258+12
 2108 0028 2B68     		ldr	r3, [r5]
 2109 002a 13B9     		cbnz	r3, .L236
 2110              		.loc 1 961 0 is_stmt 0 discriminator 1
 2111 002c 3368     		ldr	r3, [r6]
 2112 002e 002B     		cmp	r3, #0
 2113 0030 F8D0     		beq	.L252
 2114              	.L236:
 962:assembly_test.c **** 		if (rx_tc % 2) {
 2115              		.loc 1 962 0 is_stmt 1
 2116 0032 2B68     		ldr	r3, [r5]
 2117 0034 D907     		lsls	r1, r3, #31
 963:assembly_test.c **** 			/* swap buffers */
 964:assembly_test.c **** 			tmp = active_rxbuf;
 2118              		.loc 1 964 0
 2119 0036 41BF     		itttt	mi
 2120 0038 204B     		ldrmi	r3, .L258+16
 2121 003a 9A68     		ldrmi	r2, [r3, #8]
 2122              	.LVL193:
 965:assembly_test.c **** 			active_rxbuf = idle_rxbuf;
 2123              		.loc 1 965 0
 2124 003c D968     		ldrmi	r1, [r3, #12]
 966:assembly_test.c **** 			idle_rxbuf = tmp;
 2125              		.loc 1 966 0
 2126 003e DA60     		strmi	r2, [r3, #12]
 965:assembly_test.c **** 			active_rxbuf = idle_rxbuf;
 2127              		.loc 1 965 0
 2128 0040 48BF     		it	mi
 2129 0042 9960     		strmi	r1, [r3, #8]
 967:assembly_test.c **** 		}
 968:assembly_test.c **** 		if (rx_err)
 2130              		.loc 1 968 0
 2131 0044 3368     		ldr	r3, [r6]
 2132 0046 1BB1     		cbz	r3, .L239
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 59


 969:assembly_test.c **** 			status |= DMA_ERROR;
 2133              		.loc 1 969 0
 2134 0048 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 2135 004a 43F00203 		orr	r3, r3, #2
 2136 004e 2375     		strb	r3, [r4, #20]
 2137              	.L239:
 970:assembly_test.c **** 		if (rx_tc) {
 2138              		.loc 1 970 0
 2139 0050 2B68     		ldr	r3, [r5]
 2140 0052 A3B1     		cbz	r3, .L240
 971:assembly_test.c **** 			if (rx_tc > 1)
 2141              		.loc 1 971 0
 2142 0054 174B     		ldr	r3, .L258+8
 2143 0056 1B68     		ldr	r3, [r3]
 2144 0058 012B     		cmp	r3, #1
 972:assembly_test.c **** 				status |= DMA_OVERFLOW;
 2145              		.loc 1 972 0
 2146 005a 82BF     		ittt	hi
 2147 005c 237D     		ldrbhi	r3, [r4, #20]	@ zero_extendqisi2
 2148 005e 43F00103 		orrhi	r3, r3, #1
 2149 0062 2375     		strbhi	r3, [r4, #20]
 973:assembly_test.c **** 			if (enqueue(idle_rxbuf))
 2150              		.loc 1 973 0
 2151 0064 154B     		ldr	r3, .L258+16
 2152 0066 D868     		ldr	r0, [r3, #12]
 2153 0068 FFF7FEFF 		bl	enqueue
 2154              	.LVL194:
 2155 006c 18B1     		cbz	r0, .L242
 974:assembly_test.c **** 				--rx_pkts;
 2156              		.loc 1 974 0
 2157 006e 2368     		ldr	r3, [r4]
 2158 0070 013B     		subs	r3, r3, #1
 2159 0072 2360     		str	r3, [r4]
 2160 0074 03E0     		b	.L240
 2161              	.L242:
 975:assembly_test.c **** 			else
 976:assembly_test.c **** 				status |= FIFO_OVERFLOW;
 2162              		.loc 1 976 0
 2163 0076 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 2164 0078 43F00403 		orr	r3, r3, #4
 2165 007c 2375     		strb	r3, [r4, #20]
 2166              	.L240:
 977:assembly_test.c **** 		}
 978:assembly_test.c **** 
 979:assembly_test.c **** 		/* send via USB */
 980:assembly_test.c **** 		epstat = USBHwEPGetStatus(BULK_IN_EP);
 2167              		.loc 1 980 0
 2168 007e 8220     		movs	r0, #130
 2169 0080 FFF7FEFF 		bl	USBHwEPGetStatus
 2170              	.LVL195:
 981:assembly_test.c **** 		if (!(epstat & EPSTAT_B1FULL))
 2171              		.loc 1 981 0
 2172 0084 8206     		lsls	r2, r0, #26
 980:assembly_test.c **** 		if (!(epstat & EPSTAT_B1FULL))
 2173              		.loc 1 980 0
 2174 0086 0446     		mov	r4, r0
 2175              	.LVL196:
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 60


 2176              		.loc 1 981 0
 2177 0088 01D4     		bmi	.L243
 982:assembly_test.c **** 			dequeue();
 2178              		.loc 1 982 0
 2179 008a FFF7FEFF 		bl	dequeue
 2180              	.LVL197:
 2181              	.L243:
 983:assembly_test.c **** 		if (!(epstat & EPSTAT_B2FULL))
 2182              		.loc 1 983 0
 2183 008e 6306     		lsls	r3, r4, #25
 2184 0090 01D4     		bmi	.L244
 984:assembly_test.c **** 			dequeue();
 2185              		.loc 1 984 0
 2186 0092 FFF7FEFF 		bl	dequeue
 2187              	.LVL198:
 2188              	.L244:
 985:assembly_test.c **** 		USBHwISR();
 2189              		.loc 1 985 0
 2190 0096 FFF7FEFF 		bl	USBHwISR
 2191              	.LVL199:
 986:assembly_test.c **** 
 987:assembly_test.c **** 		rx_tc = 0;
 2192              		.loc 1 987 0
 2193 009a 0023     		movs	r3, #0
 2194 009c 2B60     		str	r3, [r5]
 988:assembly_test.c **** 		rx_err = 0;
 2195              		.loc 1 988 0
 2196 009e 3360     		str	r3, [r6]
 2197 00a0 BCE7     		b	.L235
 2198              	.L257:
 989:assembly_test.c **** 	}
 990:assembly_test.c **** 	//FIXME turn off rx
 991:assembly_test.c **** 	RXLED_CLR;
 2199              		.loc 1 991 0
 2200 00a2 074B     		ldr	r3, .L258+20
 2201 00a4 1022     		movs	r2, #16
 2202 00a6 1A60     		str	r2, [r3]
 2203 00a8 70BD     		pop	{r4, r5, r6, pc}
 2204              	.L259:
 2205 00aa 00BF     		.align	2
 2206              	.L258:
 2207 00ac 38C00920 		.word	537509944
 2208 00b0 00000000 		.word	.LANCHOR0
 2209 00b4 00000000 		.word	rx_tc
 2210 00b8 00000000 		.word	rx_err
 2211 00bc 00000000 		.word	.LANCHOR1
 2212 00c0 3CC00920 		.word	537509948
 2213              		.cfi_endproc
 2214              	.LFE16:
 2216              		.section	.text.specan,"ax",%progbits
 2217              		.align	1
 2218              		.global	specan
 2219              		.thumb
 2220              		.thumb_func
 2222              	specan:
 2223              	.LFB17:
 992:assembly_test.c **** }
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 61


 993:assembly_test.c **** 
 994:assembly_test.c **** /* spectrum analysis */
 995:assembly_test.c **** void specan()
 996:assembly_test.c **** {
 2224              		.loc 1 996 0
 2225              		.cfi_startproc
 2226              		@ args = 0, pretend = 0, frame = 56
 2227              		@ frame_needed = 0, uses_anonymous_args = 0
 2228 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2229              		.cfi_def_cfa_offset 20
 2230              		.cfi_offset 4, -20
 2231              		.cfi_offset 5, -16
 2232              		.cfi_offset 6, -12
 2233              		.cfi_offset 7, -8
 2234              		.cfi_offset 14, -4
 2235 0002 8FB0     		sub	sp, sp, #60
 2236              		.cfi_def_cfa_offset 80
 2237              	.LVL200:
 997:assembly_test.c **** 	u8 epstat;
 998:assembly_test.c **** 	u16 f;
 999:assembly_test.c **** 	u8 i = 0;
1000:assembly_test.c **** 	u8 buf[DMA_SIZE];
1001:assembly_test.c **** 
1002:assembly_test.c **** 	RXLED_SET;
 2238              		.loc 1 1002 0
 2239 0004 3D4B     		ldr	r3, .L281
 2240 0006 1022     		movs	r2, #16
 2241 0008 1A60     		str	r2, [r3]
1003:assembly_test.c **** 
1004:assembly_test.c **** 	queue_init();
 2242              		.loc 1 1004 0
 2243 000a FFF7FEFF 		bl	queue_init
 2244              	.LVL201:
1005:assembly_test.c **** 
1006:assembly_test.c **** #ifdef UBERTOOTH_ONE
1007:assembly_test.c **** 	PAEN_SET;
 2245              		.loc 1 1007 0
 2246 000e 3C4B     		ldr	r3, .L281+4
 2247 0010 8022     		movs	r2, #128
 2248 0012 1A60     		str	r2, [r3]
1008:assembly_test.c **** 	//HGM_SET;
1009:assembly_test.c **** #endif
1010:assembly_test.c **** 	cc2400_set(MANAND,  0x7fff);
 2249              		.loc 1 1010 0
 2250 0014 0D20     		movs	r0, #13
 2251 0016 47F6FF71 		movw	r1, #32767
 2252 001a FFF7FEFF 		bl	cc2400_set
 2253              	.LVL202:
1011:assembly_test.c **** 	cc2400_set(LMTST,   0x2b22);
 2254              		.loc 1 1011 0
 2255 001e 1220     		movs	r0, #18
 2256 0020 42F62231 		movw	r1, #11042
 2257 0024 FFF7FEFF 		bl	cc2400_set
 2258              	.LVL203:
1012:assembly_test.c **** 	cc2400_set(MDMTST0, 0x134b); // without PRNG
 2259              		.loc 1 1012 0
 2260 0028 1420     		movs	r0, #20
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 62


 2261 002a 41F24B31 		movw	r1, #4939
 2262 002e FFF7FEFF 		bl	cc2400_set
 2263              	.LVL204:
1013:assembly_test.c **** 	cc2400_set(GRMDM,   0x0101); // un-buffered mode, GFSK
 2264              		.loc 1 1013 0
 2265 0032 2020     		movs	r0, #32
 2266 0034 40F20111 		movw	r1, #257
 2267 0038 FFF7FEFF 		bl	cc2400_set
 2268              	.LVL205:
1014:assembly_test.c **** 	cc2400_set(MDMCTRL, 0x0029); // 160 kHz frequency deviation
 2269              		.loc 1 1014 0
 2270 003c 0320     		movs	r0, #3
 2271 003e 2921     		movs	r1, #41
 2272 0040 FFF7FEFF 		bl	cc2400_set
 2273              	.LVL206:
 2274              	.L261:
1015:assembly_test.c **** 	//FIXME maybe set RSSI.RSSI_FILT
1016:assembly_test.c **** 	while (!(cc2400_status() & XOSC16M_STABLE));
 2275              		.loc 1 1016 0 discriminator 1
 2276 0044 FFF7FEFF 		bl	cc2400_status
 2277              	.LVL207:
 2278 0048 4406     		lsls	r4, r0, #25
 2279 004a FBD5     		bpl	.L261
 2280              	.L274:
1017:assembly_test.c **** 	while ((cc2400_status() & FS_LOCK));
 2281              		.loc 1 1017 0 discriminator 1
 2282 004c FFF7FEFF 		bl	cc2400_status
 2283              	.LVL208:
 2284 0050 00F00400 		and	r0, r0, #4
 2285 0054 00F0FF04 		and	r4, r0, #255
 2286 0058 0028     		cmp	r0, #0
 2287 005a F7D1     		bne	.L274
 2288              	.LVL209:
 2289              	.L263:
1018:assembly_test.c **** 
1019:assembly_test.c **** 	while (requested_mode == MODE_SPECAN) {
 2290              		.loc 1 1019 0
 2291 005c 294B     		ldr	r3, .L281+8
 2292 005e 5A68     		ldr	r2, [r3, #4]
 2293 0060 042A     		cmp	r2, #4
 2294 0062 43D1     		bne	.L280
1020:assembly_test.c **** 		for (f = low_freq; f < high_freq + 1; f++) {
 2295              		.loc 1 1020 0
 2296 0064 284F     		ldr	r7, .L281+12
 2297 0066 7D88     		ldrh	r5, [r7, #2]
 2298              	.L279:
 2299              		.loc 1 1020 0 is_stmt 0 discriminator 2
 2300 0068 BB88     		ldrh	r3, [r7, #4]
 2301 006a ADB2     		uxth	r5, r5
 2302              	.LVL210:
 2303 006c 9BB2     		uxth	r3, r3
 2304 006e AB42     		cmp	r3, r5
 2305 0070 F4DB     		blt	.L263
 2306 0072 691E     		subs	r1, r5, #1
1021:assembly_test.c **** 			cc2400_set(FSDIV, f - 1);
 2307              		.loc 1 1021 0 is_stmt 1
 2308 0074 0220     		movs	r0, #2
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 63


 2309 0076 89B2     		uxth	r1, r1
 2310 0078 FFF7FEFF 		bl	cc2400_set
 2311              	.LVL211:
1022:assembly_test.c **** 			cc2400_strobe(SFSON);
 2312              		.loc 1 1022 0
 2313 007c 6120     		movs	r0, #97
 2314 007e FFF7FEFF 		bl	cc2400_strobe
 2315              	.LVL212:
 2316              	.L265:
1023:assembly_test.c **** 			while (!(cc2400_status() & FS_LOCK));
 2317              		.loc 1 1023 0 discriminator 1
 2318 0082 FFF7FEFF 		bl	cc2400_status
 2319              	.LVL213:
 2320 0086 4007     		lsls	r0, r0, #29
 2321 0088 FBD5     		bpl	.L265
1024:assembly_test.c **** 			cc2400_strobe(SRX);
 2322              		.loc 1 1024 0
 2323 008a 6220     		movs	r0, #98
 2324 008c FFF7FEFF 		bl	cc2400_strobe
 2325              	.LVL214:
1025:assembly_test.c **** 
1026:assembly_test.c **** 			//u32 j = 100; while (--j); //FIXME crude delay
1027:assembly_test.c **** 			buf[3 * i] = (f >> 8) & 0xFF;
 2326              		.loc 1 1027 0
 2327 0090 04EB4406 		add	r6, r4, r4, lsl #1
 2328 0094 0EAB     		add	r3, sp, #56
 2329 0096 1E44     		add	r6, r6, r3
1028:assembly_test.c **** 			buf[(3 * i) + 1] = f  & 0xFF;
1029:assembly_test.c **** 			buf[(3 * i) + 2] = cc2400_get(RSSI) >> 8;
 2330              		.loc 1 1029 0
 2331 0098 0620     		movs	r0, #6
1027:assembly_test.c **** 			buf[(3 * i) + 1] = f  & 0xFF;
 2332              		.loc 1 1027 0
 2333 009a 2B0A     		lsrs	r3, r5, #8
 2334 009c 06F8343C 		strb	r3, [r6, #-52]
1028:assembly_test.c **** 			buf[(3 * i) + 1] = f  & 0xFF;
 2335              		.loc 1 1028 0
 2336 00a0 06F8335C 		strb	r5, [r6, #-51]
 2337              		.loc 1 1029 0
 2338 00a4 FFF7FEFF 		bl	cc2400_get
 2339              	.LVL215:
1030:assembly_test.c **** 			i++;
 2340              		.loc 1 1030 0
 2341 00a8 0134     		adds	r4, r4, #1
 2342              	.LVL216:
 2343 00aa E4B2     		uxtb	r4, r4
 2344              	.LVL217:
1029:assembly_test.c **** 			i++;
 2345              		.loc 1 1029 0
 2346 00ac 000A     		lsrs	r0, r0, #8
1031:assembly_test.c **** 			if (i == 16) {
 2347              		.loc 1 1031 0
 2348 00ae 102C     		cmp	r4, #16
1029:assembly_test.c **** 			i++;
 2349              		.loc 1 1029 0
 2350 00b0 06F8320C 		strb	r0, [r6, #-50]
 2351              		.loc 1 1031 0
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 64


 2352 00b4 11D1     		bne	.L266
1032:assembly_test.c **** 				//FIXME ought to use different packet type
1033:assembly_test.c **** 				enqueue(buf);
 2353              		.loc 1 1033 0
 2354 00b6 01A8     		add	r0, sp, #4
 2355 00b8 FFF7FEFF 		bl	enqueue
 2356              	.LVL218:
1034:assembly_test.c **** 				i = 0;
1035:assembly_test.c **** 				/* send via USB */
1036:assembly_test.c **** 				epstat = USBHwEPGetStatus(BULK_IN_EP);
 2357              		.loc 1 1036 0
 2358 00bc 8220     		movs	r0, #130
 2359 00be FFF7FEFF 		bl	USBHwEPGetStatus
 2360              	.LVL219:
1037:assembly_test.c **** 				if (!(epstat & EPSTAT_B1FULL))
 2361              		.loc 1 1037 0
 2362 00c2 8106     		lsls	r1, r0, #26
1036:assembly_test.c **** 				if (!(epstat & EPSTAT_B1FULL))
 2363              		.loc 1 1036 0
 2364 00c4 0446     		mov	r4, r0
 2365              	.LVL220:
 2366              		.loc 1 1037 0
 2367 00c6 01D4     		bmi	.L267
1038:assembly_test.c **** 					dequeue();
 2368              		.loc 1 1038 0
 2369 00c8 FFF7FEFF 		bl	dequeue
 2370              	.LVL221:
 2371              	.L267:
1039:assembly_test.c **** 				if (!(epstat & EPSTAT_B2FULL))
 2372              		.loc 1 1039 0
 2373 00cc 6206     		lsls	r2, r4, #25
 2374 00ce 01D4     		bmi	.L268
1040:assembly_test.c **** 					dequeue();
 2375              		.loc 1 1040 0
 2376 00d0 FFF7FEFF 		bl	dequeue
 2377              	.LVL222:
 2378              	.L268:
1041:assembly_test.c **** 				USBHwISR();
 2379              		.loc 1 1041 0
 2380 00d4 FFF7FEFF 		bl	USBHwISR
 2381              	.LVL223:
1034:assembly_test.c **** 				/* send via USB */
 2382              		.loc 1 1034 0
 2383 00d8 0024     		movs	r4, #0
 2384              	.LVL224:
 2385              	.L266:
1042:assembly_test.c **** 			}
1043:assembly_test.c **** 
1044:assembly_test.c **** 			cc2400_strobe(SRFOFF);
 2386              		.loc 1 1044 0
 2387 00da 6420     		movs	r0, #100
 2388 00dc FFF7FEFF 		bl	cc2400_strobe
 2389              	.LVL225:
 2390              	.L269:
1045:assembly_test.c **** 			while ((cc2400_status() & FS_LOCK));
 2391              		.loc 1 1045 0 discriminator 1
 2392 00e0 FFF7FEFF 		bl	cc2400_status
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 65


 2393              	.LVL226:
 2394 00e4 4307     		lsls	r3, r0, #29
 2395 00e6 FBD4     		bmi	.L269
1020:assembly_test.c **** 			cc2400_set(FSDIV, f - 1);
 2396              		.loc 1 1020 0 discriminator 2
 2397 00e8 0135     		adds	r5, r5, #1
 2398              	.LVL227:
 2399 00ea BDE7     		b	.L279
 2400              	.LVL228:
 2401              	.L280:
1046:assembly_test.c **** 		}
1047:assembly_test.c **** 	}
1048:assembly_test.c **** 	mode = MODE_IDLE;
 2402              		.loc 1 1048 0
 2403 00ec 0022     		movs	r2, #0
 2404 00ee 9A62     		str	r2, [r3, #40]
1049:assembly_test.c **** 	RXLED_CLR;
 2405              		.loc 1 1049 0
 2406 00f0 064B     		ldr	r3, .L281+16
 2407 00f2 1022     		movs	r2, #16
 2408 00f4 1A60     		str	r2, [r3]
1050:assembly_test.c **** }
 2409              		.loc 1 1050 0
 2410 00f6 0FB0     		add	sp, sp, #60
 2411              		.cfi_def_cfa_offset 20
 2412              		@ sp needed
 2413 00f8 F0BD     		pop	{r4, r5, r6, r7, pc}
 2414              	.LVL229:
 2415              	.L282:
 2416 00fa 00BF     		.align	2
 2417              	.L281:
 2418 00fc 38C00920 		.word	537509944
 2419 0100 58C00920 		.word	537509976
 2420 0104 00000000 		.word	.LANCHOR0
 2421 0108 00000000 		.word	.LANCHOR1
 2422 010c 3CC00920 		.word	537509948
 2423              		.cfi_endproc
 2424              	.LFE17:
 2426              		.section	.text.find_giac,"ax",%progbits
 2427              		.align	1
 2428              		.global	find_giac
 2429              		.thumb
 2430              		.thumb_func
 2432              	find_giac:
 2433              	.LFB18:
1051:assembly_test.c **** 
1052:assembly_test.c **** /* an ugly but effective way to identify a GIAC (inquiry packet) */
1053:assembly_test.c **** int find_giac(u8 *buf)
1054:assembly_test.c **** {
 2434              		.loc 1 1054 0
 2435              		.cfi_startproc
 2436              		@ args = 0, pretend = 0, frame = 56
 2437              		@ frame_needed = 0, uses_anonymous_args = 0
 2438              	.LVL230:
 2439 0000 70B5     		push	{r4, r5, r6, lr}
 2440              		.cfi_def_cfa_offset 16
 2441              		.cfi_offset 4, -16
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 66


 2442              		.cfi_offset 5, -12
 2443              		.cfi_offset 6, -8
 2444              		.cfi_offset 14, -4
 2445 0002 8EB0     		sub	sp, sp, #56
 2446              		.cfi_def_cfa_offset 72
 2447              		.loc 1 1054 0
 2448 0004 0546     		mov	r5, r0
1055:assembly_test.c **** 	int i, j;
1056:assembly_test.c **** 	const uint8_t giac[8][7] = {
 2449              		.loc 1 1056 0
 2450 0006 6C46     		mov	r4, sp
 2451 0008 1C4B     		ldr	r3, .L293
 2452 000a 03F13806 		add	r6, r3, #56
 2453              	.LVL231:
 2454              	.L284:
 2455 000e 2246     		mov	r2, r4
 2456 0010 1868     		ldr	r0, [r3]	@ unaligned
 2457 0012 5968     		ldr	r1, [r3, #4]	@ unaligned
 2458 0014 0833     		adds	r3, r3, #8
 2459 0016 03C2     		stmia	r2!, {r0, r1}
 2460 0018 B342     		cmp	r3, r6
 2461 001a 1446     		mov	r4, r2
 2462 001c F7D1     		bne	.L284
 2463              	.LVL232:
 2464 001e 2846     		mov	r0, r5
 2465 0020 05F12C04 		add	r4, r5, #44
 2466              	.LVL233:
 2467              	.L285:
1057:assembly_test.c **** 			{0x47, 0x5c, 0x58, 0xcc, 0x73, 0x34, 0x5e},
1058:assembly_test.c **** 			{0x8e, 0xb8, 0xb1, 0x98, 0xe6, 0x68, 0xbc},
1059:assembly_test.c **** 			{0x11, 0xd7, 0x16, 0x33, 0x1c, 0xcd, 0x17},
1060:assembly_test.c **** 			{0x23, 0xae, 0x2c, 0x66, 0x39, 0x9a, 0x2f},
1061:assembly_test.c **** 			{0x75, 0xc5, 0x8c, 0xc7, 0x33, 0x45, 0xe7},
1062:assembly_test.c **** 			{0xeb, 0x8b, 0x19, 0x8e, 0x66, 0x8b, 0xce},
1063:assembly_test.c **** 			{0x1d, 0x71, 0x63, 0x31, 0xcc, 0xd1, 0x79},
1064:assembly_test.c **** 			{0x3a, 0xe2, 0xc6, 0x63, 0x99, 0xa2, 0xf3}};
1065:assembly_test.c **** 
1066:assembly_test.c ****     for (i = 0; i < (DMA_SIZE - 6); i++)
1067:assembly_test.c **** 			for (j = 0; j < 8; j++)
1068:assembly_test.c **** 	        	if (buf[i] == giac[j][0]
 2468              		.loc 1 1068 0
 2469 0024 10F8011B 		ldrb	r1, [r0], #1	@ zero_extendqisi2
 2470              	.LVL234:
 2471 0028 0DF10103 		add	r3, sp, #1
 2472 002c 0DF13902 		add	r2, sp, #57
 2473              	.LVL235:
 2474              	.L288:
 2475 0030 13F8015C 		ldrb	r5, [r3, #-1]	@ zero_extendqisi2
 2476 0034 8D42     		cmp	r5, r1
 2477 0036 17D1     		bne	.L286
1069:assembly_test.c **** 						&& buf[i + 1] == giac[j][1]
 2478              		.loc 1 1069 0
 2479 0038 0678     		ldrb	r6, [r0]	@ zero_extendqisi2
 2480 003a 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 2481 003c AE42     		cmp	r6, r5
 2482 003e 13D1     		bne	.L286
1070:assembly_test.c **** 						&& buf[i + 2] == giac[j][2]
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 67


 2483              		.loc 1 1070 0
 2484 0040 4678     		ldrb	r6, [r0, #1]	@ zero_extendqisi2
 2485 0042 5D78     		ldrb	r5, [r3, #1]	@ zero_extendqisi2
 2486 0044 AE42     		cmp	r6, r5
 2487 0046 0FD1     		bne	.L286
1071:assembly_test.c **** 						&& buf[i + 3] == giac[j][3]
 2488              		.loc 1 1071 0
 2489 0048 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
 2490 004a 9D78     		ldrb	r5, [r3, #2]	@ zero_extendqisi2
 2491 004c AE42     		cmp	r6, r5
 2492 004e 0BD1     		bne	.L286
1072:assembly_test.c **** 						&& buf[i + 4] == giac[j][4]
 2493              		.loc 1 1072 0
 2494 0050 C678     		ldrb	r6, [r0, #3]	@ zero_extendqisi2
 2495 0052 DD78     		ldrb	r5, [r3, #3]	@ zero_extendqisi2
 2496 0054 AE42     		cmp	r6, r5
 2497 0056 07D1     		bne	.L286
1073:assembly_test.c **** 						&& buf[i + 5] == giac[j][5]
 2498              		.loc 1 1073 0
 2499 0058 0679     		ldrb	r6, [r0, #4]	@ zero_extendqisi2
 2500 005a 1D79     		ldrb	r5, [r3, #4]	@ zero_extendqisi2
 2501 005c AE42     		cmp	r6, r5
 2502 005e 03D1     		bne	.L286
1074:assembly_test.c **** 						&& buf[i + 6] == giac[j][6])
 2503              		.loc 1 1074 0
 2504 0060 4679     		ldrb	r6, [r0, #5]	@ zero_extendqisi2
 2505 0062 5D79     		ldrb	r5, [r3, #5]	@ zero_extendqisi2
 2506 0064 AE42     		cmp	r6, r5
 2507 0066 06D0     		beq	.L289
 2508              	.L286:
 2509 0068 0733     		adds	r3, r3, #7
1067:assembly_test.c **** 	        	if (buf[i] == giac[j][0]
 2510              		.loc 1 1067 0 discriminator 2
 2511 006a 9342     		cmp	r3, r2
 2512 006c E0D1     		bne	.L288
 2513              	.LVL236:
1066:assembly_test.c **** 			for (j = 0; j < 8; j++)
 2514              		.loc 1 1066 0 discriminator 2
 2515 006e A042     		cmp	r0, r4
 2516 0070 D8D1     		bne	.L285
1075:assembly_test.c **** 					return 1;
1076:assembly_test.c **** 
1077:assembly_test.c **** 	return 0;
 2517              		.loc 1 1077 0
 2518 0072 0020     		movs	r0, #0
 2519              	.LVL237:
 2520 0074 00E0     		b	.L287
 2521              	.LVL238:
 2522              	.L289:
1075:assembly_test.c **** 					return 1;
 2523              		.loc 1 1075 0
 2524 0076 0120     		movs	r0, #1
 2525              	.LVL239:
 2526              	.L287:
1078:assembly_test.c **** }
 2527              		.loc 1 1078 0
 2528 0078 0EB0     		add	sp, sp, #56
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 68


 2529              		.cfi_def_cfa_offset 16
 2530              		@ sp needed
 2531 007a 70BD     		pop	{r4, r5, r6, pc}
 2532              	.LVL240:
 2533              	.L294:
 2534              		.align	2
 2535              	.L293:
 2536 007c BD000000 		.word	.LANCHOR2+189
 2537              		.cfi_endproc
 2538              	.LFE18:
 2540              		.section	.text.bt_test_rx,"ax",%progbits
 2541              		.align	1
 2542              		.global	bt_test_rx
 2543              		.thumb
 2544              		.thumb_func
 2546              	bt_test_rx:
 2547              	.LFB19:
1079:assembly_test.c **** 
1080:assembly_test.c **** void bt_test_rx()
1081:assembly_test.c **** {
 2548              		.loc 1 1081 0
 2549              		.cfi_startproc
 2550              		@ args = 0, pretend = 0, frame = 0
 2551              		@ frame_needed = 0, uses_anonymous_args = 0
 2552 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2553              		.cfi_def_cfa_offset 24
 2554              		.cfi_offset 3, -24
 2555              		.cfi_offset 4, -20
 2556              		.cfi_offset 5, -16
 2557              		.cfi_offset 6, -12
 2558              		.cfi_offset 7, -8
 2559              		.cfi_offset 14, -4
 2560              	.LVL241:
1082:assembly_test.c **** 	u8 *tmp = NULL;
1083:assembly_test.c **** 	int i;
1084:assembly_test.c **** 	int countdown = 0;
1085:assembly_test.c **** 	int num_giacs = 0;
 2561              		.loc 1 1085 0
 2562 0002 0024     		movs	r4, #0
1086:assembly_test.c **** 
1087:assembly_test.c **** 	dio_ssp_init();
 2563              		.loc 1 1087 0
 2564 0004 FFF7FEFF 		bl	dio_ssp_init
 2565              	.LVL242:
1084:assembly_test.c **** 	int num_giacs = 0;
 2566              		.loc 1 1084 0
 2567 0008 2546     		mov	r5, r4
1088:assembly_test.c **** 	dma_init();
 2568              		.loc 1 1088 0
 2569 000a FFF7FEFF 		bl	dma_init
 2570              	.LVL243:
1089:assembly_test.c **** 	dio_ssp_start();
 2571              		.loc 1 1089 0
 2572 000e FFF7FEFF 		bl	dio_ssp_start
 2573              	.LVL244:
1090:assembly_test.c **** 	cc2400_rx();
 2574              		.loc 1 1090 0
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 69


 2575 0012 FFF7FEFF 		bl	cc2400_rx
 2576              	.LVL245:
 2577              	.L297:
1091:assembly_test.c **** 
1092:assembly_test.c **** 	while (num_giacs < 20) {
1093:assembly_test.c **** 		/* wait for DMA transfer */
1094:assembly_test.c **** 		while ((rx_tc == 0) && (rx_err == 0));
 2578              		.loc 1 1094 0 discriminator 2
 2579 0016 1B4E     		ldr	r6, .L317
 2580 0018 1B4F     		ldr	r7, .L317+4
 2581 001a 3368     		ldr	r3, [r6]
 2582 001c 13B9     		cbnz	r3, .L296
 2583              		.loc 1 1094 0 is_stmt 0 discriminator 1
 2584 001e 3B68     		ldr	r3, [r7]
 2585 0020 002B     		cmp	r3, #0
 2586 0022 F8D0     		beq	.L297
 2587              	.L296:
1095:assembly_test.c **** 		if (rx_tc % 2) {
 2588              		.loc 1 1095 0 is_stmt 1
 2589 0024 3368     		ldr	r3, [r6]
 2590 0026 DB07     		lsls	r3, r3, #31
1096:assembly_test.c **** 			/* swap buffers */
1097:assembly_test.c **** 			tmp = active_rxbuf;
 2591              		.loc 1 1097 0
 2592 0028 41BF     		itttt	mi
 2593 002a 184B     		ldrmi	r3, .L317+8
 2594 002c 9A68     		ldrmi	r2, [r3, #8]
 2595              	.LVL246:
1098:assembly_test.c **** 			active_rxbuf = idle_rxbuf;
 2596              		.loc 1 1098 0
 2597 002e D968     		ldrmi	r1, [r3, #12]
1099:assembly_test.c **** 			idle_rxbuf = tmp;
 2598              		.loc 1 1099 0
 2599 0030 DA60     		strmi	r2, [r3, #12]
1098:assembly_test.c **** 			active_rxbuf = idle_rxbuf;
 2600              		.loc 1 1098 0
 2601 0032 48BF     		it	mi
 2602 0034 9960     		strmi	r1, [r3, #8]
1100:assembly_test.c **** 		}
1101:assembly_test.c **** 		if (rx_err)
 2603              		.loc 1 1101 0
 2604 0036 3B68     		ldr	r3, [r7]
 2605 0038 13B1     		cbz	r3, .L299
1102:assembly_test.c **** 			RXLED_CLR;
 2606              		.loc 1 1102 0
 2607 003a 154B     		ldr	r3, .L317+12
 2608 003c 1022     		movs	r2, #16
 2609              	.LVL247:
 2610 003e 1A60     		str	r2, [r3]
 2611              	.L299:
1103:assembly_test.c **** 		if (rx_tc) {
 2612              		.loc 1 1103 0
 2613 0040 3368     		ldr	r3, [r6]
 2614 0042 CBB1     		cbz	r3, .L300
1104:assembly_test.c **** 			if (rx_tc > 1)
 2615              		.loc 1 1104 0
 2616 0044 0F4B     		ldr	r3, .L317
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 70


 2617 0046 1B68     		ldr	r3, [r3]
 2618 0048 012B     		cmp	r3, #1
1105:assembly_test.c **** 				TXLED_CLR;
 2619              		.loc 1 1105 0
 2620 004a 82BF     		ittt	hi
 2621 004c 104B     		ldrhi	r3, .L317+12
 2622 004e 4FF48072 		movhi	r2, #256
 2623 0052 1A60     		strhi	r2, [r3]
1106:assembly_test.c **** 			if (find_giac(idle_rxbuf)) {
 2624              		.loc 1 1106 0
 2625 0054 0D4B     		ldr	r3, .L317+8
 2626 0056 D868     		ldr	r0, [r3, #12]
 2627 0058 FFF7FEFF 		bl	find_giac
 2628              	.LVL248:
 2629 005c 28B1     		cbz	r0, .L302
1107:assembly_test.c **** 				USRLED_SET;
 2630              		.loc 1 1107 0
 2631 005e 0D4B     		ldr	r3, .L317+16
 2632 0060 0222     		movs	r2, #2
 2633 0062 1A60     		str	r2, [r3]
 2634              	.LVL249:
1108:assembly_test.c **** 				countdown = 100;
1109:assembly_test.c **** 				num_giacs++;
 2635              		.loc 1 1109 0
 2636 0064 0134     		adds	r4, r4, #1
 2637              	.LVL250:
1108:assembly_test.c **** 				countdown = 100;
 2638              		.loc 1 1108 0
 2639 0066 6425     		movs	r5, #100
 2640 0068 06E0     		b	.L300
 2641              	.LVL251:
 2642              	.L302:
1110:assembly_test.c **** 			} else {
1111:assembly_test.c **** 				if (countdown == 0) {
 2643              		.loc 1 1111 0
 2644 006a 25B9     		cbnz	r5, .L303
1112:assembly_test.c **** 					/* win if more than 32 GIACs seen during this countdown */
1113:assembly_test.c **** 					//if (num_giacs > 32)
1114:assembly_test.c **** 						//break;
1115:assembly_test.c **** 					USRLED_CLR;
 2645              		.loc 1 1115 0
 2646 006c 084B     		ldr	r3, .L317+12
 2647 006e 0222     		movs	r2, #2
 2648 0070 1A60     		str	r2, [r3]
 2649              	.LVL252:
1116:assembly_test.c **** 					num_giacs = 0;
 2650              		.loc 1 1116 0
 2651 0072 2C46     		mov	r4, r5
 2652 0074 00E0     		b	.L300
 2653              	.LVL253:
 2654              	.L303:
1117:assembly_test.c **** 				} else {
1118:assembly_test.c **** 					--countdown;
 2655              		.loc 1 1118 0
 2656 0076 013D     		subs	r5, r5, #1
 2657              	.LVL254:
 2658              	.L300:
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 71


1119:assembly_test.c **** 				}
1120:assembly_test.c **** 			}
1121:assembly_test.c **** 		}
1122:assembly_test.c **** 
1123:assembly_test.c **** 		rx_tc = 0;
 2659              		.loc 1 1123 0
 2660 0078 0023     		movs	r3, #0
1092:assembly_test.c **** 		/* wait for DMA transfer */
 2661              		.loc 1 1092 0
 2662 007a 132C     		cmp	r4, #19
 2663              		.loc 1 1123 0
 2664 007c 3360     		str	r3, [r6]
1124:assembly_test.c **** 		rx_err = 0;
 2665              		.loc 1 1124 0
 2666 007e 3B60     		str	r3, [r7]
1092:assembly_test.c **** 		/* wait for DMA transfer */
 2667              		.loc 1 1092 0
 2668 0080 C9DD     		ble	.L297
1125:assembly_test.c **** 	}
1126:assembly_test.c **** 	//FIXME turn off rx
1127:assembly_test.c **** }
 2669              		.loc 1 1127 0
 2670 0082 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2671              	.LVL255:
 2672              	.L318:
 2673              		.align	2
 2674              	.L317:
 2675 0084 00000000 		.word	rx_tc
 2676 0088 00000000 		.word	rx_err
 2677 008c 00000000 		.word	.LANCHOR1
 2678 0090 3CC00920 		.word	537509948
 2679 0094 38C00920 		.word	537509944
 2680              		.cfi_endproc
 2681              	.LFE19:
 2683              		.section	.text.waitms,"ax",%progbits
 2684              		.align	1
 2685              		.global	waitms
 2686              		.thumb
 2687              		.thumb_func
 2689              	waitms:
 2690              	.LFB20:
1128:assembly_test.c **** 
1129:assembly_test.c **** /* delay a number of milliseconds while on internal oscillator (4 MHz) */
1130:assembly_test.c **** void waitms(u8 ms)
1131:assembly_test.c **** {
 2691              		.loc 1 1131 0
 2692              		.cfi_startproc
 2693              		@ args = 0, pretend = 0, frame = 0
 2694              		@ frame_needed = 0, uses_anonymous_args = 0
 2695              		@ link register save eliminated.
 2696              	.LVL256:
 2697 0000 7047     		bx	lr
 2698              		.cfi_endproc
 2699              	.LFE20:
 2701              		.section	.text.startup.main,"ax",%progbits
 2702              		.align	1
 2703              		.global	main
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 72


 2704              		.thumb
 2705              		.thumb_func
 2707              	main:
 2708              	.LFB21:
1132:assembly_test.c **** 	u32 i = 400 * ms;
1133:assembly_test.c **** 	while (--i);
1134:assembly_test.c **** }
1135:assembly_test.c **** 
1136:assembly_test.c **** int main()
1137:assembly_test.c **** {
 2709              		.loc 1 1137 0
 2710              		.cfi_startproc
 2711              		@ args = 0, pretend = 0, frame = 0
 2712              		@ frame_needed = 0, uses_anonymous_args = 0
 2713              		.loc 1 1137 0
 2714 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2715              		.cfi_def_cfa_offset 24
 2716              		.cfi_offset 4, -24
 2717              		.cfi_offset 5, -20
 2718              		.cfi_offset 6, -16
 2719              		.cfi_offset 7, -12
 2720              		.cfi_offset 8, -8
 2721              		.cfi_offset 14, -4
1138:assembly_test.c **** 	int i;
1139:assembly_test.c **** 
1140:assembly_test.c **** 	gpio_init();
1141:assembly_test.c **** 
1142:assembly_test.c **** 	/* blinky */
1143:assembly_test.c **** 	for (i = 0; i < 2; i++) {
1144:assembly_test.c **** 		TXLED_SET;
 2722              		.loc 1 1144 0
 2723 0004 3D4C     		ldr	r4, .L344
1145:assembly_test.c **** 		RXLED_SET;
1146:assembly_test.c **** 		USRLED_SET;
1147:assembly_test.c **** 		waitms(200);
1148:assembly_test.c **** 		TXLED_CLR;
 2724              		.loc 1 1148 0
 2725 0006 3E4D     		ldr	r5, .L344+4
1140:assembly_test.c **** 
 2726              		.loc 1 1140 0
 2727 0008 FFF7FEFF 		bl	gpio_init
 2728              	.LVL257:
1144:assembly_test.c **** 		RXLED_SET;
 2729              		.loc 1 1144 0
 2730 000c 4FF48076 		mov	r6, #256
1145:assembly_test.c **** 		RXLED_SET;
 2731              		.loc 1 1145 0
 2732 0010 1022     		movs	r2, #16
1146:assembly_test.c **** 		waitms(200);
 2733              		.loc 1 1146 0
 2734 0012 0223     		movs	r3, #2
1144:assembly_test.c **** 		RXLED_SET;
 2735              		.loc 1 1144 0
 2736 0014 2660     		str	r6, [r4]
1145:assembly_test.c **** 		USRLED_SET;
 2737              		.loc 1 1145 0
 2738 0016 2260     		str	r2, [r4]
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 73


1146:assembly_test.c **** 		waitms(200);
 2739              		.loc 1 1146 0
 2740 0018 2360     		str	r3, [r4]
 2741              	.LVL258:
 2742              		.loc 1 1148 0
 2743 001a 2E60     		str	r6, [r5]
1149:assembly_test.c **** 		RXLED_CLR;
 2744              		.loc 1 1149 0
 2745 001c 2A60     		str	r2, [r5]
1150:assembly_test.c **** 		USRLED_CLR;
 2746              		.loc 1 1150 0
 2747 001e 2B60     		str	r3, [r5]
 2748              	.LVL259:
1144:assembly_test.c **** 		RXLED_SET;
 2749              		.loc 1 1144 0
 2750 0020 2660     		str	r6, [r4]
1145:assembly_test.c **** 		USRLED_SET;
 2751              		.loc 1 1145 0
 2752 0022 2260     		str	r2, [r4]
1146:assembly_test.c **** 		waitms(200);
 2753              		.loc 1 1146 0
 2754 0024 2360     		str	r3, [r4]
1148:assembly_test.c **** 		RXLED_CLR;
 2755              		.loc 1 1148 0
 2756 0026 2E60     		str	r6, [r5]
1149:assembly_test.c **** 		USRLED_CLR;
 2757              		.loc 1 1149 0
 2758 0028 2A60     		str	r2, [r5]
 2759              		.loc 1 1150 0
 2760 002a 2B60     		str	r3, [r5]
 2761              	.LVL260:
1151:assembly_test.c **** 		waitms(200);
1152:assembly_test.c **** 	}
1153:assembly_test.c **** 
1154:assembly_test.c **** 	/* cc2400_test */
1155:assembly_test.c **** 	cc2400_init();
 2762              		.loc 1 1155 0
 2763 002c FFF7FEFF 		bl	cc2400_init
 2764              	.LVL261:
1156:assembly_test.c **** 	TXLED_SET;
 2765              		.loc 1 1156 0
 2766 0030 2660     		str	r6, [r4]
 2767              	.LVL262:
1157:assembly_test.c **** 	waitms(200);
1158:assembly_test.c **** 	TXLED_CLR;
 2768              		.loc 1 1158 0
 2769 0032 2E60     		str	r6, [r5]
 2770              	.LVL263:
1159:assembly_test.c **** 	waitms(200);
1160:assembly_test.c **** 	cc2400_reset();
 2771              		.loc 1 1160 0
 2772 0034 FFF7FEFF 		bl	cc2400_reset
 2773              	.LVL264:
1161:assembly_test.c **** 	TXLED_SET;
 2774              		.loc 1 1161 0
 2775 0038 2660     		str	r6, [r4]
 2776              	.LVL265:
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 74


1162:assembly_test.c **** 	waitms(200);
1163:assembly_test.c **** 	TXLED_CLR;
1164:assembly_test.c **** 	waitms(200);
1165:assembly_test.c **** 	if (cc2400_get(AGCCTRL) != 0xf700)
 2777              		.loc 1 1165 0
 2778 003a 0420     		movs	r0, #4
1163:assembly_test.c **** 	waitms(200);
 2779              		.loc 1 1163 0
 2780 003c 2E60     		str	r6, [r5]
 2781              	.LVL266:
 2782              		.loc 1 1165 0
 2783 003e FFF7FEFF 		bl	cc2400_get
 2784              	.LVL267:
 2785 0042 B0F5774F 		cmp	r0, #63232
 2786 0046 00D0     		beq	.L321
 2787              	.L343:
1166:assembly_test.c **** 		while(1);
 2788              		.loc 1 1166 0 discriminator 1
 2789 0048 FEE7     		b	.L343
 2790              	.L321:
1167:assembly_test.c **** 	TXLED_SET;
 2791              		.loc 1 1167 0
 2792 004a 2660     		str	r6, [r4]
 2793              	.LVL268:
1168:assembly_test.c **** 	waitms(200);
1169:assembly_test.c **** 
1170:assembly_test.c **** 	/* clock_test */
1171:assembly_test.c **** 	clock_start();
 2794              		.loc 1 1171 0
 2795 004c FFF7FEFF 		bl	clock_start
 2796              	.LVL269:
 2797 0050 0426     		movs	r6, #4
 2798              	.LVL270:
 2799              	.L323:
1172:assembly_test.c **** 	for (i = 0; i < 4; i++) {
1173:assembly_test.c **** 		RXLED_SET;
 2800              		.loc 1 1173 0 discriminator 3
 2801 0052 1027     		movs	r7, #16
1174:assembly_test.c **** 		wait(2);
 2802              		.loc 1 1174 0 discriminator 3
 2803 0054 0220     		movs	r0, #2
1173:assembly_test.c **** 		wait(2);
 2804              		.loc 1 1173 0 discriminator 3
 2805 0056 2760     		str	r7, [r4]
 2806              		.loc 1 1174 0 discriminator 3
 2807 0058 FFF7FEFF 		bl	wait
 2808              	.LVL271:
1175:assembly_test.c **** 		RXLED_CLR;
 2809              		.loc 1 1175 0 discriminator 3
 2810 005c 2F60     		str	r7, [r5]
1176:assembly_test.c **** 		wait(2);
 2811              		.loc 1 1176 0 discriminator 3
 2812 005e 0220     		movs	r0, #2
 2813 0060 FFF7FEFF 		bl	wait
 2814              	.LVL272:
1172:assembly_test.c **** 		RXLED_SET;
 2815              		.loc 1 1172 0 discriminator 3
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 75


 2816 0064 013E     		subs	r6, r6, #1
 2817              	.LVL273:
1173:assembly_test.c **** 		wait(2);
 2818              		.loc 1 1173 0 discriminator 3
 2819 0066 DFF89480 		ldr	r8, .L344
1172:assembly_test.c **** 		RXLED_SET;
 2820              		.loc 1 1172 0 discriminator 3
 2821 006a F2D1     		bne	.L323
 2822              	.LBB18:
 2823              	.LBB19:
 541:assembly_test.c **** 	clkn_high = 0;
 2824              		.loc 1 541 0
 2825 006c 254A     		ldr	r2, .L344+8
 542:assembly_test.c **** 
 2826              		.loc 1 542 0
 2827 006e 264B     		ldr	r3, .L344+12
 541:assembly_test.c **** 	clkn_high = 0;
 2828              		.loc 1 541 0
 2829 0070 0224     		movs	r4, #2
 2830              	.LBE19:
 2831              	.LBE18:
1177:assembly_test.c **** 	}
1178:assembly_test.c **** 	RXLED_SET;
 2832              		.loc 1 1178 0
 2833 0072 C8F80070 		str	r7, [r8]
 2834              	.LBB21:
 2835              	.LBB20:
 541:assembly_test.c **** 	clkn_high = 0;
 2836              		.loc 1 541 0
 2837 0076 1460     		str	r4, [r2]
 542:assembly_test.c **** 
 2838              		.loc 1 542 0
 2839 0078 1E70     		strb	r6, [r3]
 549:assembly_test.c **** 	T0MR0 = 3276799999;
 2840              		.loc 1 549 0
 2841 007a 244B     		ldr	r3, .L344+16
 2842 007c 0421     		movs	r1, #4
 2843 007e 1960     		str	r1, [r3]
 550:assembly_test.c **** 	T0MCR = TMCR_MR0R | TMCR_MR0I;
 2844              		.loc 1 550 0
 2845 0080 2349     		ldr	r1, .L344+20
 2846 0082 D960     		str	r1, [r3, #12]
 551:assembly_test.c **** 	ISER0 |= ISER0_ISE_TIMER0;
 2847              		.loc 1 551 0
 2848 0084 0321     		movs	r1, #3
 2849 0086 9960     		str	r1, [r3, #8]
 552:assembly_test.c **** 
 2850              		.loc 1 552 0
 2851 0088 2249     		ldr	r1, .L344+24
 2852 008a 0B68     		ldr	r3, [r1]
 2853 008c 2343     		orrs	r3, r3, r4
 2854 008e 0B60     		str	r3, [r1]
 555:assembly_test.c **** }
 2855              		.loc 1 555 0
 2856 0090 0123     		movs	r3, #1
 2857 0092 1360     		str	r3, [r2]
 2858              	.LBE20:
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 76


 2859              	.LBE21:
1179:assembly_test.c **** 
1180:assembly_test.c **** 	clkn_init();
1181:assembly_test.c **** 	bt_test_rx();
 2860              		.loc 1 1181 0
 2861 0094 FFF7FEFF 		bl	bt_test_rx
 2862              	.LVL274:
1182:assembly_test.c **** 	USRLED_SET;
 2863              		.loc 1 1182 0
 2864 0098 C8F80040 		str	r4, [r8]
1183:assembly_test.c **** 
1184:assembly_test.c **** 	/*
1185:assembly_test.c **** 	 * Now we function like bluetooth_rxtx so that the USB interface can be
1186:assembly_test.c **** 	 * tested.
1187:assembly_test.c **** 	 */
1188:assembly_test.c **** 	ubertooth_usb_init();
 2865              		.loc 1 1188 0
 2866 009c FFF7FEFF 		bl	ubertooth_usb_init
 2867              	.LVL275:
 2868              	.L324:
1189:assembly_test.c **** 
1190:assembly_test.c **** 	while (1) {
1191:assembly_test.c **** 		USBHwISR();
 2869              		.loc 1 1191 0
 2870 00a0 FFF7FEFF 		bl	USBHwISR
 2871              	.LVL276:
1192:assembly_test.c **** 		if (rx_pkts)
 2872              		.loc 1 1192 0
 2873 00a4 1C4B     		ldr	r3, .L344+28
 2874 00a6 1A68     		ldr	r2, [r3]
 2875 00a8 12B1     		cbz	r2, .L325
1193:assembly_test.c **** 			bt_stream_rx();
 2876              		.loc 1 1193 0
 2877 00aa FFF7FEFF 		bl	bt_stream_rx
 2878              	.LVL277:
 2879 00ae F7E7     		b	.L324
 2880              	.L325:
1194:assembly_test.c **** 		else if (requested_mode == MODE_TX_TEST && mode != MODE_TX_TEST)
 2881              		.loc 1 1194 0
 2882 00b0 5A68     		ldr	r2, [r3, #4]
 2883 00b2 032A     		cmp	r2, #3
 2884 00b4 05D1     		bne	.L327
 2885              		.loc 1 1194 0 is_stmt 0 discriminator 1
 2886 00b6 9A6A     		ldr	r2, [r3, #40]
 2887 00b8 032A     		cmp	r2, #3
 2888 00ba 02D0     		beq	.L327
1195:assembly_test.c **** 			cc2400_txtest();
 2889              		.loc 1 1195 0 is_stmt 1
 2890 00bc FFF7FEFF 		bl	cc2400_txtest
 2891              	.LVL278:
 2892 00c0 EEE7     		b	.L324
 2893              	.L327:
1196:assembly_test.c **** 		else if (requested_mode == MODE_RANGE_TEST && mode != MODE_RANGE_TEST)
 2894              		.loc 1 1196 0
 2895 00c2 5A68     		ldr	r2, [r3, #4]
 2896 00c4 052A     		cmp	r2, #5
 2897 00c6 06D1     		bne	.L328
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 77


 2898              		.loc 1 1196 0 is_stmt 0 discriminator 1
 2899 00c8 134A     		ldr	r2, .L344+28
 2900 00ca 926A     		ldr	r2, [r2, #40]
 2901 00cc 052A     		cmp	r2, #5
 2902 00ce 02D0     		beq	.L328
1197:assembly_test.c **** 			cc2400_rangetest();
 2903              		.loc 1 1197 0 is_stmt 1
 2904 00d0 FFF7FEFF 		bl	cc2400_rangetest
 2905              	.LVL279:
 2906 00d4 E4E7     		b	.L324
 2907              	.L328:
1198:assembly_test.c **** 		else if (requested_mode == MODE_REPEATER && mode != MODE_REPEATER)
 2908              		.loc 1 1198 0
 2909 00d6 5A68     		ldr	r2, [r3, #4]
 2910 00d8 062A     		cmp	r2, #6
 2911 00da 05D1     		bne	.L329
 2912              		.loc 1 1198 0 is_stmt 0 discriminator 1
 2913 00dc 0E4A     		ldr	r2, .L344+28
 2914 00de 926A     		ldr	r2, [r2, #40]
 2915 00e0 062A     		cmp	r2, #6
 2916 00e2 01D0     		beq	.L329
1199:assembly_test.c **** 			cc2400_repeater();
 2917              		.loc 1 1199 0 is_stmt 1
 2918 00e4 FFF7FEFF 		bl	cc2400_repeater
 2919              	.LVL280:
 2920              	.L329:
1200:assembly_test.c **** 		else if (requested_mode == MODE_SPECAN && mode != MODE_SPECAN)
 2921              		.loc 1 1200 0
 2922 00e8 5B68     		ldr	r3, [r3, #4]
 2923 00ea 042B     		cmp	r3, #4
 2924 00ec D8D1     		bne	.L324
 2925              		.loc 1 1200 0 is_stmt 0 discriminator 1
 2926 00ee 0A4B     		ldr	r3, .L344+28
 2927 00f0 9B6A     		ldr	r3, [r3, #40]
 2928 00f2 042B     		cmp	r3, #4
 2929 00f4 D4D0     		beq	.L324
1201:assembly_test.c **** 			specan();
 2930              		.loc 1 1201 0 is_stmt 1
 2931 00f6 FFF7FEFF 		bl	specan
 2932              	.LVL281:
 2933 00fa D1E7     		b	.L324
 2934              	.L345:
 2935              		.align	2
 2936              	.L344:
 2937 00fc 38C00920 		.word	537509944
 2938 0100 3CC00920 		.word	537509948
 2939 0104 04400040 		.word	1073758212
 2940 0108 00000000 		.word	clkn_high
 2941 010c 0C400040 		.word	1073758220
 2942 0110 FFFF4FC3 		.word	-1018167297
 2943 0114 00E100E0 		.word	-536813312
 2944 0118 00000000 		.word	.LANCHOR0
 2945              		.cfi_endproc
 2946              	.LFE21:
 2948              		.global	tail
 2949              		.global	head
 2950              		.comm	fifo,8192,4
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 78


 2951              		.global	status
 2952              		.global	rx_pkts
 2953              		.comm	rx_err,4,4
 2954              		.comm	rx_tc,4,4
 2955              		.comm	rx_dma_lli2,16,4
 2956              		.comm	rx_dma_lli1,16,4
 2957              		.global	high_freq
 2958              		.global	low_freq
 2959              		.global	channel
 2960              		.global	modulation
 2961              		.global	requested_mode
 2962              		.global	mode
 2963              		.comm	rr,5,1
 2964              		.global	idle_rxbuf
 2965              		.global	active_rxbuf
 2966              		.comm	rxbuf2,50,1
 2967              		.comm	rxbuf1,50,1
 2968              		.comm	clkn_high,1,1
 2969              		.section	.rodata
 2970              		.set	.LANCHOR2,. + 0
 2973              	abDescriptors:
 2974 0000 12       		.byte	18
 2975 0001 01       		.byte	1
 2976 0002 00       		.byte	0
 2977 0003 02       		.byte	2
 2978 0004 FF       		.byte	-1
 2979 0005 00       		.byte	0
 2980 0006 00       		.byte	0
 2981 0007 40       		.byte	64
 2982 0008 FF       		.byte	-1
 2983 0009 FF       		.byte	-1
 2984 000a 04       		.byte	4
 2985 000b 00       		.byte	0
 2986 000c 00       		.byte	0
 2987 000d 01       		.byte	1
 2988 000e 01       		.byte	1
 2989 000f 02       		.byte	2
 2990 0010 03       		.byte	3
 2991 0011 01       		.byte	1
 2992 0012 09       		.byte	9
 2993 0013 02       		.byte	2
 2994 0014 20       		.byte	32
 2995 0015 00       		.byte	0
 2996 0016 01       		.byte	1
 2997 0017 01       		.byte	1
 2998 0018 00       		.byte	0
 2999 0019 80       		.byte	-128
 3000 001a 32       		.byte	50
 3001 001b 09       		.byte	9
 3002 001c 04       		.byte	4
 3003 001d 00       		.byte	0
 3004 001e 00       		.byte	0
 3005 001f 02       		.byte	2
 3006 0020 FF       		.byte	-1
 3007 0021 00       		.byte	0
 3008 0022 00       		.byte	0
 3009 0023 00       		.byte	0
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 79


 3010 0024 07       		.byte	7
 3011 0025 05       		.byte	5
 3012 0026 82       		.byte	-126
 3013 0027 02       		.byte	2
 3014 0028 40       		.byte	64
 3015 0029 00       		.byte	0
 3016 002a 00       		.byte	0
 3017 002b 07       		.byte	7
 3018 002c 05       		.byte	5
 3019 002d 05       		.byte	5
 3020 002e 02       		.byte	2
 3021 002f 40       		.byte	64
 3022 0030 00       		.byte	0
 3023 0031 00       		.byte	0
 3024 0032 04       		.byte	4
 3025 0033 03       		.byte	3
 3026 0034 09       		.byte	9
 3027 0035 04       		.byte	4
 3028 0036 44       		.byte	68
 3029 0037 03       		.byte	3
 3030 0038 68       		.byte	104
 3031 0039 00       		.byte	0
 3032 003a 74       		.byte	116
 3033 003b 00       		.byte	0
 3034 003c 74       		.byte	116
 3035 003d 00       		.byte	0
 3036 003e 70       		.byte	112
 3037 003f 00       		.byte	0
 3038 0040 3A       		.byte	58
 3039 0041 00       		.byte	0
 3040 0042 2F       		.byte	47
 3041 0043 00       		.byte	0
 3042 0044 2F       		.byte	47
 3043 0045 00       		.byte	0
 3044 0046 75       		.byte	117
 3045 0047 00       		.byte	0
 3046 0048 62       		.byte	98
 3047 0049 00       		.byte	0
 3048 004a 65       		.byte	101
 3049 004b 00       		.byte	0
 3050 004c 72       		.byte	114
 3051 004d 00       		.byte	0
 3052 004e 74       		.byte	116
 3053 004f 00       		.byte	0
 3054 0050 6F       		.byte	111
 3055 0051 00       		.byte	0
 3056 0052 6F       		.byte	111
 3057 0053 00       		.byte	0
 3058 0054 74       		.byte	116
 3059 0055 00       		.byte	0
 3060 0056 68       		.byte	104
 3061 0057 00       		.byte	0
 3062 0058 2E       		.byte	46
 3063 0059 00       		.byte	0
 3064 005a 73       		.byte	115
 3065 005b 00       		.byte	0
 3066 005c 6F       		.byte	111
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 80


 3067 005d 00       		.byte	0
 3068 005e 75       		.byte	117
 3069 005f 00       		.byte	0
 3070 0060 72       		.byte	114
 3071 0061 00       		.byte	0
 3072 0062 63       		.byte	99
 3073 0063 00       		.byte	0
 3074 0064 65       		.byte	101
 3075 0065 00       		.byte	0
 3076 0066 66       		.byte	102
 3077 0067 00       		.byte	0
 3078 0068 6F       		.byte	111
 3079 0069 00       		.byte	0
 3080 006a 72       		.byte	114
 3081 006b 00       		.byte	0
 3082 006c 67       		.byte	103
 3083 006d 00       		.byte	0
 3084 006e 65       		.byte	101
 3085 006f 00       		.byte	0
 3086 0070 2E       		.byte	46
 3087 0071 00       		.byte	0
 3088 0072 6E       		.byte	110
 3089 0073 00       		.byte	0
 3090 0074 65       		.byte	101
 3091 0075 00       		.byte	0
 3092 0076 74       		.byte	116
 3093 0077 00       		.byte	0
 3094 0078 2F       		.byte	47
 3095 0079 00       		.byte	0
 3096 007a 30       		.byte	48
 3097 007b 03       		.byte	3
 3098 007c 75       		.byte	117
 3099 007d 00       		.byte	0
 3100 007e 62       		.byte	98
 3101 007f 00       		.byte	0
 3102 0080 65       		.byte	101
 3103 0081 00       		.byte	0
 3104 0082 72       		.byte	114
 3105 0083 00       		.byte	0
 3106 0084 74       		.byte	116
 3107 0085 00       		.byte	0
 3108 0086 6F       		.byte	111
 3109 0087 00       		.byte	0
 3110 0088 6F       		.byte	111
 3111 0089 00       		.byte	0
 3112 008a 74       		.byte	116
 3113 008b 00       		.byte	0
 3114 008c 68       		.byte	104
 3115 008d 00       		.byte	0
 3116 008e 20       		.byte	32
 3117 008f 00       		.byte	0
 3118 0090 61       		.byte	97
 3119 0091 00       		.byte	0
 3120 0092 73       		.byte	115
 3121 0093 00       		.byte	0
 3122 0094 73       		.byte	115
 3123 0095 00       		.byte	0
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 81


 3124 0096 65       		.byte	101
 3125 0097 00       		.byte	0
 3126 0098 6D       		.byte	109
 3127 0099 00       		.byte	0
 3128 009a 62       		.byte	98
 3129 009b 00       		.byte	0
 3130 009c 6C       		.byte	108
 3131 009d 00       		.byte	0
 3132 009e 79       		.byte	121
 3133 009f 00       		.byte	0
 3134 00a0 5F       		.byte	95
 3135 00a1 00       		.byte	0
 3136 00a2 74       		.byte	116
 3137 00a3 00       		.byte	0
 3138 00a4 65       		.byte	101
 3139 00a5 00       		.byte	0
 3140 00a6 73       		.byte	115
 3141 00a7 00       		.byte	0
 3142 00a8 74       		.byte	116
 3143 00a9 00       		.byte	0
 3144 00aa 12       		.byte	18
 3145 00ab 03       		.byte	3
 3146 00ac 30       		.byte	48
 3147 00ad 00       		.byte	0
 3148 00ae 30       		.byte	48
 3149 00af 00       		.byte	0
 3150 00b0 30       		.byte	48
 3151 00b1 00       		.byte	0
 3152 00b2 30       		.byte	48
 3153 00b3 00       		.byte	0
 3154 00b4 30       		.byte	48
 3155 00b5 00       		.byte	0
 3156 00b6 30       		.byte	48
 3157 00b7 00       		.byte	0
 3158 00b8 30       		.byte	48
 3159 00b9 00       		.byte	0
 3160 00ba 31       		.byte	49
 3161 00bb 00       		.byte	0
 3162 00bc 00       		.byte	0
 3163              	.LC0:
 3164 00bd 47       		.byte	71
 3165 00be 5C       		.byte	92
 3166 00bf 58       		.byte	88
 3167 00c0 CC       		.byte	-52
 3168 00c1 73       		.byte	115
 3169 00c2 34       		.byte	52
 3170 00c3 5E       		.byte	94
 3171 00c4 8E       		.byte	-114
 3172 00c5 B8       		.byte	-72
 3173 00c6 B1       		.byte	-79
 3174 00c7 98       		.byte	-104
 3175 00c8 E6       		.byte	-26
 3176 00c9 68       		.byte	104
 3177 00ca BC       		.byte	-68
 3178 00cb 11       		.byte	17
 3179 00cc D7       		.byte	-41
 3180 00cd 16       		.byte	22
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 82


 3181 00ce 33       		.byte	51
 3182 00cf 1C       		.byte	28
 3183 00d0 CD       		.byte	-51
 3184 00d1 17       		.byte	23
 3185 00d2 23       		.byte	35
 3186 00d3 AE       		.byte	-82
 3187 00d4 2C       		.byte	44
 3188 00d5 66       		.byte	102
 3189 00d6 39       		.byte	57
 3190 00d7 9A       		.byte	-102
 3191 00d8 2F       		.byte	47
 3192 00d9 75       		.byte	117
 3193 00da C5       		.byte	-59
 3194 00db 8C       		.byte	-116
 3195 00dc C7       		.byte	-57
 3196 00dd 33       		.byte	51
 3197 00de 45       		.byte	69
 3198 00df E7       		.byte	-25
 3199 00e0 EB       		.byte	-21
 3200 00e1 8B       		.byte	-117
 3201 00e2 19       		.byte	25
 3202 00e3 8E       		.byte	-114
 3203 00e4 66       		.byte	102
 3204 00e5 8B       		.byte	-117
 3205 00e6 CE       		.byte	-50
 3206 00e7 1D       		.byte	29
 3207 00e8 71       		.byte	113
 3208 00e9 63       		.byte	99
 3209 00ea 31       		.byte	49
 3210 00eb CC       		.byte	-52
 3211 00ec D1       		.byte	-47
 3212 00ed 79       		.byte	121
 3213 00ee 3A       		.byte	58
 3214 00ef E2       		.byte	-30
 3215 00f0 C6       		.byte	-58
 3216 00f1 63       		.byte	99
 3217 00f2 99       		.byte	-103
 3218 00f3 A2       		.byte	-94
 3219 00f4 F3       		.byte	-13
 3220              		.section	.rodata.str1.1,"aMS",%progbits,1
 3221              	.LC1:
 3222 0000 6769742D 		.ascii	"git-1ee8434\000"
 3222      31656538 
 3222      34333400 
 3223              		.data
 3224              		.align	2
 3225              		.set	.LANCHOR1,. + 0
 3228              	channel:
 3229 0000 8909     		.short	2441
 3232              	low_freq:
 3233 0002 6009     		.short	2400
 3236              	high_freq:
 3237 0004 B309     		.short	2483
 3238 0006 0000     		.space	2
 3241              	active_rxbuf:
 3242 0008 00000000 		.word	rxbuf1
 3245              	idle_rxbuf:
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 83


 3246 000c 00000000 		.word	rxbuf2
 3247              		.bss
 3248              		.align	2
 3249              		.set	.LANCHOR0,. + 0
 3252              	rx_pkts:
 3253 0000 00000000 		.space	4
 3256              	requested_mode:
 3257 0004 00000000 		.space	4
 3260              	modulation:
 3261 0008 00000000 		.space	4
 3264              	head:
 3265 000c 00000000 		.space	4
 3268              	tail:
 3269 0010 00000000 		.space	4
 3272              	status:
 3273 0014 00       		.space	1
 3276              	abVendorReqData:
 3277 0015 00000000 		.space	17
 3277      00000000 
 3277      00000000 
 3277      00000000 
 3277      00
 3278 0026 0000     		.space	2
 3281              	mode:
 3282 0028 00000000 		.space	4
 3283              		.text
 3284              	.Letext0:
 3285              		.file 2 "/Users/ahesham/research/Bluetooth/boss/uberCode/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/4
 3286              		.file 3 "/Users/ahesham/research/Bluetooth/boss/uberCode/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/4
 3287              		.file 4 "../../host/libubertooth/src/ubertooth_interface.h"
 3288              		.file 5 "../common/ubertooth.h"
 3289              		.file 6 "../common/lpcusb/target/type.h"
 3290              		.file 7 "../common/lpcusb/target/usbstruct.h"
 3291              		.file 8 "../common/lpcusb/target/usbapi.h"
 3292              		.file 9 "/Users/ahesham/research/Bluetooth/boss/uberCode/gcc-arm-none-eabi/arm-none-eabi/include/s
 3293              		.file 10 "../common/lpcusb/target/usbhw_lpc.h"
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 84


DEFINED SYMBOLS
                            *ABS*:0000000000000000 assembly_test.c
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:19     .text.dma_init:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:23     .text.dma_init:0000000000000000 dma_init
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:142    .text.dma_init:0000000000000094 $d
                            *COM*:0000000000000010 rx_dma_lli1
                            *COM*:0000000000000032 rxbuf1
                            *COM*:0000000000000010 rx_dma_lli2
                            *COM*:0000000000000032 rxbuf2
                            *COM*:0000000000000004 rx_tc
                            *COM*:0000000000000004 rx_err
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:161    .text.dio_ssp_start:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:165    .text.dio_ssp_start:0000000000000000 dio_ssp_start
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:204    .text.dio_ssp_start:0000000000000038 $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:213    .text.usb_vendor_request_handler:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:217    .text.usb_vendor_request_handler:0000000000000000 usb_vendor_request_handler
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:245    .text.usb_vendor_request_handler:0000000000000014 $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:279    .text.usb_vendor_request_handler:0000000000000058 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:719    .text.usb_vendor_request_handler:000000000000029c $d
                            *COM*:0000000000000005 rr
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:736    .text.queue_init:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:741    .text.queue_init:0000000000000000 queue_init
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:758    .text.queue_init:000000000000000c $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:763    .text.enqueue:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:768    .text.enqueue:0000000000000000 enqueue
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:861    .text.enqueue:000000000000005c $d
                            *COM*:0000000000000001 clkn_high
                            *COM*:0000000000002000 fifo
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:870    .text.dequeue:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:875    .text.dequeue:0000000000000000 dequeue
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:927    .text.dequeue:0000000000000038 $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:934    .text.ubertooth_usb_init:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:939    .text.ubertooth_usb_init:0000000000000000 ubertooth_usb_init
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:972    .text.ubertooth_usb_init:0000000000000020 $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:979    .text.TIMER0_IRQHandler:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:984    .text.TIMER0_IRQHandler:0000000000000000 TIMER0_IRQHandler
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:1011   .text.TIMER0_IRQHandler:0000000000000020 $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:1016   .text.DMA_IRQHandler:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:1021   .text.DMA_IRQHandler:0000000000000000 DMA_IRQHandler
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:1069   .text.DMA_IRQHandler:0000000000000040 $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:1080   .text.cc2400_rx:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:1085   .text.cc2400_rx:0000000000000000 cc2400_rx
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:1202   .text.cc2400_rx:00000000000000b4 $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:1209   .text.cc2400_txtest:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:1214   .text.cc2400_txtest:0000000000000000 cc2400_txtest
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:1323   .text.cc2400_txtest:00000000000000a0 $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:1331   .text.cc2400_rangetest:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:1336   .text.cc2400_rangetest:0000000000000000 cc2400_rangetest
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:1765   .text.cc2400_rangetest:0000000000000294 $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:1777   .text.cc2400_repeater:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:1782   .text.cc2400_repeater:0000000000000000 cc2400_repeater
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2052   .text.cc2400_repeater:0000000000000178 $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2061   .text.bt_stream_rx:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2066   .text.bt_stream_rx:0000000000000000 bt_stream_rx
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2207   .text.bt_stream_rx:00000000000000ac $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2217   .text.specan:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2222   .text.specan:0000000000000000 specan
ARM GAS  /var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s 			page 85


/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2418   .text.specan:00000000000000fc $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2427   .text.find_giac:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2432   .text.find_giac:0000000000000000 find_giac
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2536   .text.find_giac:000000000000007c $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2541   .text.bt_test_rx:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2546   .text.bt_test_rx:0000000000000000 bt_test_rx
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2675   .text.bt_test_rx:0000000000000084 $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2684   .text.waitms:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2689   .text.waitms:0000000000000000 waitms
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2702   .text.startup.main:0000000000000000 $t
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2707   .text.startup.main:0000000000000000 main
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2937   .text.startup.main:00000000000000fc $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:3268   .bss:0000000000000010 tail
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:3264   .bss:000000000000000c head
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:3272   .bss:0000000000000014 status
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:3252   .bss:0000000000000000 rx_pkts
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:3236   .data:0000000000000004 high_freq
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:3232   .data:0000000000000002 low_freq
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:3228   .data:0000000000000000 channel
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:3260   .bss:0000000000000008 modulation
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:3256   .bss:0000000000000004 requested_mode
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:3281   .bss:0000000000000028 mode
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:3245   .data:000000000000000c idle_rxbuf
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:3241   .data:0000000000000008 active_rxbuf
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:2973   .rodata:0000000000000000 abDescriptors
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:3224   .data:0000000000000000 $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:3248   .bss:0000000000000000 $d
/var/folders/s6/4bph2j8d1nvcsgz5bgm0yhx00000gn/T//cceZq5Cx.s:3276   .bss:0000000000000015 abVendorReqData
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
cc2400_get
cc2400_set
reset
strlen
memcpy
iap_entry
bootloader_ctrl
USBHwEPWrite
USBInit
USBRegisterDescriptors
USBRegisterRequestHandler
USBHwConnect
cc2400_status
cc2400_strobe
cc2400_set8
cc2400_get8
dio_ssp_init
USBHwEPGetStatus
USBHwISR
gpio_init
cc2400_init
cc2400_reset
clock_start
wait
